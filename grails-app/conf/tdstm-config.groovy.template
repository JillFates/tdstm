/**
* tdstm-config.groovy.default
* 
* This is an optional configuration file that is used to override settings in the grails-app/conf/*.groovy files. To use this,
* copy this file to a configuration directory  renaming it appropriately (e.g. /etc/tdstm-config.groovy) and then provide a 
* JVM -D argument in the start up of the application as shown:
*
*	grails -Dtdstm.config.location=/etc/tdstm-config.groovy run-app
*	java -Dtdstm.config.location=/etc/tdstm-config.groovy ...
*
**/

//
// Database Properties
//
dataSource {
	// TDS Transitional Manager
	url = "jdbc:mysql://localhost/tdstm"
	username = "tdstm"
	password = "tdstm"
}

//
// Mail Properties
//
grails {
	mail {
		host = "smtp.transitionaldata.com"
		port = 587
		username = 'tm-prod'
		password = "7UJuhepR"
		props = [
			"mail.smtp.auth":"true",
			"mail.smtp.socketFactory.port":"587",
			"mail.smtp.socketFactory.class":"javax.net.ssl.SSLSocketFactory",
			"mail.smtp.socketFactory.fallback":"false"
			]
	}
}
grails.mail.default.from = "TDS TransitionManager <tm-prod@transitionaldata.com>"

log4j = {
   // Configure classes to log at the various logging levels (defaulting to error)
   error 'org.codehaus.groovy.grails.web.servlet',  //  controllers
         'org.codehaus.groovy.grails.web.pages', //  GSP
         'org.codehaus.groovy.grails.web.sitemesh', //  layouts
         'org.codehaus.groovy.grails.web.mapping.filter', // URL mapping
         'org.codehaus.groovy.grails.web.mapping', // URL mapping
         'org.codehaus.groovy.grails.commons', // core / classloading
         'org.codehaus.groovy.grails.plugins', // plugins
         'org.codehaus.groovy.grails.orm.hibernate', // hibernate integration
         'org.springframework',
         'net.sf.ehcache.hibernate',
         'util.GrailsUtil'

   // trace 'org.hibernate'
   // debug 'org.hibernate'
   debug 'service.PmoAssetTrackingService'
   // info 'org.codehaus.groovy.grails.web.mapping' // URL mapping
   // off 'org.hibernate'

   // Set level for all application artifacts
   // info "grails.app"
   // Set for a specific controller
   // debug "grails.app.controller.YourController"
   // Set for a specific domain class
   // debug "grails.app.domain.Book"
   // Set for all taglibs
   // info "grails.app.tagLib"

   appenders {
      def commonPattern = "%d{[EEE, dd-MMM-yyyy @ HH:mm:ss.SSS]} [%t] %-5p %c %x - %m%n"
      def appName = appName ?: "tdstm"
      def logDirectory = 'target'
      if (System.properties.getProperty('catalina.base')) {
           logDirectory = "${System.properties.getProperty('catalina.base')}/logs"
      }

      // Use this if we want to modify the default appender called 'stdout'.
      console name:'stdout', layout:pattern(conversionPattern: '[%t] %-5p %c{2} %x - %m%n')

      // Application log file
      rollingFile name:'applicationLog',
              file:"${logDirectory}/${appName}.log",
              maxFileSize:'500MB',
              maxBackupIndex:7
              layout:pattern(conversionPattern: commonPattern)

      // Stacktrace log file
      // Use the 'null' line only, if we want to prevent creation of a stacktrace.log file.
      // 'null' name:'stacktrace'
      rollingFile name:'stacktraceLog',
              file:"$logDirectory/${appName}-stacktrace.log",
              maxFileSize:'500MB',
              maxBackupIndex:7
              layout:pattern(conversionPattern: commonPattern)
   }

   root {
      // Set the logging level for the various appenders
      info 'stdout', 'applicationLog'
      // additivity = false
   }
   additivity.StackTrace=false
}


