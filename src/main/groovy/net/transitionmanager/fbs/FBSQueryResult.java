// automatically generated by the FlatBuffers compiler, do not modify

package net.transitionmanager.fbs;

import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;
import groovy.transform.CompileStatic;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
/**
 * <p>This part of the model represents the following JSON part in the ETLProcessorResult structure.</p>
 * <pre>
 * "criteria": [
 *     {"propertyName": "assetName", "operator": "eq","value": "zulu01"},
 *     {"propertyName": "priority", "operator": "gt","value": 2},
 * ],
 * </pre>
 *
 * <p>Use following the example to create a new instance of FBSQueryResult:</p>
 * <pre>
 *  FBSQueryResult.createFBSQueryResult(builder,
 *     builder.createString('Application'),
 *     FBSQueryResult.createCriteriaVector(builder,
 *         (int[]) [
 *                     FBSQueryResultCriteria.createFBSQueryResultCriteria(builder,
 *                         builder.createString('propertyName'),
 *                         builder.createString('eq'),
 *                         builder.createString('zulu01'),
 *                         builder.createString('String')
 *                     )
 *                   ]
 *     )
 * )
 * </pre>
 */
@CompileStatic
public final class FBSQueryResult extends Table {
    public static FBSQueryResult getRootAsFBSQueryResult(ByteBuffer _bb) {
        return getRootAsFBSQueryResult(_bb, new FBSQueryResult());
    }

    public static FBSQueryResult getRootAsFBSQueryResult(ByteBuffer _bb, FBSQueryResult obj) {
        _bb.order(ByteOrder.LITTLE_ENDIAN);
        return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb));
    }

    public void __init(int _i, ByteBuffer _bb) {
        bb_pos = _i;
        bb = _bb;
        vtable_start = bb_pos - bb.getInt(bb_pos);
        vtable_size = bb.getShort(vtable_start);
    }

    public FBSQueryResult __assign(int _i, ByteBuffer _bb) {
        __init(_i, _bb);
        return this;
    }

    public String domain() {
        int o = __offset(4);
        return o != 0 ? __string(o + bb_pos) : null;
    }

    public ByteBuffer domainAsByteBuffer() {
        return __vector_as_bytebuffer(4, 1);
    }

    public ByteBuffer domainInByteBuffer(ByteBuffer _bb) {
        return __vector_in_bytebuffer(_bb, 4, 1);
    }

    public FBSQueryResultCriteria criteria(int j) {
        return criteria(new FBSQueryResultCriteria(), j);
    }

    public FBSQueryResultCriteria criteria(FBSQueryResultCriteria obj, int j) {
        int o = __offset(6);
        return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null;
    }

    public int criteriaLength() {
        int o = __offset(6);
        return o != 0 ? __vector_len(o) : 0;
    }

    public static int createFBSQueryResult(FlatBufferBuilder builder,
                                           int domainOffset,
                                           int criteriaOffset) {
        builder.startObject(2);
        FBSQueryResult.addCriteria(builder, criteriaOffset);
        FBSQueryResult.addDomain(builder, domainOffset);
        return FBSQueryResult.endFBSQueryResult(builder);
    }

    public static void startFBSQueryResult(FlatBufferBuilder builder) {
        builder.startObject(2);
    }

    public static void addDomain(FlatBufferBuilder builder, int domainOffset) {
        builder.addOffset(0, domainOffset, 0);
    }

    public static void addCriteria(FlatBufferBuilder builder, int criteriaOffset) {
        builder.addOffset(1, criteriaOffset, 0);
    }

    public static int createCriteriaVector(FlatBufferBuilder builder, int[] data) {
        builder.startVector(4, data.length, 4);
        for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]);
        return builder.endVector();
    }

    public static void startCriteriaVector(FlatBufferBuilder builder, int numElems) {
        builder.startVector(4, numElems, 4);
    }

    public static int endFBSQueryResult(FlatBufferBuilder builder) {
        int o = builder.endObject();
        return o;
    }
}

