// automatically generated by the FlatBuffers compiler, do not modify

package net.transitionmanager.fbs;

import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;
import groovy.transform.CompileStatic;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
/**
 *  <p>This part of the model represents the following JSON part in the ETLProcessorResult structure:</p>
 * <pre>
 *  {
 *     "propertyName": "assetName",
 *     "operator": "eq",
 *     "value": "zulu01"
 *  },
 * </pre>
 *
 * <p>Use following the example to create a new instance of FBSQueryResult:</p>
 * <pre>
 * FBSQueryResultCriteria.createFBSQueryResultCriteria(builder,
 *     builder.createString('propertyName'),
 *     builder.createString('eq'),
 *     builder.createString('zulu01'),
 *     builder.createString('String')
 * )
 * </pre>
 */
@CompileStatic
public final class FBSQueryResultCriteria extends Table {
    public static FBSQueryResultCriteria getRootAsFBSQueryResultCriteria(ByteBuffer _bb) {
        return getRootAsFBSQueryResultCriteria(_bb, new FBSQueryResultCriteria());
    }

    public static FBSQueryResultCriteria getRootAsFBSQueryResultCriteria(ByteBuffer _bb, FBSQueryResultCriteria obj) {
        _bb.order(ByteOrder.LITTLE_ENDIAN);
        return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb));
    }

    public void __init(int _i, ByteBuffer _bb) {
        bb_pos = _i;
        bb = _bb;
        vtable_start = bb_pos - bb.getInt(bb_pos);
        vtable_size = bb.getShort(vtable_start);
    }

    public FBSQueryResultCriteria __assign(int _i, ByteBuffer _bb) {
        __init(_i, _bb);
        return this;
    }

    public String propertyName() {
        int o = __offset(4);
        return o != 0 ? __string(o + bb_pos) : null;
    }

    public ByteBuffer propertyNameAsByteBuffer() {
        return __vector_as_bytebuffer(4, 1);
    }

    public ByteBuffer propertyNameInByteBuffer(ByteBuffer _bb) {
        return __vector_in_bytebuffer(_bb, 4, 1);
    }

    public String operator() {
        int o = __offset(6);
        return o != 0 ? __string(o + bb_pos) : null;
    }

    public ByteBuffer operatorAsByteBuffer() {
        return __vector_as_bytebuffer(6, 1);
    }

    public ByteBuffer operatorInByteBuffer(ByteBuffer _bb) {
        return __vector_in_bytebuffer(_bb, 6, 1);
    }

    public String value() {
        int o = __offset(8);
        return o != 0 ? __string(o + bb_pos) : null;
    }

    public ByteBuffer valueAsByteBuffer() {
        return __vector_as_bytebuffer(8, 1);
    }

    public ByteBuffer valueInByteBuffer(ByteBuffer _bb) {
        return __vector_in_bytebuffer(_bb, 8, 1);
    }

    public String type() {
        int o = __offset(10);
        return o != 0 ? __string(o + bb_pos) : null;
    }

    public ByteBuffer typeAsByteBuffer() {
        return __vector_as_bytebuffer(10, 1);
    }

    public ByteBuffer typeInByteBuffer(ByteBuffer _bb) {
        return __vector_in_bytebuffer(_bb, 10, 1);
    }

    public static int createFBSQueryResultCriteria(FlatBufferBuilder builder,
                                                   int propertyNameOffset,
                                                   int operatorOffset,
                                                   int valueOffset,
                                                   int typeOffset) {
        builder.startObject(4);
        FBSQueryResultCriteria.addType(builder, typeOffset);
        FBSQueryResultCriteria.addValue(builder, valueOffset);
        FBSQueryResultCriteria.addOperator(builder, operatorOffset);
        FBSQueryResultCriteria.addPropertyName(builder, propertyNameOffset);
        return FBSQueryResultCriteria.endFBSQueryResultCriteria(builder);
    }

    public static void startFBSQueryResultCriteria(FlatBufferBuilder builder) {
        builder.startObject(4);
    }

    public static void addPropertyName(FlatBufferBuilder builder, int propertyNameOffset) {
        builder.addOffset(0, propertyNameOffset, 0);
    }

    public static void addOperator(FlatBufferBuilder builder, int operatorOffset) {
        builder.addOffset(1, operatorOffset, 0);
    }

    public static void addValue(FlatBufferBuilder builder, int valueOffset) {
        builder.addOffset(2, valueOffset, 0);
    }

    public static void addType(FlatBufferBuilder builder, int typeOffset) {
        builder.addOffset(3, typeOffset, 0);
    }

    public static int endFBSQueryResultCriteria(FlatBufferBuilder builder) {
        int o = builder.endObject();
        return o;
    }
}

