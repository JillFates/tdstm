// automatically generated by the FlatBuffers compiler, do not modify

package net.transitionmanager.fbs;

import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
/**
 * <p>This part of the model represents the following JSON part in the ETLProcessorResult structure:</p>
 * <pre>
 * "ETLInfo": {
 *     "originalFilename": "/tmp/EtlSampleData_2Z1scLRqEIg21Y5zYe5sTaAa5oqE21wo.csv"
 * },
 * </pre>
 * <p>Example of an instance creation:</p>
 * <pre>
 *     FBSInfo.createFBSInfo(builder, builder.createString(etlProcessorResultInstance.ETLInfo.filename)),
 * </pre>
 */
public final class FBSInfo extends Table {
    public static FBSInfo getRootAsFBSInfo(ByteBuffer _bb) {
        return getRootAsFBSInfo(_bb, new FBSInfo());
    }

    public static FBSInfo getRootAsFBSInfo(ByteBuffer _bb, FBSInfo obj) {
        _bb.order(ByteOrder.LITTLE_ENDIAN);
        return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb));
    }

    public void __init(int _i, ByteBuffer _bb) {
        bb_pos = _i;
        bb = _bb;
        vtable_start = bb_pos - bb.getInt(bb_pos);
        vtable_size = bb.getShort(vtable_start);
    }

    public FBSInfo __assign(int _i, ByteBuffer _bb) {
        __init(_i, _bb);
        return this;
    }

    public String originalFilename() {
        int o = __offset(4);
        return o != 0 ? __string(o + bb_pos) : null;
    }

    public ByteBuffer originalFilenameAsByteBuffer() {
        return __vector_as_bytebuffer(4, 1);
    }

    public ByteBuffer originalFilenameInByteBuffer(ByteBuffer _bb) {
        return __vector_in_bytebuffer(_bb, 4, 1);
    }

    public static int createFBSInfo(FlatBufferBuilder builder,
                                    int originalFilenameOffset) {
        builder.startObject(1);
        FBSInfo.addOriginalFilename(builder, originalFilenameOffset);
        return FBSInfo.endFBSInfo(builder);
    }

    public static void startFBSInfo(FlatBufferBuilder builder) {
        builder.startObject(1);
    }

    public static void addOriginalFilename(FlatBufferBuilder builder, int originalFilenameOffset) {
        builder.addOffset(0, originalFilenameOffset, 0);
    }

    public static int endFBSInfo(FlatBufferBuilder builder) {
        int o = builder.endObject();
        return o;
    }
}

