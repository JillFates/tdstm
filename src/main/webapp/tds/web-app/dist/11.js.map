{"version":3,"sources":["webpack:///./web-app/app-js/modules/dependencies/components/view-grid/dependencies-view-grid.component.ts","webpack:///./web-app/app-js/modules/dependencies/dependencies-routing.states.ts","webpack:///./web-app/app-js/modules/dependencies/dependencies.module.ts","webpack:///./web-app/app-js/modules/dependencies/model/dependencies-column.model.ts","webpack:///./web-app/app-js/modules/dependencies/service/dependencies.service.ts","webpack:///./web-app/app-js/modules/dependencies/service/open-asset-dependencies.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOuB;AAKT;AAQU;AAKT;AAEgC;AAEY;AAKkB;AAC7E,yEAAyE;AAI7B;AACkC;AAIlC;AAE0C;AAIX;AACwB;AAC4C;AAGjE;AACI;AAC0B;AACtC;AAetE;IAeC,uCACS,KAAqB,EACrB,iBAAoC,EACpC,MAAuB,EACvB,QAAyB,EACzB,mBAAwC,EACxC,mBAAwC,EACxC,4BAA0D,EAC1D,aAA4B,EAC1B,YAA8B;QARhC,UAAK,GAAL,KAAK,CAAgB;QACrB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,WAAM,GAAN,MAAM,CAAiB;QACvB,aAAQ,GAAR,QAAQ,CAAiB;QACzB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,iCAA4B,GAA5B,4BAA4B,CAA8B;QAC1D,kBAAa,GAAb,aAAa,CAAe;QAC1B,iBAAY,GAAZ,YAAY,CAAkB;QApB/B,mBAAc,GAAmB,sGAAc,CAAC,YAAY,CAAC;QACpD,oBAAe,GAAG,wFAA+B,CAAC;QACpD,mBAAc,GAAQ,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC;QAChE,mBAAc,GAAG,EAAE,CAAC;QAKX,qBAAgB,GAAG,CAAC,WAAW,EAAE,eAAe,EAAE,MAAM,CAAC,CAAC;QACrE,sBAAiB,GAAG,IAAI,CAAC;IAYjC,CAAC;IAED,gDAAQ,GAAR;QACC,kCAAkC;QAClC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAC7C,8BAA8B;QAC9B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,4BAA4B,CAAC,oBAAoB,CAAC,IAAI,CAAC,gBAAgB,CAAC;QAEtG,IAAI,CAAC,cAAc,GAAG,IAAI,4CAAO,EAAO,CAAC;QACzC,IAAI,CAAC,cAAc,GAAG,IAAI,oDAAe,CAAM,IAAI,CAAC,KAAK,CAAC,CAAC;QAC3D,IAAI,CAAC,gBAAgB,GAAG,IAAI,4CAAO,EAAY,CAAC;QAEhD,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAEhC,0BAA0B;QAC1B,IAAI,CAAC,6BAA6B,EAAE,CAAC;QACrC,IAAI,CAAC,8BAA8B,EAAE,CAAC;IACvC,CAAC;IAED;;OAEG;IACH,mDAAW,GAAX;QACC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;IAED;;OAEG;IACK,gEAAwB,GAAhC;QACC,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,wGAAc,CAAC,SAAS,CAAC,CAAC;QACnE,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IAC/C,CAAC;IAED;;OAEG;IACK,qEAA6B,GAArC;QAAA,iBAqBC;QApBA,IAAI,CAAC,cAAc;aACjB,IAAI;QACJ,0CAA0C;QAC1C,gEAAS,CAAC,IAAI,CAAC,cAAc,CAAC;QAC9B,+DAA+D;QAC/D,2DAAI,CAAC,UAAC,WAAW,EAAE,OAAO,IAAK,QAAC,mDAAI,WAAW,EAAK,OAAO,EAAE,EAA9B,CAA8B,EAAE,EAAE,CAAC;QAClE,qBAAqB;QACrB,+DAAQ,CAAC,UAAC,KAAqB,IAAK,YAAI,CAAC,mBAAmB,EAAE,CAAC,KAAK,CAAC;aACnE,IAAI,CAAC,0DAAG,CAAC,UAAC,OAA0B,IAAK,QAAC,mDAAI,KAAK,IAAE,QAAQ,EAAE,OAAO,IAAE,EAA/B,CAA+B,CAAE,CAAC,EADzC,CACyC,CAAC,CAC9E;aACA,SAAS,CAAC,UAAC,KAAqB;YAChC,8CAA8C;YAC9C,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,oBAAoB;YACpB,KAAI,CAAC,eAAe,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YACtC,kDAAkD;YAClD,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC;YAC5C,uEAAuE;YACvE,KAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;QACxC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,+BAA+B,CAAC,CAAC;IACpD,CAAC;IAED;;OAEG;IACK,mDAAW,GAAnB,UAAoB,YAAiB;QAAjB,gDAAiB;QACpC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACxC,CAAC;IAED;;OAEG;IACK,gEAAwB,GAAhC;QACC,OAAO;YACN,OAAO,EAAE,oDAAM,CAAC,EAAE,EAAE,CAAC,UAAU,EAAE,MAAM,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;YAChE,SAAS,EAAE,IAAI,CAAC,mBAAmB,EAAE;YACrC,QAAQ,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE;SAChC;IACF,CAAC;IAED;;;OAGG;IACK,sEAA8B,GAAtC;QAAA,iBAcC;QAbA,IAAI,CAAC,gBAAgB;aACnB,IAAI;QACJ,0CAA0C;QAC1C,gEAAS,CAAC,IAAI,CAAC,cAAc,CAAC;QAC9B,wBAAwB;QACxB,qEAAc,CAAC,IAAI,CAAC,cAAc,CAAC;QACnC,8DAA8D;QAC9D,0DAAG,CAAC,UAAC,EAA2B;gBAA1B,iBAAS,EAAE,sBAAc;YAC9B,YAAI,CAAC,4BAA4B,CAAC,SAAS,EAAE,cAAc,CAAC;QAA5D,CAA4D,CAAC,CAC9D;aACA,SAAS,CAAC,UAAC,cAA8B;YACzC,KAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;QAClC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,gCAAgC,CAAC,CAAC,CAAC;IACtD,CAAC;IAED;;;OAGG;IACK,2DAAmB,GAA3B;QACC,OAAO;YACN,IAAI,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC;YAC3B,MAAM,EAAE;gBACP,OAAO,EAAE,EAAE;gBACX,KAAK,EAAE,KAAK;aACZ;YACD,IAAI,EAAE,+EAAsB;YAC5B,IAAI,EAAE,CAAC;SACP;IACF,CAAC;IAED;;OAEG;IACK,2DAAmB,GAA3B;QACC,IAAM,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAChG,OAAO,qDAAO,CAAC,eAAe,EAAE,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3E,CAAC;IAED;;;;OAIG;IACK,gEAAwB,GAAhC,UAAiC,KAAqB;QAC/C,wBAA4C,EAA3C,cAAI,EAAE,cAAI,EAAE,cAAI,EAAE,kBAAM,CAAoB;QAEnD,OAAO;YACN,IAAI,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC;YACvB,IAAI;YACJ,OAAO,EAAE,MAAM,IAAI,MAAM,CAAC,OAAO,IAAI,EAAE;YACvC,IAAI,EAAE,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,cAAc;SAC5C,CAAC;IACH,CAAC;IAED;;;OAGG;IACK,uDAAe,GAAvB,UAAwB,KAAgB;QAChC,qBAAI,EAAE,qBAAM,EAAE,iBAAI,EAAE,iBAAI,CAAU;QAEzC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAC1B,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC;IAED;;;OAGG;IACO,uDAAe,GAAzB,UAA0B,KAA2B;QACpD,IAAI,CAAC,WAAW,CAAC,EAAC,SAAS,EAAE,KAAK,EAAC,CAAC,CAAC;IACtC,CAAC;IAED;;;;OAIG;IACO,yDAAiB,GAA3B,UAA4B,KAAa,EAAE,MAAW;QACrD,IAAI,QAAQ,GAAG,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,KAAK,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;QAExE,IAAM,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;aAC9B,MAAM,CAAC,UAAC,GAAG,IAAK,QAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,EAAd,CAAc,CAAC;aAC/B,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,EAAE,EAAN,CAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEtC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAC,KAAK,SAAE,IAAI,QAAC,CAAC;IAC1C,CAAC;IAED;;;OAGG;IACO,6DAAqB,GAA/B;QACC,IAAM,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAEhG,IAAM,kBAAkB,GAAG;YAC1B,KAAK,EAAE,aAAa;YACpB,UAAU,EAAE,aAAa,KAAK,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,0BAA0B,CAAC,CAAC,CAAC;gBAC1D,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,0BAA0B,CAAC;SACzD,CAAC;QAEF,OAAO,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAI,CAAC;IACtD,CAAC;IAED;;;;OAIG;IACO,6DAAqB,GAA/B,UAAgC,eAAiC;QAChE,IAAI,eAAe,CAAC,OAAO,EAAE;YAC5B,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC;YACxC,IAAI,CAAC,WAAW,EAAE,CAAC;SACnB;IACF,CAAC;IAED;;;OAGG;IACK,mEAA2B,GAAnC;QACC,IAAM,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAChG,IAAM,SAAS,GAAG,mDAAK,IAAI,CAAC,KAAK,CAAC,SAAS,EAAK,EAAC,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAC,CAAC,CAAC;QAC5F,IAAM,KAAK,GAAG,mDAAI,IAAI,CAAC,KAAK,IAAE,SAAS,cAAC,CAAC;QAEzC,OAAO,IAAI,CAAC,mBAAmB;aAC7B,oBAAoB,CAAC,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,EAAE,eAAe,CAAC;aAC3E,IAAI;QACJ,0CAA0C;QAC1C,gEAAS,CAAC,IAAI,CAAC,cAAc,CAAC;QAC9B,qEAAqE;QACrE,0DAAG,CAAC,iBAAO;YACV,QAAC,EAAE,SAAS,EAAM,OAAO,CAAC,iBAAiB,QAAC,EAAE,qBAAqB,EAAM,OAAO,CAAC,cAAc,QAAC,EAAE,CAAC;QAAnG,CAAmG,CAAC,CACrG;IACH,CAAC;IAED;;OAEG;IACO,yDAAiB,GAA3B;QAAA,iBAGC;QAFA,IAAI,CAAC,2BAA2B,EAAE;aAChC,SAAS,CAAC,UAAC,OAAO,IAAK,YAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,OAAO,CAAC,EAA1C,CAA0C,EAAE,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;IACzG,CAAC;IAED;;;;OAIG;IACK,oEAA4B,GAApC,UAAqC,SAAmB,EAAE,cAA8B;QACvF,IAAM,OAAO,GAAG,oDAAM,CAAC,EAAE,EAAE,CAAC,WAAW,EAAE,QAAQ,EAAE,SAAS,CAAC,EAAE,cAAc,CAAC;aAC5E,MAAM,CAAC,UAAC,IAAS,IAAK,WAAI,CAAC,KAAK,KAAK,SAAS,CAAC,KAAK,EAA9B,CAA8B,CAAC,CAAC;QAExD,IAAI,SAAS,CAAC,IAAI,EAAE;YACnB,OAAO,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,IAAI,EAAG,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;SAC/E;QAED,IAAM,WAAW,GAAG,mDAAK,CAAC,cAAc,CAAC,CAAC;QAC1C,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;QAE/C,OAAO,WAAW,CAAC;IACpB,CAAC;IAED;;OAEG;IACK,gDAAQ,GAAhB,UAAiB,YAAoB;QACpC,OAAO,UAAC,KAAK,IAAK,cAAO,CAAC,KAAK,CAAC,qBAAmB,YAAY,kBAAY,KAAK,CAAC,OAAO,IAAI,KAAK,CAAE,CAAC,EAAlF,CAAkF;IACrG,CAAC;IAED;;;OAGG;IACK,wDAAgB,GAAxB;QACC,IAAI,CAAC,uBAAuB,GAAG,IAAI,wFAAuB,EAAE,CAAC;QAE7D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,uBAAuB,CAAC,OAAO;aACxD,MAAM,CAAC,UAAC,WAAqB,EAAE,OAAwB;YACvD,OAAO,OAAO,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAK,WAAW,SAAE,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC,WAAW,CAAC;QACpF,CAAC,EAAE,EAAE,CAAC,CAAC;IACT,CAAC;IAED;;OAEG;IACK,0DAAkB,GAA1B,UAA2B,YAAmB;QAC7C,oCAAoC;QACpC,IAAI,CAAC,mBAAmB,CAAC,uBAAuB,CAAC,YAAY,CAAC,CAAC;QAC/D,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;YACvB,IAAI,EAAE,6BAA6B;SACnC,CAAC,CAAC;QACH,uGAAuG;QACvG,MAAM,CAAC,wBAAwB,CAAC,CAAC,QAAQ,CAAC,0BAA0B,CAAC,CAAC;IACvE,CAAC;IAED;;;;;OAKG;IACQ,+DAAuB,GAAlC,UAAmC,QAAa;QAAhD,iBAwBC;QAvBA,IAAM,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;YAC/C,OAAO;SACP;QAED,IAAM,eAAe,GAAoB;YACxC,EAAE,EAAE,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC;YAChC,KAAK,EAAE,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC;YACtC,WAAW,EAAE,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC;YAC7C,cAAc,EAAE,QAAQ,CAAC,QAAQ,CAAC,gBAAgB,CAAC;SACnD,CAAC;QAEF,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,eAAe,CAAC;aAChD,IAAI,CACJ,gEAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAC9B;aACA,SAAS,CACT,WAAC,IAAI,YAAI,CAAC,WAAW,EAAE,EAAlB,CAAkB,EACvB,UAAC,KAAK;YACL,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAI,CAAC,WAAW,EAAE,CAAC;QACpB,CAAC,CACD,CAAC;IACJ,CAAC;IAnViC;QAAjC,+DAAS,CAAC,qBAAqB,CAAC;wEAAsB,oJAAyB;8EAAC;IAC9D;QAAlB,+DAAS,CAAC,MAAM,CAAC;wEAAO,0EAAa;+DAAC;IAF3B,6BAA6B;QALzC,+DAAS,CAAC;YACV,QAAQ,EAAE,4BAA4B;YACtC,WAAW,EAAE,uGAAuG;YACpH,eAAe,EAAE,qEAAuB,CAAC,MAAM;SAC/C,CAAC;+EAiBe,8DAAc;YACF,+DAAiB;YAC5B,mFAAe;YACb,iFAAe;YACJ,2FAAmB;YACnB,iFAAmB;YACV,sGAA4B;YAC3C,2EAAa;YACZ,0FAAgB;OAxB7B,6BAA6B,CAqVzC;IAAD,oCAAC;CAAA;AArVyC;;;;;;;;;;;;;;;;;;;;;;;;;;ACzE1C,UAAU;AAC6B;AACc;AAErD,WAAW;AACuE;AACU;AACX;AACjF,WAAW;AAC8D;AACzE,aAAa;AACyF;AAKtG;;;GAGG;AACH,IAAM,uBAAuB,GAAG,oBAAoB,CAAC;AAErD;IAAA;IAIA,CAAC;IAHuB,oCAAiB,GAAG;QAC1C,GAAG,EAAE,MAAM;KACX,CAAC;IACH,yBAAC;CAAA;AAJ8B;AAMxB,IAAM,iBAAiB,GAAW;IACxC,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,kBAAkB,CAAC,iBAAiB,CAAC,GAAG,EAAC;IACnF;QACC,IAAI,EAAE,kBAAkB,CAAC,iBAAiB,CAAC,GAAG;QAC9C,IAAI,EAAE;YACL,IAAI,EAAE;gBACL,KAAK,EAAE,yBAAyB;gBAChC,WAAW,EAAE,EAAE;gBACf,IAAI,EAAE,CAAC,eAAe,EAAE,yBAAyB,CAAC;gBAClD,OAAO,EAAE,EAAE,MAAM,EAAE,uBAAuB,EAAE,KAAK,EAAE,sCAAsC,EAAE,OAAO,EAAE,IAAI,EAAE;aAC1G;YACD,YAAY,EAAE,IAAI;SAClB;QACD,SAAS,EAAE,oHAA6B;QACxC,WAAW,EAAE;YACZ,sFAAgB;YAChB,4FAAoB;YACpB,sGAAyB;SAAC;QAC3B,OAAO,EAAE;YACR,OAAO,EAAE,8FAAkB;SAC3B;QACD,qBAAqB,EAAE,QAAQ;KAC/B;CACD,CAAC;AAMF;IAAA;IACA,CAAC;IADY,uBAAuB;QAJnC,8DAAQ,CAAC;YACT,OAAO,EAAE,CAAC,4DAAY,CAAC;YACvB,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;SACnD,CAAC;OACW,uBAAuB,CACnC;IAAD,8BAAC;CAAA;AADmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzDpC,UAAU;AAC6B;AACM;AACF;AAC3C,SAAS;AAC+C;AACQ;AAChE,gBAAgB;AAC2D;AAC3E,eAAe;AACuD;AACtE,QAAQ;AAC0D;AACV;AACE;AACE;AACM;AACR;AACU;AACpE,aAAa;AACyF;AACtG,WAAW;AACuE;AACD;AACjF,WAAW;AACwD;AACoB;AACzB;AAqC9D;IAAA;IACA,CAAC;IADY,kBAAkB;QAnC9B,8DAAQ,CAAC;YACT,OAAO,EAAE;gBACR,UAAU;gBACV,4DAAY;gBACZ,kEAAY;gBACZ,wFAAmB;gBACnB,0DAAW;gBACX,QAAQ;gBACR,iFAAe;gBACf,uEAAU;gBACV,0EAAW;gBACX,gFAAc;gBACd,wEAAU;gBACV,4EAAY;gBACZ,oFAAgB;gBAChB,QAAQ;gBACR,oFAAuB;aACvB;YACD,YAAY,EAAE;gBACb,qHAA6B;aAC7B;YACD,SAAS,EAAE;gBACV,UAAU;gBACV,+FAAkB;gBAClB,6FAAoB;gBACpB,kFAAmB;gBACnB,sGAA4B;gBAC5B,WAAW;gBACX,0EAAU;gBACV,0EAAa;aACb;YACD,OAAO,EAAE,CAAC,qHAA6B,CAAC;YACxC,eAAe,EAAE,EAAE;SACnB,CAAC;OAEW,kBAAkB,CAC9B;IAAD,yBAAC;CAAA;AAD8B;;;;;;;;;;;;;AC9D/B;AAAA;AAAA;;GAEG;AACH;IAGC;QACC,IAAI,CAAC,OAAO,GAAG;YACd;gBACC,KAAK,EAAE,OAAO;gBACd,QAAQ,EAAE,WAAW;gBACrB,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,GAAG;gBACV,MAAM,EAAE,IAAI;aAEZ;YACD;gBACC,KAAK,EAAE,YAAY;gBACnB,QAAQ,EAAE,WAAW;gBACrB,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,GAAG;gBACV,MAAM,EAAE,IAAI;aACZ;YACD;gBACC,KAAK,EAAE,QAAQ;gBACf,QAAQ,EAAE,aAAa;gBACvB,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,GAAG;aACV;YACD;gBACC,KAAK,EAAE,YAAY;gBACnB,QAAQ,EAAE,WAAW;gBACrB,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,GAAG;gBACV,MAAM,EAAE,KAAK;aACb;YACD;gBACC,KAAK,EAAE,MAAM;gBACb,QAAQ,EAAE,MAAM;gBAChB,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,GAAG;aACV;YACD;gBACC,KAAK,EAAE,YAAY;gBACnB,QAAQ,EAAE,eAAe;gBACzB,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,GAAG;aACV;YACD;gBACC,KAAK,EAAE,gBAAgB;gBACvB,QAAQ,EAAE,eAAe;gBACzB,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,GAAG;aACV;YACD;gBACC,KAAK,EAAE,kBAAkB;gBACzB,QAAQ,EAAE,iBAAiB;gBAC3B,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,GAAG;aACV;YACD;gBACC,KAAK,EAAE,gBAAgB;gBACvB,QAAQ,EAAE,eAAe;gBACzB,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,GAAG;gBACV,MAAM,EAAE,KAAK;aACb;YACD;gBACC,KAAK,EAAE,QAAQ;gBACf,QAAQ,EAAE,QAAQ;gBAClB,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,GAAG;aACV;YACD;gBACC,KAAK,EAAE,SAAS;gBAChB,QAAQ,EAAE,SAAS;gBACnB,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,GAAG;aACV;YACD;gBACC,KAAK,EAAE,WAAW;gBAClB,QAAQ,EAAE,WAAW;gBACrB,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,GAAG;aACV;YACD;gBACC,KAAK,EAAE,WAAW;gBAClB,QAAQ,EAAE,WAAW;gBACrB,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,GAAG;aACV;YACD;gBACC,KAAK,EAAE,IAAI;gBACX,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,GAAG;aACV;YACD;gBACC,KAAK,EAAE,IAAI;gBACX,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,GAAG;aACV;YACD;gBACC,KAAK,EAAE,IAAI;gBACX,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,GAAG;aACV;YACD;gBACC,KAAK,EAAE,IAAI;gBACX,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,GAAG;aACV;SACD,CAAC;IACH,CAAC;IACF,8BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACvHwC;AAE2C;AAEN;AAI3C;AAUnC;IAEC,6BAAoB,IAAqB,EAAU,iBAAoC;QAAnE,SAAI,GAAJ,IAAI,CAAiB;QAAU,sBAAiB,GAAjB,iBAAiB,CAAmB;QADtE,aAAQ,GAAG,iBAAiB,CAAC;IAC4C,CAAC;IAE3F;;;;OAIG;IACH,6CAAe,GAAf,UAAgB,MAAiC;QAChD,IAAM,QAAQ,GAAM,IAAI,CAAC,QAAQ,sBAAmB,CAAC;QAC9C,sBAAI,EAAE,kBAAI,EAAE,kBAAI,EAAE,wBAAO,CAAW;QAC3C,IAAM,OAAO,GAAG;YACf,IAAI,EAAE,IAAI;YACV,IAAI;YACJ,IAAI,EAAE,IAAI,CAAC,KAAK;YAChB,IAAI,EAAE,IAAI,CAAC,GAAG;SACd,CAAC;QAEF,iCAAiC;QACjC,OAAO,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,OAAO;YAC3B,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC;YACnC,OAAO,GAAG,CAAC;QACZ,CAAC,EAAE,OAAO,CAAC,CAAC;QAEZ,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;aACtD,IAAI,CACJ,0DAAG,CAAC,UAAC,QAAa;YACjB,IAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;YAC5B,wCAAgE,EAA/D,oBAAiB,EAAjB,sCAAiB,EAAE,aAAS,EAAT,8BAAS,CAAoC;YACrE,OAAO,EAAC,IAAI,EAAE,YAAY,EAAE,KAAK,SAAC,CAAC;QACpC,CAAC,CAAC,CACF;IACH,CAAC;IAjCW,mBAAmB;QAD/B,gEAAU,EAAE;+EAGc,2FAAe,EAA6B,qFAAiB;OAF3E,mBAAmB,CAkC/B;IAAD,0BAAC;CAAA;AAlC+B;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBS;AACT;AAIR;AACqE;AACjC;AACwD;AACzC;AACI;AAU/E;IACC,sCACS,MAAuB,EACvB,iBAAmC;QADnC,WAAM,GAAN,MAAM,CAAiB;QACvB,sBAAiB,GAAjB,iBAAiB,CAAkB;IAE5C,CAAC;IAED;;;OAGG;IACH,2DAAoB,GAApB,UAAqB,aAAuB;QAA5C,iBAMC;QALA,OAAO,UAAC,WAAmB,EAAE,eAAgC;YAC5D,IAAM,KAAK,GAAG,KAAI,CAAC,eAAe,CAAC,aAAa,EAAE,WAAW,EAAE,eAAe,CAAC,CAAC;YAChF,OAAO,KAAK,CAAC,SAAS;iBACpB,IAAI,CAAC,CAAC,gEAAS,CAAC,UAAC,OAAO,IAAK,sDAAU,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,OAAV,KAAK,GAAM,KAAK,CAAC,SAAS,EAAE,OAAO,SAAK,KAAK,CAAC,WAAW,GAAE,EAA3E,CAA2E,CAAC,CAAC,CAAC;QAC9G,CAAC;IACF,CAAC;IAED;;;;;;OAMG;IACK,sDAAe,GAAvB,UAAwB,aAAuB,EAAE,WAAmB,EAAE,eAAgC;QAC9F,gCAAS,EAAE,gCAAa,EAAE,uBAAI,CAAkB;QACvD,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChD,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAElD,IAAM,eAAe;YACpB,GAAC,SAAS,IAAG;gBACZ,SAAS,EAAE,uGAAkB;gBAC7B,SAAS,EAAE,+CAAU,CAAC,EAAE,CAAC;oBACxB,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,eAAe,CAAC,EAAE,EAAE;oBAC/C,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,eAAe,CAAC,KAAK,EAAE;iBACrD,CAAC;gBACF,WAAW,EAAE,CAAC,mEAAW,CAAC,EAAE,CAAC;gBAC7B,IAAI;aACJ;YACD,GAAC,aAAa,IAAG;gBAChB,SAAS,EAAE,uGAAkB;gBAC7B,SAAS,EAAE,+CAAU,CAAC,EAAE,CAAC;oBACxB,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,eAAe,CAAC,WAAW,EAAE;oBACxD,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,eAAe,CAAC,cAAc,EAAE;iBAC9D,CAAC;gBACF,WAAW,EAAE,CAAC,mEAAW,CAAC,EAAE,CAAC;gBAC7B,IAAI;aACJ;YACD,GAAC,IAAI,IAAG;gBACP,SAAS,EAAE,8HAAwB;gBACnC,SAAS,EAAE,IAAI,CAAC,iBAAiB;qBAC/B,eAAe,CAAC,eAAe,CAAC,EAAE,EAAE,eAAe,CAAC,WAAW,CAAC;qBAChE,IAAI,CACJ,gEAAS,CAAC,UAAC,MAAW,IAAK,sDAAU,CAAC,EAAE,CAAC,CAAC,EAAC,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,MAAM,EAAC,CAAC,CAAC,EAA/D,CAA+D,CAAC,CAC3F;gBACF,WAAW,EAAE,CAAC,IAAI,CAAC;gBACnB,IAAI,EAAE,KAAK;aACX;eACD,CAAC;QAEF,OAAO,eAAe,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC;;IAC7C,CAAC;IA/DW,4BAA4B;QADxC,gEAAU,EAAE;+EAGK,kFAAe;YACJ,yFAAgB;OAHhC,4BAA4B,CAgExC;IAAD,mCAAC;CAAA;AAhEwC","file":"11.js","sourcesContent":["import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tOnInit,\n\tOnDestroy,\n\tViewChild,\n} from '@angular/core';\nimport {\n\tBehaviorSubject,\n\tObservable,\n\tSubject\n} from 'rxjs';\nimport {\n\tmap,\n\tmergeMap,\n\tscan,\n\tswitchMap,\n\ttakeUntil,\n\twithLatestFrom,\n} from 'rxjs/operators';\nimport {\n\tclone,\n\tcompose,\n\tpathOr,\n} from 'ramda';\n\nimport {ActivatedRoute} from '@angular/router';\nimport {State as GridState} from '@progress/kendo-data-query';\nimport {GridComponent} from '@progress/kendo-angular-grid';\nimport {\n\tGridDataResult,\n\tDataStateChangeEvent\n} from '@progress/kendo-angular-grid';\nimport {NotifierService} from '../../../../shared/services/notifier.service';\n// import {TranslatePipe} from '../../../../shared/pipes/translate.pipe';\nimport {\n\tDependenciesService,\n\tDependenciesRequestParams\n} from '../../service/dependencies.service';\nimport {DependenciesColumnModel} from '../../model/dependencies-column.model';\nimport {\n\tGRID_DEFAULT_PAGINATION_OPTIONS,\n\tGRID_DEFAULT_PAGE_SIZE, DIALOG_SIZE\n} from '../../../../shared/model/constants';\nimport {TagState} from '../../model/dependencies.model';\nimport {BulkCheckboxService} from '../../../../shared/services/bulk-checkbox.service';\nimport {\n\tBulkActionResult,\n\tBulkChangeType\n} from '../../../../shared/components/bulk-change/model/bulk-change.model';\nimport {CheckboxStates} from '../../../../shared/components/tds-checkbox/model/tds-checkbox.model';\nimport {BulkChangeButtonComponent} from '../../../../shared/components/bulk-change/components/bulk-change-button/bulk-change-button.component';\nimport {DependencyResults} from '../../model/dependencies.model';\nimport {GridColumnModel} from '../../../../shared/model/data-list-grid.model';\nimport {UIDialogService} from '../../../../shared/services/ui-dialog.service';\nimport {DependecyService} from '../../../assetExplorer/service/dependecy.service';\nimport {OpenAssetDependenciesService, AssetDependency} from '../../service/open-asset-dependencies.service';\nimport {TranslatePipe} from '../../../../shared/pipes/translate.pipe';\n\ndeclare var jQuery: any;\n\ninterface ComponentState {\n\ttagList?: any[];\n\tgridState?: GridState;\n\tgridData?: GridDataResult;\n}\n\n@Component({\n\tselector: 'tds-dependencies-view-grid',\n\ttemplateUrl: '../tds/web-app/app-js/modules/dependencies/components/view-grid/dependencies-view-grid.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DependenciesViewGridComponent implements OnInit, OnDestroy {\n\t@ViewChild('tdsBulkChangeButton') tdsBulkChangeButton: BulkChangeButtonComponent;\n\t@ViewChild('grid') grid: GridComponent;\n\tprotected dependenciesColumnModel: DependenciesColumnModel;\n\tprotected bulkChangeType: BulkChangeType = BulkChangeType.Dependencies;\n\tprotected readonly GRID_PAGE_SIZES = GRID_DEFAULT_PAGINATION_OPTIONS;\n\tprivate readonly defaultSorting: any = { dir: 'asc', field: 'assetName' };\n\tprotected tagsFieldNames = [];\n\tprivate destroySubject: Subject<any>;\n\tprivate tagsStateSubject: Subject<TagState>;\n\tprotected state: ComponentState;\n\tprivate componentState: BehaviorSubject<ComponentState>;\n\tprotected readonly actionableAssets = ['assetName', 'dependentName', 'type'];\n\tprivate openAssetsHandler = null;\n\n\tconstructor(\n\t\tprivate route: ActivatedRoute,\n\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\tprivate dialog: UIDialogService,\n\t\tprivate notifier: NotifierService,\n\t\tprivate bulkCheckboxService: BulkCheckboxService,\n\t\tprivate dependenciesService: DependenciesService,\n\t\tprivate openAssetDependenciesService: OpenAssetDependenciesService,\n\t\tprivate translatePipe: TranslatePipe,\n\t\tprotected assetService: DependecyService) {\n\t}\n\n\tngOnInit() {\n\t\t// set the initial component state\n\t\tthis.state = this.getInitialComponentState();\n\t\t// set the open assets handler\n\t\tthis.openAssetsHandler = this.openAssetDependenciesService.getOpenAssetsHandler(this.actionableAssets)\n\n\t\tthis.destroySubject = new Subject<any>();\n\t\tthis.componentState = new BehaviorSubject<any>(this.state);\n\t\tthis.tagsStateSubject = new Subject<TagState>();\n\n\t\tthis.setupGridColumns();\n\t\tthis.setupBulkCheckboxService();\n\n\t\t// Setup state observables\n\t\tthis.setupComponentStateObservable();\n\t\tthis.setupTagsFilterStateObservable();\n\t}\n\n\t/**\n\t * Emit the destroy event to complete and close all current observables\n\t */\n\tngOnDestroy() {\n\t\tthis.destroySubject.next();\n\t}\n\n\t/**\n\t *\tSet up the configuration for the bulk checkbox service\n\t */\n\tprivate setupBulkCheckboxService() {\n\t\tthis.bulkCheckboxService.setCurrentState(CheckboxStates.unchecked);\n\t\tthis.bulkCheckboxService.setIdFieldName('id');\n\t}\n\n\t/**\n\t * Define the chain of operations that are executed every time the component state has suffered changes\n\t */\n\tprivate setupComponentStateObservable(): void {\n\t\tthis.componentState\n\t\t\t.pipe(\n\t\t\t\t// take events until destroy subject emits\n\t\t\t\ttakeUntil(this.destroySubject),\n\t\t\t\t// accumulate the partial state change into the component state\n\t\t\t\tscan((accumulator, current) => ({...accumulator, ...current}), {}),\n\t\t\t\t// query the endpoint\n\t\t\t\tmergeMap((state: ComponentState) => this.getDataFromEndpoint()(state)\n\t\t\t\t\t.pipe(map((results: DependencyResults) => ({...state, gridData: results}) )))\n\t\t\t)\n\t\t\t.subscribe((state: ComponentState) => {\n\t\t\t\t// with the results update the component state\n\t\t\t\tthis.state = state;\n\t\t\t\t// update grid state\n\t\t\t\tthis.updateGridState(state.gridState);\n\t\t\t\t// Notify changes on the state to third components\n\t\t\t\tthis.notifyChangedState(state.gridData.data)\n\t\t\t\t// notify to angular a change in the component state to update the view\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t}, this.logError('setupComponentStateObservable'))\n\t}\n\n\t/**\n\t * Notify an action to change the state\n\t */\n\tprivate changeState(partialState = {}): void {\n\t\tthis.componentState.next(partialState);\n\t}\n\n\t/**\n\t * Get the initial state of the component\n\t */\n\tprivate getInitialComponentState(): ComponentState {\n\t\treturn {\n\t\t\ttagList: pathOr([], ['snapshot', 'data', 'tagList'], this.route),\n\t\t\tgridState: this.getInitialGridState(),\n\t\t\tgridData: { data: [], total: 0 },\n\t\t}\n\t}\n\n\t/**\n\t * Define the chain of operations that are executed whenever some tag filter has changed\n\t * We handle tags filtering outside Kendo default filtering\n\t */\n\tprivate setupTagsFilterStateObservable(): void {\n\t\tthis.tagsStateSubject\n\t\t\t.pipe(\n\t\t\t\t// take events until destroy subject emits\n\t\t\t\ttakeUntil(this.destroySubject),\n\t\t\t\t// with the latest state\n\t\t\t\twithLatestFrom(this.componentState),\n\t\t\t\t// merge the tags filters into the kendo grid filters property\n\t\t\t\tmap(([tagsState, componentState]) =>\n\t\t\t\t\tthis.mergeTagsFilterIntoGridState(tagsState, componentState))\n\t\t\t)\n\t\t\t.subscribe((componentState: ComponentState) => {\n\t\t\t\tthis.changeState(componentState);\n\t\t\t}, this.logError('setupTagsFilterStateObservable'));\n\t}\n\n\t/**\n\t * Get the initial state of the grid\n\t * @returns {GridState} default grid state properties\n\t */\n\tprivate getInitialGridState(): GridState {\n\t\treturn {\n\t\t\tsort: [this.defaultSorting],\n\t\t\tfilter: {\n\t\t\t\tfilters: [],\n\t\t\t\tlogic: 'and'\n\t\t\t},\n\t\t\ttake: GRID_DEFAULT_PAGE_SIZE,\n\t\t\tskip: 0\n\t\t}\n\t}\n\n\t/**\n\t * Query the service to get the dependencies\n\t */\n\tprivate getDataFromEndpoint(): any {\n\t\tconst getDependencies = this.dependenciesService.getDependencies.bind(this.dependenciesService);\n\t\treturn compose(getDependencies, this.getParametersForEndpoint.bind(this));\n\t}\n\n\t/**\n\t * Extract from the grid state the parameters required bye the endpoint\n\t * @param {GridState} state\n\t * @returns {DependenciesRequestParams}\n\t */\n\tprivate getParametersForEndpoint(state: ComponentState): DependenciesRequestParams {\n\t\tconst {skip, take, sort, filter} = state.gridState;\n\n\t\treturn {\n\t\t\tpage: (skip / take) + 1,\n\t\t\ttake,\n\t\t\tfilters: filter && filter.filters || [],\n\t\t\tsort: sort && sort[0] || this.defaultSorting\n\t\t};\n\t}\n\n\t/**\n\t * Set the new grid state\n\t * @param {GridState} state\n\t */\n\tprivate updateGridState(state: GridState): void {\n\t\tconst {sort, filter, skip, take} = state;\n\n\t\tthis.grid.sort = sort;\n\t\tthis.grid.filter = filter;\n\t\tthis.grid.skip = skip;\n\t\tthis.grid.pageSize = take;\n\t\tthis.bulkCheckboxService.setPageSize(take);\n\t}\n\n\t/**\n\t * Handle all the grid events (pageChange, filterChange, sortChange, ...)\n\t * @param {DataStateChangeEvent} state\n\t */\n\tprotected dataStateChange(state: DataStateChangeEvent): void {\n\t\tthis.changeState({gridState: state});\n\t}\n\n\t/**\n\t * On tags filter change, emit the change tags event\n\t * @param {string} field Name of the tags filter column\n\t * @param {any}  filter Object containing the tags context information\n\t */\n\tprotected onTagFilterChange(field: string, filter: any): void {\n\t\tlet operator = filter.operator && filter.operator === 'ALL' ? '&' : '|';\n\n\t\tconst tags = (filter.tags || [])\n\t\t\t.filter((tag) => !isNaN(tag.id))\n\t\t\t.map((tag) => tag.id).join(operator);\n\n\t\tthis.tagsStateSubject.next({field, tags})\n\t}\n\n\t/**\n\t * Get the current selected items info\n\t * @returns {any} Object containing the selected count number and the proper plural/singular entity name\n\t */\n\tprotected getSelectedItemsCount(): any {\n\t\tconst selectedCount = this.bulkCheckboxService.getSelectedItemsCount(this.state.gridData.total);\n\n\t\tconst counterInformation = {\n\t\t\tcount: selectedCount,\n\t\t\tentityName: selectedCount === 1 ?\n\t\t\t\tthis.translatePipe.transform('DEPENDENCIES.SINGLE_NAME') :\n\t\t\t\tthis.translatePipe.transform('DEPENDENCIES.PLURAL_NAME')\n\t\t};\n\n\t\treturn selectedCount > 0 ? counterInformation : null;\n\t}\n\n\t/**\n\t * Ending bulk operation, in case operation result is success\n\t * uncheck all dependencies and reload the grid\n\t * @param {BulkActionResult} operationResult result of bulk edit or delete operation\n\t */\n\tprotected onBulkOperationResult(operationResult: BulkActionResult): void {\n\t\tif (operationResult.success) {\n\t\t\tthis.bulkCheckboxService.uncheckItems();\n\t\t\tthis.changeState();\n\t\t}\n\t}\n\n\t/**\n\t * Get the current bulk selected items\n\t * @returns {Observable<any>} bulkItems selected\n\t */\n\tprivate getCurrentBulkSelectedItems(): Observable<any> {\n\t\tconst getDependencies = this.dependenciesService.getDependencies.bind(this.dependenciesService);\n\t\tconst gridState = { ...this.state.gridState, ...{skip: 0, take: this.state.gridData.total}};\n\t\tconst state = {...this.state, gridState};\n\n\t\treturn this.bulkCheckboxService\n\t\t\t.getBulkSelectedItems(this.getParametersForEndpoint(state), getDependencies)\n\t\t\t.pipe(\n\t\t\t\t// take events until destroy subject emits\n\t\t\t\ttakeUntil(this.destroySubject),\n\t\t\t\t// map the results to the format required by the bulkcheckbox service\n\t\t\t\tmap(results =>\n\t\t\t\t\t({ bulkItems: [...results.selectedAssetsIds], assetsSelectedForBulk: [...results.selectedAssets] }))\n\t\t\t)\n\t}\n\n\t/**\n\t * Open the bulk actions selection window\n\t */\n\tprotected onClickBulkButton(): void {\n\t\tthis.getCurrentBulkSelectedItems()\n\t\t\t.subscribe((results) => this.tdsBulkChangeButton.bulkData(results), this.logError('onClickBulkButton'))\n\t}\n\n\t/**\n\t * Take the current tags filter state and merge it into the current gridState filters\n\t * @param {TagState} tagsState\n\t * @param {ComponentState} componentState\n\t */\n\tprivate mergeTagsFilterIntoGridState(tagsState: TagState, componentState: ComponentState): ComponentState {\n\t\tconst filters = pathOr([], ['gridState', 'filter', 'filters'], componentState)\n\t\t\t.filter((item: any) => item.field !== tagsState.field);\n\n\t\tif (tagsState.tags) {\n\t\t\tfilters.push({field: tagsState.field, value: tagsState.tags,  operator: null});\n\t\t}\n\n\t\tconst clonedState = clone(componentState);\n\t\tclonedState.gridState.filter.filters = filters;\n\n\t\treturn clonedState;\n\t}\n\n\t/**\n\t * Log an error to the console along with the function name called\n\t */\n\tprivate logError(functionName: string): any {\n\t\treturn (error) => console.error(`Error, function:${functionName} message:${error.message || error}`)\n\t}\n\n\t/**\n\t * From columns model set up the grid columns\n\t * Gets the names of the tags fields\n\t */\n\tprivate setupGridColumns(): void {\n\t\tthis.dependenciesColumnModel = new DependenciesColumnModel();\n\n\t\tthis.tagsFieldNames = this.dependenciesColumnModel.columns\n\t\t\t.reduce((accumulator: string[], current: GridColumnModel) => {\n\t\t\t\treturn current.type === 'tags' ? [...accumulator, current.property]  : accumulator;\n\t\t\t}, []);\n\t}\n\n\t/**\n\t * Notify to the external components that we have changes in place\n\t */\n\tprivate notifyChangedState(dependencies: any[]): void {\n\t\t// reset the state of the bulk items\n\t\tthis.bulkCheckboxService.initializeKeysBulkItems(dependencies);\n\t\tthis.notifier.broadcast({\n\t\t\tname: 'grid.header.position.change'\n\t\t});\n\t\t// when dealing with locked columns Kendo grid fails to update the height, leaving a lot of empty space\n\t\tjQuery('.k-grid-content-locked').addClass('element-height-100-per-i');\n\t}\n\n\t/**\n\t * On cell click event.\n\t * Determines if cell clicked property is either asset/dependent asset/dependency detail and opens detail popup.\n\t * gridCell field must be an actionable item\n\t * @param gridCell Reference to the current grid cell clicked\n\t */\n\tprotected  onClickActionableColumn(gridCell: any): void {\n\t\tconst fieldName = gridCell.column.field;\n\t\tif (!this.actionableAssets.includes(fieldName)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst assetDependency: AssetDependency = {\n\t\t\tid: gridCell.dataItem['assetId'],\n\t\t\tclass: gridCell.dataItem['assetClass'],\n\t\t\tdependentId: gridCell.dataItem['dependentId'],\n\t\t\tdependentClass: gridCell.dataItem['dependentClass']\n\t\t};\n\n\t\tthis.openAssetsHandler(fieldName, assetDependency)\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this.destroySubject)\n\t\t\t)\n\t\t\t.subscribe(\n\t\t\t\t_ => this.changeState(),\n\t\t\t\t(error) => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\tthis.changeState();\n\t\t\t\t}\n\t\t\t);\n\t}\n}\n","// Angular\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\n// Resolves\nimport {ModuleResolveService} from '../../shared/resolves/module.resolve.service';\nimport {PreferencesResolveService} from '../../shared/resolves/preferences-resolve.service';\nimport {TagsResolveService} from '../assetExplorer/resolve/tags-resolve.service';\n// Services\nimport {AuthGuardService} from '../security/services/auth.guard.service';\n// Components\nimport {DependenciesViewGridComponent} from './components/view-grid/dependencies-view-grid.component';\nimport {ReportsResolveService} from '../assetExplorer/resolve/reports-resolve.service';\nimport {FieldsResolveService} from '../assetExplorer/resolve/fields-resolve.service';\nimport {ReportResolveService} from '../assetExplorer/resolve/report-resolve.service';\n\n/**\n * Top menu parent section class for all Dependencies module.\n * @type {string}\n */\nconst TOP_MENU_PARENT_SECTION = 'menu-parent-assets';\n\nexport class DependenciesStates {\n\tpublic static readonly DEPENDENCIES_LIST = {\n\t\turl: 'list'\n\t};\n}\n\nexport const DependenciesRoute: Routes = [\n\t{path: '', pathMatch: 'full', redirectTo: DependenciesStates.DEPENDENCIES_LIST.url},\n\t{\n\t\tpath: DependenciesStates.DEPENDENCIES_LIST.url,\n\t\tdata: {\n\t\t\tpage: {\n\t\t\t\ttitle: 'DEPENDENCIES.LIST_TITLE',\n\t\t\t\tinstruction: '',\n\t\t\t\tmenu: ['ASSETS.ASSETS', 'DEPENDENCIES.MENU_TITLE'],\n\t\t\t\ttopMenu: { parent: TOP_MENU_PARENT_SECTION, child: 'menu-parent-assets-dependencies-list', subMenu: true }\n\t\t\t},\n\t\t\trequiresAuth: true,\n\t\t},\n\t\tcomponent: DependenciesViewGridComponent,\n\t\tcanActivate: [\n\t\t\tAuthGuardService,\n\t\t\tModuleResolveService,\n\t\t\tPreferencesResolveService],\n\t\tresolve: {\n\t\t\ttagList: TagsResolveService\n\t\t},\n\t\trunGuardsAndResolvers: 'always'\n\t}\n];\n\n@NgModule({\n\texports: [RouterModule],\n\timports: [RouterModule.forChild(DependenciesRoute)]\n})\nexport class DependenciesRouteModule {\n}\n","// Angular\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n// Shared\nimport {SharedModule} from '../../shared/shared.module';\nimport {TranslatePipe} from '../../shared/pipes/translate.pipe';\n// Assets Module\nimport {AssetExplorerModule} from '../assetExplorer/asset-explorer.module';\n// Route Module\nimport {DependenciesRouteModule} from './dependencies-routing.states';\n// Kendo\nimport {DropDownsModule} from '@progress/kendo-angular-dropdowns';\nimport {GridModule} from '@progress/kendo-angular-grid';\nimport {PopupModule} from '@progress/kendo-angular-popup';\nimport {InputsModule} from '@progress/kendo-angular-inputs';\nimport { SortableModule } from '@progress/kendo-angular-sortable';\nimport { IntlModule } from '@progress/kendo-angular-intl';\nimport {DateInputsModule} from '@progress/kendo-angular-dateinputs';\n// Components\nimport {DependenciesViewGridComponent} from './components/view-grid/dependencies-view-grid.component';\n// Resolves\nimport {ModuleResolveService} from '../../shared/resolves/module.resolve.service';\nimport {TagsResolveService} from '../assetExplorer/resolve/tags-resolve.service';\n// Services\nimport {DependenciesService} from './service/dependencies.service';\nimport {OpenAssetDependenciesService} from './service/open-asset-dependencies.service';\nimport { TagService } from '../assetTags/service/tag.service';\n\n@NgModule({\n\timports: [\n\t\t// Angular\n\t\tCommonModule,\n\t\tSharedModule,\n\t\tAssetExplorerModule,\n\t\tFormsModule,\n\t\t// Kendo\n\t\tDropDownsModule,\n\t\tGridModule,\n\t\tPopupModule,\n\t\tSortableModule,\n\t\tIntlModule,\n\t\tInputsModule,\n\t\tDateInputsModule,\n\t\t// Route\n\t\tDependenciesRouteModule\n\t],\n\tdeclarations: [\n\t\tDependenciesViewGridComponent\n\t],\n\tproviders: [\n\t\t// Resolve\n\t\tTagsResolveService,\n\t\tModuleResolveService,\n\t\tDependenciesService,\n\t\tOpenAssetDependenciesService,\n\t\t// Services\n\t\tTagService,\n\t\tTranslatePipe\n\t],\n\texports: [DependenciesViewGridComponent],\n\tentryComponents: []\n})\n\nexport class DependenciesModule {\n}","import {GridColumnModel} from '../../../shared/model/data-list-grid.model';\n\n/**\n * Defines the columns\n */\nexport class DependenciesColumnModel {\n\tcolumns: Array<GridColumnModel>;\n\n\tconstructor() {\n\t\tthis.columns = [\n\t\t\t{\n\t\t\t\tlabel: 'Asset',\n\t\t\t\tproperty: 'assetName',\n\t\t\t\ttype: 'text',\n\t\t\t\twidth: 160,\n\t\t\t\tlocked: true\n\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Asset Type',\n\t\t\t\tproperty: 'assetType',\n\t\t\t\ttype: 'text',\n\t\t\t\twidth: 120,\n\t\t\t\tlocked: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Bundle',\n\t\t\t\tproperty: 'assetBundle',\n\t\t\t\ttype: 'text',\n\t\t\t\twidth: 120\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Tags Asset',\n\t\t\t\tproperty: 'tagsAsset',\n\t\t\t\ttype: 'tags',\n\t\t\t\twidth: 220,\n\t\t\t\tlocked: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Type',\n\t\t\t\tproperty: 'type',\n\t\t\t\ttype: 'text',\n\t\t\t\twidth: 120\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Depends On',\n\t\t\t\tproperty: 'dependentName',\n\t\t\t\ttype: 'text',\n\t\t\t\twidth: 160\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Dep Asset Type',\n\t\t\t\tproperty: 'dependentType',\n\t\t\t\ttype: 'text',\n\t\t\t\twidth: 140\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Dep Asset Bundle',\n\t\t\t\tproperty: 'dependentBundle',\n\t\t\t\ttype: 'text',\n\t\t\t\twidth: 140\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Dep Asset Tags',\n\t\t\t\tproperty: 'tagsDependent',\n\t\t\t\ttype: 'tags',\n\t\t\t\twidth: 220,\n\t\t\t\tlocked: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Status',\n\t\t\t\tproperty: 'status',\n\t\t\t\ttype: 'text',\n\t\t\t\twidth: 100\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Comment',\n\t\t\t\tproperty: 'comment',\n\t\t\t\ttype: 'text',\n\t\t\t\twidth: 150\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Frequency',\n\t\t\t\tproperty: 'frequency',\n\t\t\t\ttype: 'text',\n\t\t\t\twidth: 120\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Direction',\n\t\t\t\tproperty: 'direction',\n\t\t\t\ttype: 'text',\n\t\t\t\twidth: 100\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'C1',\n\t\t\t\tproperty: 'c1',\n\t\t\t\ttype: 'text',\n\t\t\t\twidth: 100\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'C2',\n\t\t\t\tproperty: 'c2',\n\t\t\t\ttype: 'text',\n\t\t\t\twidth: 100\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'C3',\n\t\t\t\tproperty: 'c3',\n\t\t\t\ttype: 'text',\n\t\t\t\twidth: 100\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'C4',\n\t\t\t\tproperty: 'c4',\n\t\t\t\ttype: 'text',\n\t\t\t\twidth: 100\n\t\t\t}\n\t\t];\n\t}\n}\n","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {HttpInterceptor} from '../../../shared/providers/http-interceptor.provider';\n\nimport {PermissionService} from '../../../shared/services/permission.service';\nimport {Dependency, DependencyResults} from '../model/dependencies.model';\nimport {AssetTagSelectorComponent} from '../../../shared/components/asset-tag-selector/asset-tag-selector.component';\n\nimport {map} from 'rxjs/operators';\n\nexport interface DependenciesRequestParams {\n\tpage: number;\n\ttake: number;\n\tsort: any;\n\tfilters: any[];\n}\n\n@Injectable()\nexport class DependenciesService {\n\tprivate readonly BASE_URL = '/tdstm/ws/asset';\n\tconstructor(private http: HttpInterceptor, private permissionService: PermissionService) {}\n\n\t/**\n\t * Get the dependencies matched by the reques parameters\n\t * @param {DependenciesRequestParams} params paremeters to filter and sorting\n\t * @return {Observable<DependencyResults>)\n\t */\n\tgetDependencies(params: DependenciesRequestParams): Observable<DependencyResults> {\n\t\tconst endpoint = `${this.BASE_URL}/listDependencies`;\n\t\tconst {page, take, sort, filters} = params;\n\t\tconst payload = {\n\t\t\trows: take,\n\t\t\tpage,\n\t\t\tsidx: sort.field,\n\t\t\tsord: sort.dir\n\t\t};\n\n\t\t// add the filters to the payload\n\t\tfilters.reduce((acc, current) => {\n\t\t\tacc[current.field] = current.value;\n\t\t\treturn acc;\n\t\t}, payload);\n\n\t\treturn this.http.post(endpoint, JSON.stringify(payload))\n\t\t\t.pipe(\n\t\t\t\tmap((response: any) => {\n\t\t\t\t\tconst results = response.json();\n\t\t\t\t\tlet {dependencies = [], total = 0} = (results && results.data) || {};\n\t\t\t\t\treturn {data: dependencies, total};\n\t\t\t\t})\n\t\t\t)\n\t}\n}","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nimport {\n\tswitchMap\n} from 'rxjs/operators';\nimport {AssetShowComponent} from '../../assetExplorer/components/asset/asset-show.component';\nimport {DIALOG_SIZE} from '../../../shared/model/constants';\nimport {AssetDependencyComponent} from '../../assetExplorer/components/asset-dependency/asset-dependency.component';\nimport {UIDialogService} from '../../../shared/services/ui-dialog.service';\nimport {DependecyService} from '../../assetExplorer/service/dependecy.service';\n\nexport interface AssetDependency {\n\tid: number;\n\tclass: string;\n\tdependentId: number;\n\tdependentClass: string\n}\n\n@Injectable()\nexport class OpenAssetDependenciesService {\n\tconstructor(\n\t\tprivate dialog: UIDialogService,\n\t\tprivate dependencyService: DependecyService) {\n\n\t}\n\n\t/**\n\t * Get the handler function to handle the opening of asset or asset dependencies\n\t * @param allowedAssets List of assets allowed to be opened\n\t */\n\tgetOpenAssetsHandler(allowedAssets: string[]) {\n\t\treturn (targetAsset: string, assetDependency: AssetDependency) => {\n\t\t\tconst asset = this.getAssetForOpen(allowedAssets, targetAsset, assetDependency);\n\t\t\treturn asset.getParams\n\t\t\t\t.pipe((switchMap((results) => Observable.from(asset.open(asset.component, results, ...asset.extraParams)))))\n\t\t}\n\t}\n\n\t/**\n\t * Based upon the target asset, get the object that represents an asset along with the parameters\n\t * required to open it in a view\n\t * @param allowedAssets List of assets allowed to be opened\n\t * @param targetAsset name of the target asset to open up\n\t * @param assetDependency object containing the asset and dependent asset info\n\t */\n\tprivate getAssetForOpen(allowedAssets: string[], targetAsset: string, assetDependency: AssetDependency): any {\n\t\tconst [assetName, dependentName, type] = allowedAssets;\n\t\tconst open = this.dialog.open.bind(this.dialog);\n\t\tconst extra = this.dialog.extra.bind(this.dialog);\n\n\t\tconst assetParameters = {\n\t\t\t[assetName]: {\n\t\t\t\tcomponent: AssetShowComponent,\n\t\t\t\tgetParams: Observable.of([\n\t\t\t\t\t{ provide: 'ID', useValue: assetDependency.id },\n\t\t\t\t\t{ provide: 'ASSET', useValue: assetDependency.class }\n\t\t\t\t]),\n\t\t\t\textraParams: [DIALOG_SIZE.LG],\n\t\t\t\topen\n\t\t\t},\n\t\t\t[dependentName]: {\n\t\t\t\tcomponent: AssetShowComponent,\n\t\t\t\tgetParams: Observable.of([\n\t\t\t\t\t{ provide: 'ID', useValue: assetDependency.dependentId },\n\t\t\t\t\t{ provide: 'ASSET', useValue: assetDependency.dependentClass }\n\t\t\t\t]),\n\t\t\t\textraParams: [DIALOG_SIZE.LG],\n\t\t\t\topen\n\t\t\t},\n\t\t\t[type]: {\n\t\t\t\tcomponent: AssetDependencyComponent,\n\t\t\t\tgetParams: this.dependencyService\n\t\t\t\t\t.getDependencies(assetDependency.id, assetDependency.dependentId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tswitchMap((result: any) => Observable.of([{provide: 'ASSET_DEP_MODEL', useValue: result}]))\n\t\t\t\t\t),\n\t\t\t\textraParams: [true],\n\t\t\t\topen: extra\n\t\t\t}\n\t\t};\n\n\t\treturn assetParameters[targetAsset] || null;\n\t}\n}"],"sourceRoot":""}