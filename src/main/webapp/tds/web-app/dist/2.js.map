{"version":3,"sources":["webpack:///./web-app/app-js/modules/dataScript/model/data-script.model.ts","webpack:///./web-app/app-js/modules/dataScript/service/data-script.service.ts","webpack:///./web-app/app-js/modules/importBatch/service/import-assets.service.ts","webpack:///./web-app/app-js/shared/providers/kendo-file-upload.interceptor.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,IAAM,gBAAgB,GAAG,GAAG,CAAC;AAEpC;IAGC,+BAAY,UAAkB;QAC7B,IAAI,CAAC,OAAO,GAAG;YACd;gBACC,KAAK,EAAE,QAAQ;gBACf,QAAQ,EAAE,QAAQ;gBAClB,IAAI,EAAE,QAAQ;gBACd,KAAK,EAAE,GAAG;gBACV,MAAM,EAAE,IAAI;aACZ,EAAE;gBACF,KAAK,EAAE,MAAM;gBACb,QAAQ,EAAE,MAAM;gBAChB,IAAI,EAAE,MAAM;gBACZ,MAAM,EAAE,IAAI;aACZ,EAAE;gBACF,KAAK,EAAE,UAAU;gBACjB,QAAQ,EAAE,eAAe;gBACzB,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,GAAG;aACV,EAAE;gBACF,KAAK,EAAE,aAAa;gBACpB,QAAQ,EAAE,aAAa;gBACvB,IAAI,EAAE,MAAM;aACZ,EAAE;gBACF,KAAK,EAAE,MAAM;gBACb,QAAQ,EAAE,YAAY;gBACtB,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,GAAG;aACV,EAAE;gBACF,KAAK,EAAE,aAAa;gBACpB,QAAQ,EAAE,aAAa;gBACvB,IAAI,EAAE,MAAM;gBACZ,MAAM,EAAE,UAAU;gBAClB,KAAK,EAAE,GAAG;aACV,EAAE;gBACF,KAAK,EAAE,eAAe;gBACtB,QAAQ,EAAE,aAAa;gBACvB,IAAI,EAAE,MAAM;gBACZ,MAAM,EAAE,UAAU;gBAClB,KAAK,EAAE,GAAG;aACV;SACD,CAAC;IACH,CAAC;IACF,4BAAC;AAAD,CAAC;;AAAA,CAAC;AAEF;IAAA;IAcA,CAAC;IAAD,sBAAC;AAAD,CAAC;;AAEM,IAAM,OAAO,GAAG,gBAAM;IAC5B,IAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;IAC/B,IAAI,OAAO,EAAE;QACZ,OAAO,OAAO,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,IAAI,IAAK,UAAG,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAjD,CAAiD,EAAE,EAAE,CAAC,CAAC;KAC5F;IACD,OAAO,EAAE,CAAC;AACX,CAAC,CAAC;AAEF,IAAY,UAIX;AAJD,WAAY,UAAU;IACrB,2CAAI;IACJ,+CAAM;IACN,2CAAI;AACL,CAAC,EAJW,UAAU,KAAV,UAAU,QAIrB;AAAA,CAAC;AAEF,IAAY,cAGX;AAHD,WAAY,cAAc;IACzB,uDAAM;IACN,uDAAM;AACP,CAAC,EAHW,cAAc,KAAd,cAAc,QAGzB;AAAA,CAAC;AAEF;;;GAGG;AACH;IAKC,yBAAY,OAAY,EAAE,IAAS;QAFnC,eAAU,GAAI,EAAE,CAAC;QAGhB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAClB,CAAC;IACF,sBAAC;AAAD,CAAC;;AAAA,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChGuC;AACT;AACsC;AACc;AACN;AACc;AAEG;AAEoB;AAC1D;AACE;AACT;AACK;AAC5B;AACI;AACE;AAC4D;AACrB;AAEjE,IAAM,4BAA4B,GAAG,WAAW,CAAC;AACjD,IAAM,uBAAuB,GAAG,QAAQ,CAAC;AAGhD;IAeC,2BAAoB,IAAqB,EAAU,iBAAoC;QAAnE,SAAI,GAAJ,IAAI,CAAiB;QAAU,sBAAiB,GAAjB,iBAAiB,CAAmB;QAb/E,mBAAc,GAAG,OAAO,CAAC;QACzB,mBAAc,GAAG,gBAAgB,CAAC;QAClC,qBAAgB,GAAG,iBAAiB,CAAC;QAC5B,qBAAgB,GAAG,qBAAqB,CAAC;QAClD,kBAAa,GAAG,kBAAkB,CAAC;QACnC,kBAAa,GAAG,kBAAkB,CAAC;QACnC,kBAAa,GAAG,kBAAkB,CAAC;QACnC,uBAAkB,GAAG,wCAAwC,CAAC;QAC9D,2BAAsB,GAAG,wCAAwC,CAAC;QAClE,yBAAoB,GAAG,2CAA2C,CAAC;QAC1D,wBAAmB,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,kEAAkE,CAAC,CAAC;QACvH,6BAAwB,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;IAG5F,CAAC;IAED,0CAAc,GAAd;QACC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,gBAAgB,qBAAkB,CAAC;aAC9D,GAAG,CAAC,UAAC,GAAa;YAClB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACxB,IAAI,gBAAgB,GAAG,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC;YAC5E,gBAAgB,CAAC,OAAO,CAAC,UAAC,CAAC;gBAC1B,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,uEAAc,CAAC,MAAM,CAAC,CAAC,CAAC,uEAAc,CAAC,MAAM,CAAC,CAAC;gBACjF,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBACjE,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YAClE,CAAC,CAAC,CAAC;YACH,OAAO,gBAAgB,CAAC;QACzB,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACvC,CAAC;IAED,wCAAY,GAAZ;QACC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,gBAAgB,mBAAgB,CAAC;aAC5D,GAAG,CAAC,UAAC,GAAa;YAClB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACxB,IAAI,cAAc,GAAG,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC;YAC1E,cAAc,CAAC,OAAO,CAAC,UAAC,CAAC;gBACxB,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBACjE,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YAClE,CAAC,CAAC,CAAC;YACH,OAAO,cAAc,CAAC;QACvB,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACvC,CAAC;IAED,yCAAa,GAAb;QAAA,iBAWC;QAVA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,cAAc,eAAY,CAAC;aACtD,GAAG,CAAC,UAAC,GAAa;YAClB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACxB,IAAI,gBAAgB,GAAG,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC;YAC5E,gBAAgB,CAAC,OAAO,CAAC,UAAC,KAAK;gBAC9B,KAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;YACH,OAAO,gBAAgB,CAAC;QACzB,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACvC,CAAC;IAED,wCAAY,GAAZ,UAAa,EAAU;QAAvB,iBASC;QARA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,cAAc,mBAAc,EAAI,CAAC;aAC5D,GAAG,CAAC,UAAC,GAAa;YAClB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACxB,IAAI,KAAK,GAAG,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC;YACjE,KAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;YACpC,OAAO,KAAK,CAAC;QACd,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACvC,CAAC;IAEO,mDAAuB,GAA/B,UAAgC,KAAU;QACzC,KAAK,CAAC,WAAW,GAAG,EAAC,EAAE,EAAE,KAAK,CAAC,WAAW,EAAC,CAAC;QAC5C,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAC7E,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAC7E,KAAK,CAAC,YAAY,GAAG,CAAC,KAAK,CAAC,YAAY,KAAK,CAAC,CAAC,CAAC;QAChD,KAAK,CAAC,OAAO,GAAG;YACf,SAAS,EAAE;gBACV,KAAK,EAAE,KAAK,CAAC,eAAe;gBAC5B,QAAQ,EAAE,gEAAQ,CAAC,OAAO;aAC1B;YACD,WAAW,EAAE;gBACZ,KAAK,EAAE,mEAAS,CAAC,eAAe,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,kBAAkB,EAAE,QAAQ,EAAE,gEAAQ,CAAC,OAAO,EAAE,EAAE,gEAAQ,CAAC,OAAO,CAAC;gBACnH,QAAQ,EAAE,gEAAQ,CAAC,OAAO;aAC1B;YACD,YAAY,EAAE;gBACb,KAAK,EAAE,mEAAS,CAAC,eAAe,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,mBAAmB,EAAE,QAAQ,EAAE,gEAAQ,CAAC,OAAO,EAAE,EAAE,gEAAQ,CAAC,OAAO,CAAC;gBACpH,QAAQ,EAAE,gEAAQ,CAAC,OAAO;aAC1B;SACD,CAAC;QACF,KAAK,CAAC,iBAAiB,GAAG,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC;QAClG,IAAI,KAAK,CAAC,eAAe,IAAI,KAAK,CAAC,eAAe,KAAK,IAAI,IAAI,KAAK,CAAC,eAAe,KAAK,MAAM,EAAE;YAChG,gFAAc,CAAC,eAAe,CAAC,KAAK,EAAE,KAAK,CAAC,eAAe,CAAC,CAAC;SAC7D;aAAM;YACN,gFAAc,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;SAC3C;IACF,CAAC;IAED,6CAAiB,GAAjB;QACC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,gBAAgB,WAAQ,CAAC;aACpD,GAAG,CAAC,UAAC,GAAa;YAClB,OAAO,GAAG,CAAC,IAAI,EAAE,CAAC;QACnB,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACvC,CAAC;IAED,0CAAc,GAAd;QAAA,iBAgBC;QAfA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAG,IAAI,CAAC,aAAe,CAAC;aAC3C,GAAG,CAAC,UAAC,GAAa;YAClB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACxB,IAAI,gBAAgB,GAAG,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC;YAE5E,gBAAgB,CAAC,OAAO,CAAC,UAAC,KAAK;gBAC9B,oEAAoE;gBACpE,8CAA8C;gBAC9C,uDAAuD;gBACvD,0CAA0C;gBAC1C,KAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC;YACH,OAAO,gBAAgB,CAAC;QACzB,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACvC,CAAC;IAED;;;OAGG;IACH,yCAAa,GAAb,UAAc,EAAU;QAAxB,iBASC;QARA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,aAAa,SAAI,EAAI,CAAC;aACjD,GAAG,CAAC,UAAC,GAAa;YAClB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACxB,IAAI,KAAK,GAAG,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC;YACjE,KAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;YACnC,OAAO,KAAK,CAAC;QACd,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACvC,CAAC;IAEO,kDAAsB,GAA9B,UAA+B,KAAK;QACnC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAC7E,KAAK,CAAC,WAAW,GAAG,8EAAW,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACnD,KAAK,CAAC,UAAU,GAAG,+EAAY,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;QAC5D,KAAK,CAAC,MAAM,GAAG,oFAAiB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAChD,CAAC;IAED;;;OAGG;IACH,oDAAwB,GAAxB;QACC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,aAAa,WAAQ,CAAC;aACjD,GAAG,CAAC,UAAC,GAAa;YAClB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACxB,OAAO,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC;QAC7D,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACvC,CAAC;IAED;;;;OAIG;IACH,yCAAa,GAAb,UAAc,KAAqB;QAClC,OAAO,IAAI,+CAAU,CAAC,kBAAQ;YAC7B,IAAI,KAAK,CAAC,YAAY,IAAI,KAAK,CAAC,YAAY,KAAK,IAAI,IAAI,KAAK,CAAC,YAAY,KAAK,EAAE,EAAE;gBACnF,IAAI,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;gBACnD,aAAa,CAAC,OAAO,CAAE,UAAC,KAAK;oBAC5B,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE;wBAC3C,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC;qBACtC;oBACD,IAAI,KAAK,CAAC,OAAO,KAAK,OAAO,EAAE;wBAC9B,KAAK,CAAC,OAAO,GAAG,8DAAM,CAAC,MAAM,CAAC;qBAC9B;oBACD,OAAO,KAAK,CAAC,eAAe,CAAC;oBAC7B,OAAO,KAAK,CAAC,gBAAgB,CAAC;gBAC/B,CAAC,CAAC,CAAC;gBAEH,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aAC7B;YACD,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,yCAAa,GAAb,UAAc,EAAU,EAAE,QAAgB,EAAE,gBAAqB,EAAE,QAAgB;QAAvC,wDAAqB;QAChE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB;aAC3C,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,QAAQ,EAAE,CAAC;aAC7B,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC;aACxB,OAAO,CAAC,KAAK,EAAE,gBAAgB,CAAC;aAChC,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;aACzB,GAAG,CAAC,UAAC,GAAa;YAClB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACxB,IAAI,IAAI,GAAQ,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC;YACvE,IAAI,OAAO,GAAQ,EAAE,CAAC;YACtB,IAAI,eAAgC,CAAC;YACrC,IAAI,MAAM,CAAC,MAAM,KAAK,gFAAgB,CAAC,SAAS,IAAI,MAAM,CAAC,MAAM,EAAE;gBAClE,eAAe,GAAG;oBACjB,MAAM,EAAE,MAAM,CAAC,MAAM;iBACrB,CAAC;gBACF,OAAO,eAAe,CAAC;aACvB;YACD,IAAI,IAAI,CAAC,MAAM,EAAE;gBAChB,KAAK,IAAI,QAAQ,IAAI,IAAI,CAAC,MAAM,EAAE;oBACjC,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;wBACzC,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC;wBAC7C,IAAI,MAAM,GAAG;4BACZ,KAAK;4BACL,QAAQ,EAAE,KAAK;4BACf,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI;4BAChC,KAAK,EAAE,GAAG;yBACV,CAAC;wBACF,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBACrB;iBACD;gBACD,eAAe,GAAG,IAAI,wEAAe,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC1D,eAAe,CAAC,UAAU,GAAG,GAAG,CAAC;aACjC;YACD,OAAO,eAAe,CAAC;QACxB,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACvC,CAAC;IAED,+CAAmB,GAAnB,UAAoB,OAAe;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,gBAAgB,mBAAc,OAAS,CAAC;aACnE,GAAG,CAAC,UAAC,GAAa;YAClB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACxB,IAAI,gBAAgB,GAAG,IAAI,KAAK,EAAoB,CAAC;YACrD,KAAK,IAAI,QAAQ,IAAI,MAAM,EAAE;gBAC5B,IAAI,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;oBACpC,gBAAgB,CAAC,IAAI,CAAC;wBACrB,EAAE,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS;wBAC9B,IAAI,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI;wBAC3B,WAAW,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW;wBACzC,WAAW,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW;wBACzC,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM;wBAC/B,YAAY,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,KAAK,CAAC,CAAC;wBACnD,OAAO,EAAE;4BACR,SAAS,EAAE;gCACV,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;gCAClF,QAAQ,EAAE,gEAAQ,CAAC,OAAO;6BAC1B;4BACD,WAAW,EAAE;gCACZ,KAAK,EAAE,mEAAS,CAAC,eAAe,CAAC;oCAChC,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;oCACxF,QAAQ,EAAE,gEAAQ,CAAC,OAAO;iCAC1B,EAAE,gEAAQ,CAAC,OAAO,CAAC;gCACpB,QAAQ,EAAE,gEAAQ,CAAC,OAAO;6BAC1B;4BACD,YAAY,EAAE;gCACb,KAAK,EAAE,mEAAS,CAAC,eAAe,CAAC;oCAChC,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;oCAC1F,QAAQ,EAAE,gEAAQ,CAAC,OAAO;iCAC1B,EAAE,gEAAQ,CAAC,OAAO,CAAC;gCACpB,QAAQ,EAAE,gEAAQ,CAAC,OAAO;6BAC1B;yBACD;wBACD,YAAY,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM;wBACrC,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM;wBAC/B,UAAU,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU;qBACvC,CAAC,CAAC;iBACH;aACD;YACD,MAAM,GAAG,gBAAgB,CAAC;YAC1B,OAAO,MAAM,CAAC;QACf,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACvC,CAAC;IAED,0CAAc,GAAd,UAAe,KAAsB;QACpC,IAAI,WAAW,GAAG;YACjB,IAAI,EAAE,KAAK,CAAC,IAAI;YAChB,WAAW,EAAE,KAAK,CAAC,WAAW;YAC9B,IAAI,EAAE,KAAK,CAAC,IAAI,KAAK,uEAAc,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ;YAChE,UAAU,EAAE,KAAK,CAAC,QAAQ,CAAC,EAAE;YAC7B,aAAa,EAAE,KAAK,CAAC,aAAa;SAClC,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE;YACd,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,gBAAgB,gBAAa,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;iBACvF,GAAG,CAAC,UAAC,GAAa;gBAClB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;gBACxB,IAAI,QAAQ,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC;gBACtE,QAAQ,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,uEAAc,CAAC,MAAM,CAAC,CAAC,CAAC,uEAAc,CAAC,MAAM,CAAC;gBACnH,OAAO,QAAQ,CAAC;YACjB,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;SACtC;aAAM;YACN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,gBAAgB,oBAAe,KAAK,CAAC,EAAI,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;iBAClG,GAAG,CAAC,UAAC,GAAa;gBAClB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;gBACxB,OAAO,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC;YAC7D,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;SACtC;IACF,CAAC;IAED,wCAAY,GAAZ,UAAa,KAAoB;QAChC,IAAI,WAAW,GAAG;YACjB,IAAI,EAAE,KAAK,CAAC,IAAI;YAChB,WAAW,EAAE,KAAK,CAAC,WAAW;YAC9B,OAAO,EAAE,KAAK,CAAC,OAAO;SACtB,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE;YACd,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,gBAAgB,cAAW,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;iBACrF,GAAG,CAAC,UAAC,GAAa;gBAClB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;gBACxB,OAAO,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC;YAC7D,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;SACtC;aAAM;YACN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,gBAAgB,kBAAa,KAAK,CAAC,EAAI,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;iBAChG,GAAG,CAAC,UAAC,GAAa;gBAClB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;gBACxB,OAAO,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC;YAC7D,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;SACtC;IACF,CAAC;IAED,yCAAa,GAAb,UAAc,KAAqB,EAAE,aAAkB;QACtD,IAAI,WAAW,GAAQ;YACtB,IAAI,EAAE,KAAK,CAAC,IAAI;YAChB,WAAW,EAAE,KAAK,CAAC,WAAW;YAC9B,QAAQ,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAE;YACnC,UAAU,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,UAAU,CAAC,EAAE,EAAE;YACvC,eAAe,EAAE,KAAK,CAAC,WAAW,CAAC,EAAE;YACrC,UAAU,EAAE,KAAK,CAAC,UAAU;YAC5B,WAAW,EAAE,KAAK,CAAC,WAAW;YAC9B,MAAM,EAAE,KAAK,CAAC,MAAM;YACpB,YAAY,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1C,SAAS,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACpC,eAAe,EAAE,mEAAS,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE,gEAAQ,CAAC,OAAO,CAAC;YACrF,kBAAkB,EAAE,mEAAS,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,gEAAQ,CAAC,OAAO,CAAC;YAC1F,mBAAmB,EAAE,mEAAS,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,EAAE,gEAAQ,CAAC,OAAO,CAAC;SAC5F,CAAC;QAEF,IAAI,QAAQ,GAAG;YACd,QAAQ,EAAE,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK;YACvC,SAAS,EAAE,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK;YACxC,SAAS,EAAE,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK;YACxC,OAAO,EAAE,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK;YACtC,QAAQ,EAAE,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK;YACvC,QAAQ,EAAE,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK;YACvC,SAAS,EAAE,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK;YACxC,KAAK,EAAE,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK;YACpC,OAAO,EAAE,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK;SACtC,CAAC;QAEF,WAAW,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAE1D,WAAW,CAAC,mBAAmB,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,WAAW,CAAC,YAAY,KAAK,CAAC,IAAI,KAAK,CAAC,iBAAiB,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;QAEtJ,IAAI,aAAa,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;YAC9C,IAAI,wBAAwB,GAAG,4CAAO,CAAC,aAAa,CAAC,CAAC;YACtD,wBAAwB,CAAC,OAAO,CAAE,UAAC,KAAK;gBACvC,IAAI,KAAK,CAAC,SAAS,IAAI,KAAK,CAAC,SAAS,CAAC,KAAK,EAAE;oBAC7C,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC;iBACxC;gBACD,IAAI,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,EAAE;oBAC9C,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC;iBACzC;gBACD,IAAI,KAAK,CAAC,OAAO,KAAK,8DAAM,CAAC,MAAM,EAAE;oBACpC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;iBACxB;gBACD,OAAO,KAAK,CAAC,eAAe,CAAC;gBAC7B,OAAO,KAAK,CAAC,gBAAgB,CAAC;YAC/B,CAAC,CAAC,CAAC;YACH,WAAW,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,wBAAwB,CAAC,CAAC;SACvE;QAED,IAAI,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,UAAU,CAAC,EAAE,IAAI,KAAK,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,EAAE;YACzE,WAAW,CAAC,UAAU,GAAG,EAAE,EAAE,EAAE,KAAK,CAAC,UAAU,CAAC,EAAE,EAAE,CAAC;SACrD;QAED,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE;YACd,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,cAAc,eAAY,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;iBACpF,GAAG,CAAC,UAAC,GAAa;gBAClB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;gBACxB,IAAI,QAAQ,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC;gBACtE,OAAO,QAAQ,CAAC;YACjB,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;SACtC;aAAM;YACN,WAAW,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;YACpC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,cAAc,mBAAc,KAAK,CAAC,EAAI,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;iBAC/F,GAAG,CAAC,UAAC,GAAa;gBAClB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;gBACxB,OAAO,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC;YAC7D,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;SACtC;IACF,CAAC;IAED,0CAAc,GAAd,UAAe,KAAsB;QAEpC,IAAI,WAAW,GAAQ;YACtB,IAAI,EAAE,KAAK,CAAC,IAAI;YAChB,WAAW,EAAE,KAAK,CAAC,WAAW;YAC9B,WAAW,EAAE,MAAM,CAAC,IAAI,CAAC,8EAAW,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI,IAAK,qFAAW,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,WAAW,EAAvC,CAAuC,CAAC;YAC7F,QAAQ,EAAE,EAAC,EAAE,EAAE,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAC;YACjC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE;YAClC,oBAAoB,EAAE,MAAM,CAAC,IAAI,CAAC,+EAAY,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI,IAAK,sFAAY,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,UAAU,EAAvC,CAAuC,CAAC;YACvG,QAAQ,EAAE,KAAK,CAAC,QAAQ;YACxB,iBAAiB,EAAE,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE;YAC3E,YAAY,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE;YAC5D,aAAa,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE;YAC/D,WAAW,EAAE,CAAC,KAAK,CAAC,WAAW,KAAK,+EAAY,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,WAAW;YACzF,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,WAAW,EAAE;SAC1C,CAAC;QAEF,4CAA4C;QAC5C,IAAI,KAAK,CAAC,UAAU,KAAK,+EAAY,CAAC,MAAM,IAAI,KAAK,CAAC,UAAU,KAAK,+EAAY,CAAC,MAAM,IAAI,KAAK,CAAC,UAAU,KAAK,+EAAY,CAAC,UAAU,EAAE;YACzI,IAAI,KAAK,CAAC,UAAU,KAAK,+EAAY,CAAC,MAAM,IAAI,KAAK,CAAC,UAAU,KAAK,+EAAY,CAAC,MAAM,EAAG;gBAC1F,WAAW,CAAC,WAAW,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAE,CAAC,CAAC,EAAE,CAAC;aACxE;YACD,WAAW,CAAC,oBAAoB,GAAG,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,oBAAoB,CAAE,CAAC,CAAC,EAAE,CAAC;SACnG;QAED,2GAA2G;QAC3G,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,QAAQ,KAAK,EAAE,EAAE;YACzE,WAAW,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;SACtC;QAED,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE;YACd,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAG,IAAI,CAAC,aAAe,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;iBACzE,GAAG,CAAC,UAAC,GAAa;gBAClB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;gBACxB,IAAI,QAAQ,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC;gBACtE,OAAO,QAAQ,CAAC;YACjB,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;SACtC;aAAM;YACN,WAAW,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;YACpC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,aAAa,SAAI,KAAK,CAAC,EAAI,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;iBACpF,GAAG,CAAC,UAAC,GAAa;gBAClB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;gBACxB,OAAO,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC;YAC7D,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;SACtC;IACF,CAAC;IAED,8DAAkC,GAAlC,UAAmC,KAAsB;QACxD,IAAI,WAAW,GAAG;YACjB,UAAU,EAAE,KAAK,CAAC,QAAQ,CAAC,EAAE;YAC7B,IAAI,EAAE,KAAK,CAAC,IAAI;SAChB,CAAC;QACF,IAAI,KAAK,CAAC,EAAE,EAAE;YACb,WAAW,CAAC,cAAc,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC;SACvC;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,gBAAgB,+BAA4B,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;aACtG,GAAG,CAAC,UAAC,GAAa;YAClB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACxB,OAAO,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACrF,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACvC,CAAC;IAED,4DAAgC,GAAhC,UAAiC,KAAoB;QACpD,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,IAAI,KAAK,CAAC,EAAE,EAAE;YACb,WAAW,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC;SACrC;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,gBAAgB,iCAA4B,KAAK,CAAC,IAAM,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;aAClH,GAAG,CAAC,UAAC,GAAa;YAClB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACxB,OAAO,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC;QAC7D,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACvC,CAAC;IAED,wCAAY,GAAZ,UAAa,OAAY;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,gBAAgB,oBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;aAClG,GAAG,CAAC,UAAC,GAAa;YAClB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACxB,OAAO,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC;QAC7D,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACvC,CAAC;IAED;;;;OAIG;IACH,kDAAsB,GAAtB,UAAuB,YAAoB;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,aAAa,cAAS,YAAc,EAAE,IAAI,CAAC;aACvE,GAAG,CAAC,UAAC,GAAa;YAClB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACxB,OAAO,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC;QAC7D,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACvC,CAAC;IAED;;;;OAIG;IACH,mDAAuB,GAAvB,UAAwB,kBAA0B;QACjD,IAAI,WAAW,GAAG;YACjB,UAAU,EAAE,kBAAkB;SAC9B,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,aAAa,0BAAuB,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;aAC9F,GAAG,CAAC,UAAC,GAAa;YAClB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACxB,IAAI,WAAW,GAAG,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC;YACvE,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,IAAI,WAAW,CAAC,QAAQ,CAAC,EAAE;gBAC1B,WAAW,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAC,KAAa;oBAC3C,MAAM,IAAI,KAAK,GAAG,IAAI,CAAC;gBACxB,CAAC,CAAC,CAAC;aACH;YACD,OAAO;gBACN,KAAK,EAAE,WAAW,CAAC,KAAK;gBACxB,KAAK,EAAE,MAAM;aACb,CAAC;QACH,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACvC,CAAC;IAED;;;;OAIG;IACH,gDAAoB,GAApB,UAAqB,EAAU;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,gBAAgB,mCAA8B,EAAI,CAAC;aAC9E,GAAG,CAAC,UAAC,GAAa;YAClB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACxB,OAAO,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC;QAC7D,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACvC,CAAC;IAED,4CAAgB,GAAhB,UAAiB,EAAU;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,gBAAgB,oBAAe,EAAI,CAAC;aAClE,GAAG,CAAC,UAAC,GAAa;YAClB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACxB,OAAO,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC;QAC7D,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACvC,CAAC;IAED,0CAAc,GAAd,UAAe,EAAU;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,gBAAgB,kBAAa,EAAI,CAAC;aAChE,GAAG,CAAC,UAAC,GAAa;YAClB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACxB,OAAO,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC;QAC7D,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACvC,CAAC;IAED,2CAAe,GAAf,UAAgB,EAAU;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,cAAc,mBAAc,EAAI,CAAC;aAC/D,GAAG,CAAC,UAAC,GAAa;YAClB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACxB,OAAO,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC;QAC7D,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACvC,CAAC;IAED,4CAAgB,GAAhB,UAAiB,EAAU;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,aAAa,SAAI,EAAI,CAAC;aACpD,GAAG,CAAC,UAAC,GAAa;YAClB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACxB,OAAO,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC;QAC7D,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACvC,CAAC;IAED,sCAAU,GAAV,UAAW,EAAU,EAAE,MAAc;QACpC,IAAI,WAAW,GAAG;YACjB,EAAE,EAAE,EAAE;YACN,MAAM,EAAE,MAAM;SACd,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,aAAa,gBAAa,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;aACpF,GAAG,CAAC,UAAC,GAAa;YAClB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACxB,OAAO,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,CAAC;QAC9C,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACvC,CAAC;IAED,wCAAY,GAAZ,UAAa,EAAU;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAE;aAChF,GAAG,CAAC,UAAC,GAAa;YAClB,OAAO,GAAG,CAAC,IAAI,EAAE,CAAC;QACnB,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACvC,CAAC;IAED;;;;;OAKG;IACH,sCAAU,GAAV,UAAW,MAAc,EAAE,QAAgB;QAC1C,IAAI,WAAW,GAAG;YACjB,MAAM,EAAE,MAAM;YACd,QAAQ,EAAE,QAAQ;SAClB,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,aAAa,wBAAqB,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;aAC5F,GAAG,CAAC,UAAC,GAAa;YAClB,IAAI,QAAQ,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YAC1B,OAAO,QAAQ,CAAC;QACjB,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACvC,CAAC;IAED,uCAAW,GAAX,UAAY,MAAc,EAAE,QAAgB;QAC3C,IAAI,WAAW,GAAG;YACjB,MAAM,EAAE,MAAM;YACd,QAAQ,EAAE,QAAQ;SAClB,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,aAAa,iBAAc,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;aACrF,GAAG,CAAC,UAAC,GAAa;YAClB,OAAO,GAAG,CAAC,IAAI,EAAE,CAAC;QACnB,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACvC,CAAC;IAED,sCAAU,GAAV,UAAW,OAAe,EAAE,SAAiB;QAC5C,IAAI,WAAW,GAAG;YACjB,OAAO,EAAE,OAAO;YAChB,SAAS,EAAE,SAAS;SACpB,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,aAAa,gBAAa,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;aACpF,GAAG,CAAC,UAAC,GAAa;YAClB,OAAO,GAAG,CAAC,IAAI,EAAE,CAAC;QACnB,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACvC,CAAC;IAED,mDAAuB,GAAvB,UAAwB,OAAe,EAAE,SAAiB;QACzD,IAAI,WAAW,GAAG;YACjB,OAAO,EAAE,OAAO;YAChB,SAAS,EAAE,SAAS;SACpB,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;aAC7E,GAAG,CAAC,UAAC,GAAa;YAClB,OAAO,GAAG,CAAC,IAAI,EAAE,CAAC;QACnB,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACvC,CAAC;IAED,sCAAU,GAAV,UAAW,QAAa;QACvB,IAAM,OAAO,GAAG,IAAI,qDAAO,CAAC,EAAE,CAAC,CAAC;QAChC,IAAM,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACzD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,aAAa,gBAAa,EAAE,QAAQ,EAAE,OAAO,CAAC;aAC1E,GAAG,CAAC,UAAC,GAAa;YAClB,IAAI,QAAQ,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC;YAC/B,OAAO,IAAI,kEAAY,CAAC,EAAC,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,IAAI,EAAG,QAAQ,EAAE,EAAE,CAAC,CAAC;QACpE,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACvC,CAAC;IAED,+CAAmB,GAAnB,UAAoB,QAAa;QAChC,IAAM,OAAO,GAAG,IAAI,qDAAO,CAAC,EAAE,CAAC,CAAC;QAChC,IAAM,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACzD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,QAAQ,EAAE,OAAO,CAAC;aAC/D,GAAG,CAAC,UAAC,GAAa;YAClB,IAAI,QAAQ,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC;YAC/B,OAAO,IAAI,kEAAY,CAAC,EAAC,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,IAAI,EAAG,QAAQ,EAAE,EAAE,CAAC,CAAC;QACpE,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACvC,CAAC;IAED,iDAAqB,GAArB,UAAsB,QAAa;QAClC,IAAM,OAAO,GAAG,IAAI,qDAAO,CAAC,EAAE,CAAC,CAAC;QAChC,IAAM,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACzD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,QAAQ,EAAE,OAAO,CAAC;aACjE,GAAG,CAAC,UAAC,GAAa;YAClB,IAAI,QAAQ,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC;YAC/B,OAAO,IAAI,kEAAY,CAAC,EAAC,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,IAAI,EAAG,QAAQ,EAAE,EAAE,CAAC,CAAC;QACpE,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACvC,CAAC;IAED,sCAAU,GAAV,UAAW,QAAgB;QAC1B,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,EAAC,QAAQ,EAAE,QAAQ,EAAC,CAAE,CAAC;QACjD,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QAClE,IAAI,OAAO,GAAG,IAAI,4DAAc,CAAC;YAChC,OAAO,EAAE,OAAO;YAChB,IAAI,EAAG,IAAI;SACX,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,aAAa,YAAS,EAAE,OAAO,CAAC;aAC9D,GAAG,CAAC,UAAC,GAAa;YAClB,IAAI,QAAQ,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YAC1B,QAAQ,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC9B,OAAO,IAAI,kEAAY,CAAC,EAAC,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,IAAI,EAAG,QAAQ,EAAE,EAAE,CAAC,CAAC;QACpE,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACvC,CAAC;IACO,6CAAiB,GAAzB,UAA0B,cAAsB;QAC/C,OAAO,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;IAC7D,CAAC;IAED;;;;;OAKG;IACH,wCAAY,GAAZ,UAAa,MAAW,EAAE,KAAU;QACnC,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;QAEpD,4KAAM,CAAiE;QAE5E,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YACnB,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC;SACnB;QAED,IAAI,MAAM,CAAC,IAAI,KAAK,MAAM,EAAE;YAC3B,IAAI,CAAC,MAAM,EAAE;gBACZ,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;oBACjB,KAAK,EAAE,MAAM,CAAC,QAAQ;oBACtB,QAAQ,EAAE,UAAU;oBACpB,KAAK,EAAE,MAAM,CAAC,MAAM;oBACpB,UAAU,EAAE,IAAI;iBAChB,CAAC,CAAC;aACH;iBAAM;gBACN,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAC,CAAC;oBAC5B,OAAO,CAAC,CAAC,OAAO,CAAC,KAAK,MAAM,CAAC,QAAQ,CAAC;gBACvC,CAAC,CAAC,CAAC;gBACH,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;aAC7B;SACD;QAED,IAAI,MAAM,CAAC,IAAI,KAAK,MAAM,EAAE;YACrB,8GAAyD,EAAxD,cAAI,EAAE,YAAG,CAAgD;YAEhE,IAAI,MAAM,EAAE;gBACX,KAAK,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;aACxE;YACD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,CAAC,CAAC;YAC7E,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;SAC3E;QAED,IAAI,MAAM,CAAC,IAAI,KAAK,SAAS,EAAE;YAC9B,IAAI,CAAC,MAAM,EAAE;gBACZ,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;oBACjB,KAAK,EAAE,MAAM,CAAC,QAAQ;oBACtB,QAAQ,EAAE,IAAI;oBACd,KAAK,EAAE,CAAC,MAAM,CAAC,MAAM,KAAK,MAAM,CAAC;iBACjC,CAAC,CAAC;aACH;iBAAM;gBACN,IAAI,MAAM,CAAC,MAAM,KAAK,4FAAwB,EAAE;oBAC/C,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;iBAChC;qBAAM;oBACN,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAC,CAAC;wBAC5B,OAAO,CAAC,CAAC,OAAO,CAAC,KAAK,MAAM,CAAC,QAAQ,CAAC;oBACvC,CAAC,CAAC,CAAC;oBACH,MAAM,CAAC,KAAK,GAAG,CAAC,MAAM,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC;iBAC1C;aACD;SACD;QAED,OAAO,IAAI,CAAC;IACb,CAAC;IAED;;;;;OAKG;IACH,uCAAW,GAAX,UAAY,MAAW,EAAE,KAAU;QAClC,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC;QACnB,KAAK,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;IACzE,CAAC;IAED;;;;;OAKG;IACH,+CAAmB,GAAnB,UAAoB,iBAAyB,EAAE,KAAU;QACxD,IAAM,OAAO,GAAG,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QAC7D,OAAQ,OAAO,CAAC,MAAM,CAAC,UAAC,CAAC,IAAK,QAAC,CAAC,OAAO,CAAC,KAAK,iBAAiB,EAAhC,CAAgC,CAAC,CAAC;IACjE,CAAC;IAED;;;;OAIG;IACH,0CAAc,GAAd,UAAe,WAAmB;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,cAAc,SAAI,WAAa,CAAC;aAC3D,GAAG,CAAC,UAAC,GAAa;YAClB,OAAO,GAAG,CAAC,IAAI,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACzC,CAAC;IAjyBW,iBAAiB;QAD7B,gEAAU,EAAE;+EAgBc,2FAAe,EAA6B,qFAAiB;OAf3E,iBAAiB,CAkyB7B;IAAD,wBAAC;CAAA;AAlyB6B;;;;;;;;;;;;;;;;;;;ACzBW;AAE2C;AAKpF;IAIC,6BAAoB,IAAqB;QAArB,SAAI,GAAJ,IAAI,CAAiB;QAFjC,sBAAiB,GAAG,oBAAoB,CAAC;IAEL,CAAC;IAE7C;;;OAGG;IACI,8CAAgB,GAAvB;QACC,IAAI,GAAG,GAAG,IAAI,CAAC,iBAAiB,GAAG,mBAAmB,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;aACvB,GAAG,CAAC,UAAC,GAAa;YAClB,OAAO,GAAG,CAAC,IAAI,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACzC,CAAC;IAED;;;;OAIG;IACI,uCAAS,GAAhB,UAAiB,MAAW;QAC3B,IAAI,GAAG,GAAG,IAAI,CAAC,iBAAiB,GAAG,oBAAoB,GAAG,MAAM,CAAC,EAAE,CAAC;QACpE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC;aAC9B,GAAG,CAAC,UAAC,GAAa;YAClB,OAAO,GAAG,CAAC,IAAI,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACzC,CAAC;IAED;;;;;OAKG;IACI,4CAAc,GAArB,UAAsB,QAAgB;QACrC,IAAI,GAAG,GAAG,IAAI,CAAC,iBAAiB,GAAG,oBAAoB,GAAG,QAAQ,CAAC;QACnE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;aACvB,GAAG,CAAC,UAAC,GAAa;YAClB,IAAI,aAAa,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;YAC9C,IAAI,aAAa,KAAK,MAAM,EAAE;gBAC7B,OAAO,GAAG,CAAC,IAAI,EAAE,CAAC;aAClB;iBAAM;gBACN,OAAO,GAAG,CAAC,OAAO,CAAC,CAAC;aACpB;QACF,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACzC,CAAC;IAED;;;;OAIG;IACI,2CAAa,GAApB,UAAqB,UAAe,EAAE,QAAgB;QACrD,IAAI,GAAG,GAAG,IAAI,CAAC,iBAAiB,GAAG,qCAAqC,GAAG,UAAU,CAAC,EAAE,GAAG,YAAY,GAAG,QAAQ,CAAC;QACnH,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC;aAC9B,GAAG,CAAC,UAAC,GAAa;YAClB,OAAO,GAAG,CAAC,IAAI,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACzC,CAAC;IAED;;;OAGG;IACI,wCAAU,GAAjB,UAAkB,QAAgB;QACjC,IAAI,GAAG,GAAG,IAAI,CAAC,iBAAiB,GAAG,oBAAoB,GAAG,QAAQ,CAAC;QACnE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC;aAC9B,GAAG,CAAC,UAAC,GAAa;YAClB,OAAO,GAAG,CAAC,IAAI,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAU,IAAK,YAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IACzC,CAAC;IAzEW,mBAAmB;QAD/B,gEAAU,EAAE;+EAKc,2FAAe;OAJ7B,mBAAmB,CA0E/B;IAAD,0BAAC;CAAA;AA1E+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPS;AACmF;AAC5F;AACC;AACG;AACmD;AAO3D;AAE5B;;;GAGG;AAGH;IAEC,oCAAoB,oBAAuC;QAAvC,yBAAoB,GAApB,oBAAoB,CAAmB;IAAG,CAAC;IAE/D,8CAAS,GAAT,UAAU,GAAqB,EAAE,IAAiB;QACjD,IAAI,GAAG,CAAC,GAAG,KAAK,qEAAoB,EAAE;YACrC,IAAI,MAAM,GAAiC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,sDAAU,CAAC,EAAE,CAAoB;gBAC5F,IAAI,EAAE,kEAAa,CAAC,cAAc;gBAClC,MAAM,EAAE,CAAC;gBACT,KAAK,EAAE,GAAG;aACV,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAJ8C,CAI9C,CAAC,CAAC;YAChB,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,uEAAsB,CAAC,KAAK,4EAA2B,EAAE;gBACzE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;aACrE;iBAAM,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,uEAAsB,CAAC,KAAK,8EAA6B,EAAE;gBAClF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;aACvE;iBAAM;gBACN,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;aAC5D;YACD,OAAO,+CAAU,CAAC,MAAM,OAAjB,+CAAU,EAAW,MAAM,EAAE;SACpC;QACD,IAAI,GAAG,CAAC,GAAG,KAAK,uEAAsB,EAAE;YACvC,IAAI,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,sEAAqB,CAAC,CAAC;YACnD,OAAO,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;SACtD;IACF,CAAC;IAxBW,0BAA0B;QADtC,gEAAU,EAAE;+EAG8B,iGAAiB;OAF/C,0BAA0B,CAyBtC;IAAD,iCAAC;CAAA;AAzBsC;AA2BvC;IAWC;QACC,IAAI,CAAC,kBAAkB,GAAG,EAAE,iBAAiB,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,EAAE,CAAC;QACvF,IAAI,CAAC,aAAa,GAAG,qEAAoB,CAAC;QAC1C,IAAI,CAAC,eAAe,GAAG,uEAAsB,CAAC;QAC9C,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,SAAS,GAAI,oEAAmB,CAAC;QACtC,IAAI,CAAC,WAAW,GAAG,sEAAqB,CAAC;QACzC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACvB,CAAC;IACF,iCAAC;AAAD,CAAC","file":"2.js","sourcesContent":["export const COLUMN_MIN_WIDTH = 360;\n\nexport class DataScriptColumnModel {\n\tcolumns: any[];\n\n\tconstructor(dateFormat: string) {\n\t\tthis.columns = [\n\t\t\t{\n\t\t\t\tlabel: 'Action',\n\t\t\t\tproperty: 'action',\n\t\t\t\ttype: 'action',\n\t\t\t\twidth: 108,\n\t\t\t\tlocked: true\n\t\t\t}, {\n\t\t\t\tlabel: 'Name',\n\t\t\t\tproperty: 'name',\n\t\t\t\ttype: 'text',\n\t\t\t\tlocked: true\n\t\t\t}, {\n\t\t\t\tlabel: 'Provider',\n\t\t\t\tproperty: 'provider.name',\n\t\t\t\ttype: 'text',\n\t\t\t\twidth: 220\n\t\t\t}, {\n\t\t\t\tlabel: 'Description',\n\t\t\t\tproperty: 'description',\n\t\t\t\ttype: 'text'\n\t\t\t}, {\n\t\t\t\tlabel: 'Mode',\n\t\t\t\tproperty: 'modeFormat',\n\t\t\t\ttype: 'text',\n\t\t\t\twidth: 200\n\t\t\t}, {\n\t\t\t\tlabel: 'Date Create',\n\t\t\t\tproperty: 'dateCreated',\n\t\t\t\ttype: 'date',\n\t\t\t\tformat: dateFormat,\n\t\t\t\twidth: 170\n\t\t\t}, {\n\t\t\t\tlabel: 'Last Modified',\n\t\t\t\tproperty: 'lastUpdated',\n\t\t\t\ttype: 'date',\n\t\t\t\tformat: dateFormat,\n\t\t\t\twidth: 170\n\t\t\t}\n\t\t];\n\t}\n};\n\nexport class DataScriptModel {\n\tid?: number;\n\tname?: string;\n\tdescription?: string;\n\tmode?: DataScriptMode;\n\tetlSourceCode?: string;\n\tprovider?: {\n\t\tid?: number,\n\t\tname: string\n\t};\n\tdateCreated?: Date;\n\tlastUpdated?: Date;\n\tsampleFilename?: string;\n\toriginalSampleFilename?: string;\n}\n\nexport const Flatten = filter => {\n\tconst filters = filter.filters;\n\tif (filters) {\n\t\treturn filters.reduce((acc, curr) => acc.concat(curr.filters ? Flatten(curr) : [curr]), []);\n\t}\n\treturn [];\n};\n\nexport enum ActionType {\n\tVIEW,\n\tCREATE,\n\tEDIT\n};\n\nexport enum DataScriptMode {\n\tIMPORT,\n\tEXPORT\n};\n\n/**\n * Base Class for Reference Purposes\n * The Model is being retrieved from the Server see: WsDataScriptController.sampleData\n */\nexport class SampleDataModel {\n\tcolumns?: any[];\n\tdata?: any[];\n\tgridHeight ?= 23;\n\terrors?: Array<string>;\n\tconstructor(columns: any, data: any) {\n\t\tthis.columns = columns;\n\t\tthis.data = data;\n\t}\n};","import {CredentialModel} from '../../credential/model/credential.model';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Headers, Http, RequestOptions, Response} from '@angular/http';\nimport {HttpInterceptor} from '../../../shared/providers/http-interceptor.provider';\nimport {PreferenceService} from '../../../shared/services/preference.service';\nimport {DataScriptModel, DataScriptMode, SampleDataModel} from '../model/data-script.model';\nimport {ProviderModel} from '../../provider/model/provider.model';\nimport {APIActionModel, APIActionParameterModel} from '../../apiAction/model/api-action.model';\nimport {AgentMethodModel} from '../../apiAction/model/agent.model';\nimport {AUTH_METHODS, ENVIRONMENT, CREDENTIAL_STATUS, REQUEST_MODE} from '../../credential/model/credential.model';\nimport {INTERVAL} from '../../../shared/model/constants';\nimport {DateUtils} from '../../../shared/utils/date.utils';\nimport {HttpResponse} from '@angular/common/http';\nimport {DOMAIN} from '../../../shared/model/constants';\nimport * as R from 'ramda';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport {Flatten, DefaultBooleanFilterData} from '../../../shared/model/data-list-grid.model';\nimport {ApiResponseModel} from '../../../shared/model/ApiResponseModel';\n\nexport const PROGRESSBAR_COMPLETED_STATUS = 'COMPLETED';\nexport const PROGRESSBAR_FAIL_STATUS = 'Failed';\n\n@Injectable()\nexport class DataScriptService {\n\n\tprivate dataDefaultUrl = '../ws';\n\tprivate jobProgressUrl = '../ws/progress';\n\tprivate dataApiActionUrl = '../ws/apiAction';\n\tprivate readonly dataIngestionUrl = '../ws/dataingestion';\n\tprivate dataScriptUrl = '../ws/dataScript';\n\tprivate credentialUrl = '../ws/credential';\n\tprivate fileSystemUrl = '../ws/fileSystem';\n\tprivate ETLScriptUploadURL = '../ws/fileSystem/uploadFileETLDesigner';\n\tprivate ETLScriptUploadTextURL = '../ws/fileSystem/uploadTextETLDesigner';\n\tprivate assetImportUploadURL = '../ws/fileSystem/uploadFileETLAssetImport';\n\tprivate readonly GET_SAMPLE_DATA_URL = this.dataIngestionUrl.concat('/datascript/{0}/sampleData/{1}?originalFileName={2}&rootNode={3}');\n\tprivate readonly GET_ETL_SCRIPT_BY_ID_URL = this.dataIngestionUrl.concat('/datascript/{0}');\n\n\tconstructor(private http: HttpInterceptor, private preferenceService: PreferenceService) {\n\t}\n\n\tgetDataScripts(): Observable<DataScriptModel[]> {\n\t\treturn this.http.get(`${this.dataIngestionUrl}/datascript/list`)\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet result = res.json();\n\t\t\t\tlet dataScriptModels = result && result.status === 'success' && result.data;\n\t\t\t\tdataScriptModels.forEach((r) => {\n\t\t\t\t\tr.mode = ((r.mode === 'Import') ? DataScriptMode.IMPORT : DataScriptMode.EXPORT);\n\t\t\t\t\tr.dateCreated = ((r.dateCreated) ? new Date(r.dateCreated) : '');\n\t\t\t\t\tr.lastUpdated = ((r.lastUpdated) ? new Date(r.lastUpdated) : '');\n\t\t\t\t});\n\t\t\t\treturn dataScriptModels;\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tgetProviders(): Observable<ProviderModel[]> {\n\t\treturn this.http.get(`${this.dataIngestionUrl}/provider/list`)\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet result = res.json();\n\t\t\t\tlet providerModels = result && result.status === 'success' && result.data;\n\t\t\t\tproviderModels.forEach((r) => {\n\t\t\t\t\tr.dateCreated = ((r.dateCreated) ? new Date(r.dateCreated) : '');\n\t\t\t\t\tr.lastUpdated = ((r.lastUpdated) ? new Date(r.lastUpdated) : '');\n\t\t\t\t});\n\t\t\t\treturn providerModels;\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tgetAPIActions(): Observable<APIActionModel[]> {\n\t\treturn this.http.get(`${this.dataDefaultUrl}/apiAction`)\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet result = res.json();\n\t\t\t\tlet dataScriptModels = result && result.status === 'success' && result.data;\n\t\t\t\tdataScriptModels.forEach((model) => {\n\t\t\t\t\tthis.transformApiActionModel(model);\n\t\t\t\t});\n\t\t\t\treturn dataScriptModels;\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tgetAPIAction(id: number): Observable<APIActionModel> {\n\t\treturn this.http.get(`${this.dataDefaultUrl}/apiAction/${id}`)\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet result = res.json();\n\t\t\t\tlet model = result && result.status === 'success' && result.data;\n\t\t\t\tthis.transformApiActionModel(model);\n\t\t\t\treturn model;\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tprivate transformApiActionModel(model: any): void {\n\t\tmodel.agentMethod = {id: model.agentMethod};\n\t\tmodel.dateCreated = ((model.dateCreated) ? new Date(model.dateCreated) : '');\n\t\tmodel.lastUpdated = ((model.lastUpdated) ? new Date(model.lastUpdated) : '');\n\t\tmodel.producesData = (model.producesData === 1);\n\t\tmodel.polling = {\n\t\t\tfrequency: {\n\t\t\t\tvalue: model.pollingInterval,\n\t\t\t\tinterval: INTERVAL.SECONDS\n\t\t\t},\n\t\t\tlapsedAfter: {\n\t\t\t\tvalue: DateUtils.convertInterval({ value: model.pollingLapsedAfter, interval: INTERVAL.SECONDS }, INTERVAL.MINUTES),\n\t\t\t\tinterval: INTERVAL.MINUTES\n\t\t\t},\n\t\t\tstalledAfter: {\n\t\t\t\tvalue: DateUtils.convertInterval({ value: model.pollingStalledAfter, interval: INTERVAL.SECONDS }, INTERVAL.MINUTES),\n\t\t\t\tinterval: INTERVAL.MINUTES\n\t\t\t}\n\t\t};\n\t\tmodel.defaultDataScript = (model.defaultDataScript) ? model.defaultDataScript : {id: 0, name: ''};\n\t\tif (model.reactionScripts && model.reactionScripts !== null && model.reactionScripts !== 'null') {\n\t\t\tAPIActionModel.createReactions(model, model.reactionScripts);\n\t\t} else {\n\t\t\tAPIActionModel.createBasicReactions(model);\n\t\t}\n\t}\n\n\tgetAPIActionEnums(): Observable<any> {\n\t\treturn this.http.get(`${this.dataApiActionUrl}/enums`)\n\t\t\t.map((res: Response) => {\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tgetCredentials(): Observable<CredentialModel[]> {\n\t\treturn this.http.get(`${this.credentialUrl}`)\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet result = res.json();\n\t\t\t\tlet credentialModels = result && result.status === 'success' && result.data;\n\n\t\t\t\tcredentialModels.forEach((model) => {\n\t\t\t\t\t// r.dateCreated = ((r.dateCreated) ? new Date(r.dateCreated) : '');\n\t\t\t\t\t// r.environment = ENVIRONMENT[r.environment];\n\t\t\t\t\t// r.authMethod = AUTH_METHODS[r.authenticationMethod];\n\t\t\t\t\t// r.status = CREDENTIAL_STATUS[r.status];\n\t\t\t\t\tthis.processCredentialModel(model);\n\t\t\t\t});\n\t\t\t\treturn credentialModels;\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\t/**\n\t * GET Credential by id.\n\t * @returns {Observable<CredentialModel[]>}\n\t */\n\tgetCredential(id: number): Observable<CredentialModel> {\n\t\treturn this.http.get(`${this.credentialUrl}/${id}`)\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet result = res.json();\n\t\t\t\tlet model = result && result.status === 'success' && result.data;\n\t\t\t\tthis.processCredentialModel(model);\n\t\t\t\treturn model;\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tprivate processCredentialModel(model): void {\n\t\tmodel.dateCreated = ((model.dateCreated) ? new Date(model.dateCreated) : '');\n\t\tmodel.environment = ENVIRONMENT[model.environment];\n\t\tmodel.authMethod = AUTH_METHODS[model.authenticationMethod];\n\t\tmodel.status = CREDENTIAL_STATUS[model.status];\n\t}\n\n\t/**\n\t * Get the List of Elements we need to populate in the UI - dropdownlist\n\t * @returns {Observable<any>}\n\t */\n\tgetCredentialEnumsConfig(): Observable<any> {\n\t\treturn this.http.get(`${this.credentialUrl}/enums`)\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet result = res.json();\n\t\t\t\treturn result && result.status === 'success' && result.data;\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\t/**\n\t * Validate and wrap the content of the Parameters inside the Model and creates and observable from it.\n\t * @param {APIActionModel} model\n\t * @returns {Observable<APIActionParameterModel[]>}\n\t */\n\tgetParameters(model: APIActionModel): Observable<APIActionParameterModel[]> {\n\t\treturn new Observable(observer => {\n\t\t\tif (model.methodParams && model.methodParams !== null && model.methodParams !== '') {\n\t\t\t\tlet parameterList = JSON.parse(model.methodParams);\n\t\t\t\tparameterList.forEach( (param) => {\n\t\t\t\t\tif (param.property && param.property.field) {\n\t\t\t\t\t\tparam.property = param.property.field;\n\t\t\t\t\t}\n\t\t\t\t\tif (param.context === 'ASSET') {\n\t\t\t\t\t\tparam.context = DOMAIN.COMMON;\n\t\t\t\t\t}\n\t\t\t\t\tdelete param.sourceFieldList;\n\t\t\t\t\tdelete param.currentFieldList;\n\t\t\t\t});\n\n\t\t\t\tobserver.next(parameterList);\n\t\t\t}\n\t\t\tobserver.complete();\n\t\t});\n\t}\n\n\t/**\n\t * Get Sample Data of a File by passing the FileName to the server\n\t * @param {number} id\n\t * @param {string} fileName\n\t * @param {string} originalFileName\n\t * @returns {Observable<SampleDataModel>}\n\t */\n\tgetSampleData(id: number, fileName: string, originalFileName = '', rootNode: string): Observable<SampleDataModel> {\n\t\treturn this.http.get(this.GET_SAMPLE_DATA_URL\n\t\t\t.replace('{0}', id.toString())\n\t\t\t.replace('{1}', fileName)\n\t\t\t.replace('{2}', originalFileName)\n\t\t\t.replace('{3}', rootNode))\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet result = res.json();\n\t\t\t\tlet data: any = (result && result.status === 'success' && result.data);\n\t\t\t\tlet columns: any = [];\n\t\t\t\tlet sampleDataModel: SampleDataModel;\n\t\t\t\tif (result.status === ApiResponseModel.API_ERROR && result.errors) {\n\t\t\t\t\tsampleDataModel = {\n\t\t\t\t\t\terrors: result.errors\n\t\t\t\t\t};\n\t\t\t\t\treturn sampleDataModel;\n\t\t\t\t}\n\t\t\t\tif (data.config) {\n\t\t\t\t\tfor (let property in data.config) {\n\t\t\t\t\t\tif (data.config.hasOwnProperty(property)) {\n\t\t\t\t\t\t\tconst label = data.config[property].property;\n\t\t\t\t\t\t\tlet column = {\n\t\t\t\t\t\t\t\tlabel,\n\t\t\t\t\t\t\t\tproperty: label,\n\t\t\t\t\t\t\t\ttype: data.config[property].type,\n\t\t\t\t\t\t\t\twidth: 140\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcolumns.push(column);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tsampleDataModel = new SampleDataModel(columns, data.rows);\n\t\t\t\t\tsampleDataModel.gridHeight = 300;\n\t\t\t\t}\n\t\t\t\treturn sampleDataModel;\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tgetActionMethodById(agentId: number): Observable<AgentMethodModel[]> {\n\t\treturn this.http.get(`${this.dataApiActionUrl}/connector/${agentId}`)\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet result = res.json();\n\t\t\t\tlet agentMethodModel = new Array<AgentMethodModel>();\n\t\t\t\tfor (let property in result) {\n\t\t\t\t\tif (result.hasOwnProperty(property)) {\n\t\t\t\t\t\tagentMethodModel.push({\n\t\t\t\t\t\t\tid: result[property].apiMethod,\n\t\t\t\t\t\t\tname: result[property].name,\n\t\t\t\t\t\t\tdescription: result[property].description,\n\t\t\t\t\t\t\tendpointUrl: result[property].endpointUrl,\n\t\t\t\t\t\t\tdocUrl: result[property].docUrl,\n\t\t\t\t\t\t\tproducesData: (result[property].producesData === 1),\n\t\t\t\t\t\t\tpolling: {\n\t\t\t\t\t\t\t\tfrequency: {\n\t\t\t\t\t\t\t\t\tvalue: ((result[property].pollingInterval) ? result[property].pollingInterval : 0),\n\t\t\t\t\t\t\t\t\tinterval: INTERVAL.SECONDS\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tlapsedAfter: {\n\t\t\t\t\t\t\t\t\tvalue: DateUtils.convertInterval({\n\t\t\t\t\t\t\t\t\t\tvalue: ((result[property].pollingLapsedAfter) ? result[property].pollingLapsedAfter : 0),\n\t\t\t\t\t\t\t\t\t\tinterval: INTERVAL.SECONDS\n\t\t\t\t\t\t\t\t\t}, INTERVAL.MINUTES),\n\t\t\t\t\t\t\t\t\tinterval: INTERVAL.MINUTES\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tstalledAfter: {\n\t\t\t\t\t\t\t\t\tvalue: DateUtils.convertInterval({\n\t\t\t\t\t\t\t\t\t\tvalue: ((result[property].pollingStalledAfter) ? result[property].pollingStalledAfter : 0),\n\t\t\t\t\t\t\t\t\t\tinterval: INTERVAL.SECONDS\n\t\t\t\t\t\t\t\t\t}, INTERVAL.MINUTES),\n\t\t\t\t\t\t\t\t\tinterval: INTERVAL.MINUTES\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmethodParams: result[property].params,\n\t\t\t\t\t\t\tscript: result[property].script,\n\t\t\t\t\t\t\thttpMethod: result[property].httpMethod\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tresult = agentMethodModel;\n\t\t\t\treturn result;\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tsaveDataScript(model: DataScriptModel): Observable<DataScriptModel> {\n\t\tlet postRequest = {\n\t\t\tname: model.name,\n\t\t\tdescription: model.description,\n\t\t\tmode: model.mode === DataScriptMode.IMPORT ? 'Import' : 'Export',\n\t\t\tproviderId: model.provider.id,\n\t\t\tetlSourceCode: model.etlSourceCode\n\t\t};\n\t\tif (!model.id) {\n\t\t\treturn this.http.post(`${this.dataIngestionUrl}/datascript`, JSON.stringify(postRequest))\n\t\t\t\t.map((res: Response) => {\n\t\t\t\t\tlet result = res.json();\n\t\t\t\t\tlet dataItem = (result && result.status === 'success' && result.data);\n\t\t\t\t\tdataItem.dataScript.mode = (dataItem.dataScript.mode === 'Import') ? DataScriptMode.IMPORT : DataScriptMode.EXPORT;\n\t\t\t\t\treturn dataItem;\n\t\t\t\t})\n\t\t\t\t.catch((error: any) => error.json());\n\t\t} else {\n\t\t\treturn this.http.put(`${this.dataIngestionUrl}/datascript/${model.id}`, JSON.stringify(postRequest))\n\t\t\t\t.map((res: Response) => {\n\t\t\t\t\tlet result = res.json();\n\t\t\t\t\treturn result && result.status === 'success' && result.data;\n\t\t\t\t})\n\t\t\t\t.catch((error: any) => error.json());\n\t\t}\n\t}\n\n\tsaveProvider(model: ProviderModel): Observable<ProviderModel> {\n\t\tlet postRequest = {\n\t\t\tname: model.name,\n\t\t\tdescription: model.description,\n\t\t\tcomment: model.comment\n\t\t};\n\t\tif (!model.id) {\n\t\t\treturn this.http.post(`${this.dataIngestionUrl}/provider`, JSON.stringify(postRequest))\n\t\t\t\t.map((res: Response) => {\n\t\t\t\t\tlet result = res.json();\n\t\t\t\t\treturn result && result.status === 'success' && result.data;\n\t\t\t\t})\n\t\t\t\t.catch((error: any) => error.json());\n\t\t} else {\n\t\t\treturn this.http.put(`${this.dataIngestionUrl}/provider/${model.id}`, JSON.stringify(postRequest))\n\t\t\t\t.map((res: Response) => {\n\t\t\t\t\tlet result = res.json();\n\t\t\t\t\treturn result && result.status === 'success' && result.data;\n\t\t\t\t})\n\t\t\t\t.catch((error: any) => error.json());\n\t\t}\n\t}\n\n\tsaveAPIAction(model: APIActionModel, parameterList: any): Observable<DataScriptModel> {\n\t\tlet postRequest: any = {\n\t\t\tname: model.name,\n\t\t\tdescription: model.description,\n\t\t\tprovider: { id: model.provider.id },\n\t\t\tapiCatalog: { id: model.dictionary.id },\n\t\t\tconnectorMethod: model.agentMethod.id,\n\t\t\thttpMethod: model.httpMethod,\n\t\t\tendpointUrl: model.endpointUrl,\n\t\t\tdocUrl: model.docUrl,\n\t\t\tproducesData: (model.producesData) ? 1 : 0,\n\t\t\tisPolling: (model.isPolling) ? 1 : 0,\n\t\t\tpollingInterval: DateUtils.convertInterval(model.polling.frequency, INTERVAL.SECONDS),\n\t\t\tpollingLapsedAfter: DateUtils.convertInterval(model.polling.lapsedAfter, INTERVAL.SECONDS),\n\t\t\tpollingStalledAfter: DateUtils.convertInterval(model.polling.stalledAfter, INTERVAL.SECONDS),\n\t\t};\n\n\t\tlet reaction = {\n\t\t\t'STATUS': model.eventReactions[0].value,\n\t\t\t'SUCCESS': model.eventReactions[1].value,\n\t\t\t'DEFAULT': model.eventReactions[2].value,\n\t\t\t'ERROR': model.eventReactions[3].value,\n\t\t\t'FAILED': model.eventReactions[4].value,\n\t\t\t'LAPSED': model.eventReactions[5].value,\n\t\t\t'STALLED': model.eventReactions[6].value,\n\t\t\t'PRE': model.eventReactions[7].value,\n\t\t\t'FINAL': model.eventReactions[8].value\n\t\t};\n\n\t\tpostRequest['reactionScripts'] = JSON.stringify(reaction);\n\n\t\tpostRequest['defaultDataScript'] = { id: ((postRequest.producesData === 1 && model.defaultDataScript.id !== 0) ? model.defaultDataScript.id : null) };\n\n\t\tif (parameterList && parameterList.length > 0) {\n\t\t\tlet requestParameterListData = R.clone(parameterList);\n\t\t\trequestParameterListData.forEach( (param) => {\n\t\t\t\tif (param.fieldName && param.fieldName.field) {\n\t\t\t\t\tparam.fieldName = param.fieldName.field;\n\t\t\t\t}\n\t\t\t\tif (param.context && param.context.assetClass) {\n\t\t\t\t\tparam.context = param.context.assetClass;\n\t\t\t\t}\n\t\t\t\tif (param.context === DOMAIN.COMMON) {\n\t\t\t\t\tparam.context = 'ASSET';\n\t\t\t\t}\n\t\t\t\tdelete param.sourceFieldList;\n\t\t\t\tdelete param.currentFieldList;\n\t\t\t});\n\t\t\tpostRequest['methodParams'] = JSON.stringify(requestParameterListData);\n\t\t}\n\n\t\tif (model.credential && model.credential.id && model.credential.id !== 0) {\n\t\t\tpostRequest.credential = { id: model.credential.id };\n\t\t}\n\n\t\tif (!model.id) {\n\t\t\treturn this.http.post(`${this.dataDefaultUrl}/apiAction`, JSON.stringify(postRequest))\n\t\t\t\t.map((res: Response) => {\n\t\t\t\t\tlet result = res.json();\n\t\t\t\t\tlet dataItem = (result && result.status === 'success' && result.data);\n\t\t\t\t\treturn dataItem;\n\t\t\t\t})\n\t\t\t\t.catch((error: any) => error.json());\n\t\t} else {\n\t\t\tpostRequest.version = model.version;\n\t\t\treturn this.http.put(`${this.dataDefaultUrl}/apiAction/${model.id}`, JSON.stringify(postRequest))\n\t\t\t\t.map((res: Response) => {\n\t\t\t\t\tlet result = res.json();\n\t\t\t\t\treturn result && result.status === 'success' && result.data;\n\t\t\t\t})\n\t\t\t\t.catch((error: any) => error.json());\n\t\t}\n\t}\n\n\tsaveCredential(model: CredentialModel): Observable<CredentialModel> {\n\n\t\tlet postRequest: any = {\n\t\t\tname: model.name,\n\t\t\tdescription: model.description,\n\t\t\tenvironment: Object.keys(ENVIRONMENT).find((type) => ENVIRONMENT[type] === model.environment),\n\t\t\tprovider: {id: model.provider.id},\n\t\t\tstatus: model.status.toUpperCase(),\n\t\t\tauthenticationMethod: Object.keys(AUTH_METHODS).find((type) => AUTH_METHODS[type] === model.authMethod),\n\t\t\tusername: model.username,\n\t\t\tauthenticationUrl: (model.authenticationUrl) ? model.authenticationUrl : '',\n\t\t\tterminateUrl: (model.terminateUrl) ? model.terminateUrl : '',\n\t\t\trenewTokenUrl: (model.renewTokenUrl) ? model.renewTokenUrl : '',\n\t\t\trequestMode: (model.requestMode === REQUEST_MODE.BASIC_AUTH) ? 'BASIC_AUTH' : 'FORM_VARS',\n\t\t\thttpMethod: model.httpMethod.toUpperCase()\n\t\t};\n\n\t\t// Properties only required on this methods.\n\t\tif (model.authMethod === AUTH_METHODS.COOKIE || model.authMethod === AUTH_METHODS.HEADER || model.authMethod === AUTH_METHODS.BASIC_AUTH) {\n\t\t\tif (model.authMethod === AUTH_METHODS.COOKIE || model.authMethod === AUTH_METHODS.HEADER ) {\n\t\t\t\tpostRequest.sessionName = (model.sessionName) ? model.sessionName  : '';\n\t\t\t}\n\t\t\tpostRequest.validationExpression = (model.validationExpression) ? model.validationExpression  : '';\n\t\t}\n\n\t\t// The UI validates if the Password exists however, on edition is not required unless you want to change it\n\t\tif (model.password && model.password.length > 0 && model.password !== '') {\n\t\t\tpostRequest.password = model.password;\n\t\t}\n\n\t\tif (!model.id) {\n\t\t\treturn this.http.post(`${this.credentialUrl}`, JSON.stringify(postRequest))\n\t\t\t\t.map((res: Response) => {\n\t\t\t\t\tlet result = res.json();\n\t\t\t\t\tlet dataItem = (result && result.status === 'success' && result.data);\n\t\t\t\t\treturn dataItem;\n\t\t\t\t})\n\t\t\t\t.catch((error: any) => error.json());\n\t\t} else {\n\t\t\tpostRequest.version = model.version;\n\t\t\treturn this.http.put(`${this.credentialUrl}/${model.id}`, JSON.stringify(postRequest))\n\t\t\t\t.map((res: Response) => {\n\t\t\t\t\tlet result = res.json();\n\t\t\t\t\treturn result && result.status === 'success' && result.data;\n\t\t\t\t})\n\t\t\t\t.catch((error: any) => error.json());\n\t\t}\n\t}\n\n\tvalidateUniquenessDataScriptByName(model: DataScriptModel): Observable<boolean> {\n\t\tlet postRequest = {\n\t\t\tproviderId: model.provider.id,\n\t\t\tname: model.name\n\t\t};\n\t\tif (model.id) {\n\t\t\tpostRequest['dataScriptId'] = model.id;\n\t\t}\n\t\treturn this.http.post(`${this.dataIngestionUrl}/datascript/validateUnique`, JSON.stringify(postRequest))\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet result = res.json();\n\t\t\t\treturn result && result.status === 'success' && result.data && result.data.isUnique;\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tvalidateUniquenessProviderByName(model: ProviderModel): Observable<ProviderModel> {\n\t\tlet postRequest = {};\n\t\tif (model.id) {\n\t\t\tpostRequest['providerId'] = model.id;\n\t\t}\n\t\treturn this.http.post(`${this.dataIngestionUrl}/provider/validateUnique/${model.name}`, JSON.stringify(postRequest))\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet result = res.json();\n\t\t\t\treturn result && result.status === 'success' && result.data;\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tvalidateCode(scripts: any): Observable<any> {\n\t\treturn this.http.post(`${this.dataApiActionUrl}/validateSyntax`, JSON.stringify({scripts: scripts}))\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet result = res.json();\n\t\t\t\treturn result && result.status === 'success' && result.data;\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\t/**\n\t * Validate if the Authentication meets the requirements\n\t * @param {number} credentialId\n\t * @returns {Observable<any>}\n\t */\n\tvalidateAuthentication(credentialId: number): Observable<any> {\n\t\treturn this.http.post(`${this.credentialUrl}/test/${credentialId}`, null)\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet result = res.json();\n\t\t\t\treturn result && result.status === 'success' && result.data;\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\t/**\n\t * Validate if the expression executed is correct\n\t * @param {string} validateExpression\n\t * @returns {Observable<any>}\n\t */\n\tvalidateExpressionCheck(validateExpression: string): Observable<any> {\n\t\tlet postRequest = {\n\t\t\texpression: validateExpression\n\t\t};\n\t\treturn this.http.post(`${this.credentialUrl}/checkValidExprSyntax`, JSON.stringify(postRequest))\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet result = res.json();\n\t\t\t\tlet errorResult = result && result.status === 'success' && result.data;\n\t\t\t\tlet errors = '';\n\t\t\t\tif (errorResult['errors']) {\n\t\t\t\t\terrorResult['errors'].forEach((error: string) => {\n\t\t\t\t\t\terrors += error + '\\n';\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tvalid: errorResult.valid,\n\t\t\t\t\terror: errors\n\t\t\t\t};\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\t/**\n\t * Validate if the current DataScript is being or not used somewhere\n\t * @param {number} id\n\t * @returns {Observable<string>}\n\t */\n\tvalidateDeleteScript(id: number): Observable<string> {\n\t\treturn this.http.get(`${this.dataIngestionUrl}/datascript/validateDelete/${id}`)\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet result = res.json();\n\t\t\t\treturn result && result.status === 'success' && result.data;\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tdeleteDataScript(id: number): Observable<string> {\n\t\treturn this.http.delete(`${this.dataIngestionUrl}/datascript/${id}`)\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet result = res.json();\n\t\t\t\treturn result && result.status === 'success' && result.data;\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tdeleteProvider(id: number): Observable<string> {\n\t\treturn this.http.delete(`${this.dataIngestionUrl}/provider/${id}`)\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet result = res.json();\n\t\t\t\treturn result && result.status === 'success' && result.data;\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tdeleteAPIAction(id: number): Observable<string> {\n\t\treturn this.http.delete(`${this.dataDefaultUrl}/apiAction/${id}`)\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet result = res.json();\n\t\t\t\treturn result && result.status === 'success' && result.data;\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tdeleteCredential(id: number): Observable<string> {\n\t\treturn this.http.delete(`${this.credentialUrl}/${id}`)\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet result = res.json();\n\t\t\t\treturn result && result.status === 'success' && result.data;\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tsaveScript(id: number, script: string): Observable<any> {\n\t\tlet postRequest = {\n\t\t\tid: id,\n\t\t\tscript: script\n\t\t};\n\t\treturn this.http.post(`${this.dataScriptUrl}/saveScript`, JSON.stringify(postRequest))\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet result = res.json();\n\t\t\t\treturn result && result.status === 'success';\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tgetETLScript(id: number): Observable<ApiResponseModel> {\n\t\treturn this.http.get(this.GET_ETL_SCRIPT_BY_ID_URL.replace('{0}', id.toString()) )\n\t\t\t.map((res: Response) => {\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\t/**\n\t * POST - this will create a progress job for the test script process.\n\t * @param {string} script\n\t * @param {string} filename\n\t * @returns {Observable<any>}\n\t */\n\ttestScript(script: string, filename: string): Observable<ApiResponseModel> {\n\t\tlet postRequest = {\n\t\t\tscript: script,\n\t\t\tfilename: filename\n\t\t};\n\t\treturn this.http.post(`${this.dataScriptUrl}/initiateTestScript`, JSON.stringify(postRequest))\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet response = res.json();\n\t\t\t\treturn response;\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tcheckSyntax(script: string, filename: string): Observable<any> {\n\t\tlet postRequest = {\n\t\t\tscript: script,\n\t\t\tfilename: filename\n\t\t};\n\t\treturn this.http.post(`${this.dataScriptUrl}/checkSyntax`, JSON.stringify(postRequest))\n\t\t\t.map((res: Response) => {\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tuploadText(content: string, extension: string): Observable<any> {\n\t\tlet postRequest = {\n\t\t\tcontent: content,\n\t\t\textension: extension\n\t\t};\n\t\treturn this.http.post(`${this.fileSystemUrl}/uploadText`, JSON.stringify(postRequest))\n\t\t\t.map((res: Response) => {\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tuploadETLScriptFileText(content: string, extension: string): Observable<any> {\n\t\tlet postRequest = {\n\t\t\tcontent: content,\n\t\t\textension: extension\n\t\t};\n\t\treturn this.http.post(this.ETLScriptUploadTextURL, JSON.stringify(postRequest))\n\t\t\t.map((res: Response) => {\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tuploadFile(formdata: any): Observable<any | HttpResponse<any>> {\n\t\tconst headers = new Headers({});\n\t\tconst options = new RequestOptions({ headers: headers });\n\t\treturn this.http.post(`${this.fileSystemUrl}/uploadFile`, formdata, options)\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet response = res.json().data;\n\t\t\t\treturn new HttpResponse({status: 200, body: { data : response } });\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tuploadETLScriptFile(formdata: any): Observable<any | HttpResponse<any>> {\n\t\tconst headers = new Headers({});\n\t\tconst options = new RequestOptions({ headers: headers });\n\t\treturn this.http.post(this.ETLScriptUploadURL, formdata, options)\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet response = res.json().data;\n\t\t\t\treturn new HttpResponse({status: 200, body: { data : response } });\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tuploadAssetImportFile(formdata: any): Observable<any | HttpResponse<any>> {\n\t\tconst headers = new Headers({});\n\t\tconst options = new RequestOptions({ headers: headers });\n\t\treturn this.http.post(this.assetImportUploadURL, formdata, options)\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet response = res.json().data;\n\t\t\t\treturn new HttpResponse({status: 200, body: { data : response } });\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tdeleteFile(filename: string): Observable<any | HttpResponse<any>> {\n\t\tlet body = JSON.stringify({filename: filename} );\n\t\tlet headers = new Headers({ 'Content-Type': 'application/json' });\n\t\tlet options = new RequestOptions({\n\t\t\theaders: headers,\n\t\t\tbody : body\n\t\t});\n\t\treturn this.http.delete(`${this.fileSystemUrl}/delete`, options)\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet response = res.json();\n\t\t\t\tresponse.operation = 'delete';\n\t\t\t\treturn new HttpResponse({status: 200, body: { data : response } });\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\tprivate getUserPreference(preferenceName: string): Observable<any> {\n\t\treturn this.preferenceService.getPreference(preferenceName);\n\t}\n\n\t/**\n\t * Based on provided column, update the structure which holds the current selected filters\n\t * @param {any} column: Column to filter\n\t * @param {any} state: Current filters state\n\t * @returns {any} Filter structure updated\n\t */\n\tfilterColumn(column: any, state: any): any {\n\t\tlet root = state.filter || { logic: 'and', filters: [] };\n\n\t\tlet [filter] = Flatten(root).filter(item => item.field === column.property);\n\n\t\tif (!column.filter) {\n\t\t\tcolumn.filter = '';\n\t\t}\n\n\t\tif (column.type === 'text') {\n\t\t\tif (!filter) {\n\t\t\t\troot.filters.push({\n\t\t\t\t\tfield: column.property,\n\t\t\t\t\toperator: 'contains',\n\t\t\t\t\tvalue: column.filter,\n\t\t\t\t\tignoreCase: true\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tfilter = root.filters.find((r) => {\n\t\t\t\t\treturn r['field'] === column.property;\n\t\t\t\t});\n\t\t\t\tfilter.value = column.filter;\n\t\t\t}\n\t\t}\n\n\t\tif (column.type === 'date') {\n\t\t\tconst {init, end} = DateUtils.getInitEndFromDate(column.filter);\n\n\t\t\tif (filter) {\n\t\t\t\tstate.filter.filters = this.getFiltersExcluding(column.property, state);\n\t\t\t}\n\t\t\troot.filters.push({ field: column.property, operator: 'gte', value: init, });\n\t\t\troot.filters.push({ field: column.property, operator: 'lte', value: end });\n\t\t}\n\n\t\tif (column.type === 'boolean') {\n\t\t\tif (!filter) {\n\t\t\t\troot.filters.push({\n\t\t\t\t\tfield: column.property,\n\t\t\t\t\toperator: 'eq',\n\t\t\t\t\tvalue: (column.filter === 'True')\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (column.filter === DefaultBooleanFilterData) {\n\t\t\t\t\tthis.clearFilter(column, state);\n\t\t\t\t} else {\n\t\t\t\t\tfilter = root.filters.find((r) => {\n\t\t\t\t\t\treturn r['field'] === column.property;\n\t\t\t\t\t});\n\t\t\t\t\tfilter.value = (column.filter === 'True');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn root;\n\t}\n\n\t/**\n\t * Update the filters state structure removing the column filter provided\n\t * @param {any} column: Column to exclude from filters\n\t * @param {any} state: Current filters state\n\t * @returns void\n\t */\n\tclearFilter(column: any, state: any): void {\n\t\tcolumn.filter = '';\n\t\tstate.filter.filters = this.getFiltersExcluding(column.property, state);\n\t}\n\n\t/**\n\t * Get the filters state structure excluding the column filter name provided\n\t * @param {string} excludeFilterName:  Name of the filter column to exclude\n\t * @param {any} state: Current filters state\n\t * @returns void\n\t */\n\tgetFiltersExcluding(excludeFilterName: string, state: any): any {\n\t\tconst filters = (state.filter && state.filter.filters) || [];\n\t\treturn  filters.filter((r) => r['field'] !== excludeFilterName);\n\t}\n\n\t/**\n\t * GET - Gets any job current progresss based on progressKey used as a unique job identifier.\n\t * @param {string} progressKey\n\t * @returns {Observable<ApiResponseModel>}\n\t */\n\tgetJobProgress(progressKey: string): Observable<ApiResponseModel> {\n\t\treturn this.http.get(`${this.jobProgressUrl}/${progressKey}`)\n\t\t\t.map((res: Response) => {\n\t\t\t\treturn res.json();\n\t\t\t}).catch((error: any) => error.json());\n\t}\n}","import {Injectable} from '@angular/core';\nimport { Response } from '@angular/http';\nimport {HttpInterceptor} from '../../../shared/providers/http-interceptor.provider';\nimport {Observable} from 'rxjs';\nimport {ApiResponseModel} from '../../../shared/model/ApiResponseModel';\n\n@Injectable()\nexport class ImportAssetsService {\n\n\tprivate importEndpointURL = '../ws/assetImport/';\n\n\tconstructor(private http: HttpInterceptor) {}\n\n\t/**\n\t * Returns a collection of data lists including the actions and datascripts used to populate the form\n\t * @returns {Observable<Array<any>>}\n\t */\n\tpublic getManualOptions(): Observable<any> {\n\t\tlet url = this.importEndpointURL + 'manualFormOptions';\n\t\treturn this.http.get(url)\n\t\t\t.map((res: Response) => {\n\t\t\t\treturn res.json();\n\t\t\t}).catch((error: any) => error.json());\n\t}\n\n\t/**\n\t * Used to invoke the fetch job that will call remote system to pull data back to the server.\n\t * @param option\n\t * @returns {Observable<any>} This will return status and the filename.\n\t */\n\tpublic postFetch(action: any): Observable<any> {\n\t\tlet url = this.importEndpointURL + 'invokeFetchAction/' + action.id;\n\t\treturn this.http.post(url, null)\n\t\t\t.map((res: Response) => {\n\t\t\t\treturn res.json();\n\t\t\t}).catch((error: any) => error.json());\n\t}\n\n\t/**\n\t * Retrieves the raw data from the Fetch or Transform. This requires the name of the file that was generated.\n\t * The content-type: will be returned with the request. Initially it will be for CSV or JSON (future releases will return XML and Excel)\n\t * @param {string} filename\n\t * @returns {Observable<any>}\n\t */\n\tpublic getFileContent(filename: string): Observable<any> {\n\t\tlet url = this.importEndpointURL + 'viewData?filename=' + filename;\n\t\treturn this.http.get(url)\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet fileExtension = filename.split('.').pop();\n\t\t\t\tif (fileExtension === 'json') {\n\t\t\t\t\treturn res.json();\n\t\t\t\t} else {\n\t\t\t\t\treturn res['_body'];\n\t\t\t\t}\n\t\t\t}).catch((error: any) => error.json());\n\t}\n\n\t/**\n\t * Invoke an ETL process on the filename (from invokeFetch) passed in using the DataScript that was specified.\n\t * @param option\n\t * @returns {Observable<any>} It will return the status including counts, errors, and output filename.\n\t */\n\tpublic postTransform(datascript: any, filename: string): Observable<ApiResponseModel> {\n\t\tlet url = this.importEndpointURL + 'initiateTransformData?dataScriptId=' + datascript.id + '&filename=' + filename;\n\t\treturn this.http.post(url, null)\n\t\t\t.map((res: Response) => {\n\t\t\t\treturn res.json();\n\t\t\t}).catch((error: any) => error.json());\n\t}\n\n\t/**\n\t * The call should pass in the filename returned from the transformData step.\n\t * @returns {Observable<any>} It should return the results of the import.\n\t */\n\tpublic postImport(filename: string): Observable<any> {\n\t\tlet url = this.importEndpointURL + 'loadData?filename=' + filename;\n\t\treturn this.http.post(url, null)\n\t\t\t.map((res: Response) => {\n\t\t\t\treturn res.json();\n\t\t\t}).catch((error: any) => error.json());\n\t}\n}\n","import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpEventType, HttpHandler, HttpInterceptor, HttpProgressEvent, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport 'rxjs/add/operator/delay';\nimport 'rxjs/add/observable/concat';\nimport {DataScriptService} from '../../modules/dataScript/service/data-script.service';\nimport {FileRestrictions} from '@progress/kendo-angular-upload';\nimport {\n\tASSET_IMPORT_FILE_UPLOAD_TYPE,\n\tETL_SCRIPT_FILE_UPLOAD_TYPE, FILE_UPLOAD_REMOVE_URL, FILE_UPLOAD_SAVE_URL,\n\tFILE_UPLOAD_TYPE_PARAM,\n\tREMOVE_FILENAME_PARAM, SAVE_FILENAME_PARAM\n} from '../model/constants';\n\n/**\n * Mainly used by Kendo Upload Component.\n * @see Kendo Upload Component docs.\n */\n\n@Injectable()\nexport class KendoFileUploadInterceptor implements HttpInterceptor {\n\n\tconstructor(private dataIngestionService: DataScriptService) {}\n\n\tintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\t\tif (req.url === FILE_UPLOAD_SAVE_URL) {\n\t\t\tlet events: Observable<HttpEvent<any>>[] = [100].map((x) => Observable.of(<HttpProgressEvent>{\n\t\t\t\ttype: HttpEventType.UploadProgress,\n\t\t\t\tloaded: x,\n\t\t\t\ttotal: 100\n\t\t\t}).delay(1000));\n\t\t\tif (req.body.get(FILE_UPLOAD_TYPE_PARAM) === ETL_SCRIPT_FILE_UPLOAD_TYPE) {\n\t\t\t\tevents.push(this.dataIngestionService.uploadETLScriptFile(req.body));\n\t\t\t} else if (req.body.get(FILE_UPLOAD_TYPE_PARAM) === ASSET_IMPORT_FILE_UPLOAD_TYPE) {\n\t\t\t\tevents.push(this.dataIngestionService.uploadAssetImportFile(req.body));\n\t\t\t} else {\n\t\t\t\tevents.push(this.dataIngestionService.uploadFile(req.body));\n\t\t\t}\n\t\t\treturn Observable.concat(...events);\n\t\t}\n\t\tif (req.url === FILE_UPLOAD_REMOVE_URL) {\n\t\t\tlet filename = req.body.get(REMOVE_FILENAME_PARAM);\n\t\t\treturn this.dataIngestionService.deleteFile(filename);\n\t\t}\n\t}\n}\n\nexport class KendoFileUploadBasicConfig {\n\n\tuploadRestrictions: FileRestrictions;\n\tuploadSaveUrl: string;\n\tuploadDeleteUrl: string;\n\tautoUpload: boolean;\n\tsaveField: string;\n\tremoveField: string;\n\tmultiple: boolean;\n\t[x: string]: any; // this enables the model to add any extra property as needed.\n\n\tconstructor() {\n\t\tthis.uploadRestrictions = { allowedExtensions: ['csv', 'xml', 'json', 'xlsx', 'xls'] };\n\t\tthis.uploadSaveUrl = FILE_UPLOAD_SAVE_URL;\n\t\tthis.uploadDeleteUrl = FILE_UPLOAD_REMOVE_URL;\n\t\tthis.autoUpload = false;\n\t\tthis.saveField =  SAVE_FILENAME_PARAM;\n\t\tthis.removeField = REMOVE_FILENAME_PARAM;\n\t\tthis.multiple = false;\n\t}\n}"],"sourceRoot":""}