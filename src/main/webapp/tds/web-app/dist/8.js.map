{"version":3,"sources":["webpack:///./web-app/app-js/modules/credential/components/list/credential-list.component.ts","webpack:///./web-app/app-js/modules/credential/components/view-edit/credential-view-edit.component.ts","webpack:///./web-app/app-js/modules/credential/credential-routing.states.ts","webpack:///./web-app/app-js/modules/credential/credential.module.ts","webpack:///./web-app/app-js/modules/credential/popups/popup-session-authentication-name.component.ts","webpack:///./web-app/app-js/modules/credential/popups/popup-validate-expression.component.ts","webpack:///./web-app/app-js/modules/credential/resolve/credential-resolve.service.ts","webpack:///./web-app/app-js/modules/credential/service/credential.service.ts"],"names":[],"mappings":"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","file":"8.js","sourcesContent":["import {Component, Inject, OnInit} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {process, CompositeFilterDescriptor, State} from '@progress/kendo-data-query';\nimport {CellClickEvent, GridDataResult} from '@progress/kendo-angular-grid';\n\nimport {CredentialService} from '../../service/credential.service';\nimport {UIDialogService} from '../../../../shared/services/ui-dialog.service';\nimport {PermissionService} from '../../../../shared/services/permission.service';\nimport {Permission} from '../../../../shared/model/permission.model';\nimport {UIPromptService} from '../../../../shared/directives/ui-prompt.directive';\nimport {CredentialColumnModel, CredentialModel} from '../../model/credential.model';\nimport {\n\tCOLUMN_MIN_WIDTH,\n\tActionType,\n\tBooleanFilterData,\n\tDefaultBooleanFilterData\n} from '../../../../shared/model/data-list-grid.model';\nimport {CredentialViewEditComponent} from '../view-edit/credential-view-edit.component';\nimport {DIALOG_SIZE} from '../../../../shared/model/constants';\nimport {GRID_DEFAULT_PAGINATION_OPTIONS, GRID_DEFAULT_PAGE_SIZE} from '../../../../shared/model/constants';\nimport {PreferenceService} from '../../../../shared/services/preference.service';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n\tselector: 'credential-list',\n\ttemplateUrl: '../tds/web-app/app-js/modules/credential/components/list/credential-list.component.html',\n\tstyles: [`\n\t\t#btnCreate { margin-left: 16px; }\n\t\t.action-header { width:100%; text-align:center; }\n\t`]\n})\nexport class CredentialListComponent implements OnInit {\n\n\tprivate state: State = {\n\t\tsort: [{\n\t\t\tdir: 'asc',\n\t\t\tfield: 'name'\n\t\t}],\n\t\tfilter: {\n\t\t\tfilters: [],\n\t\t\tlogic: 'and'\n\t\t}\n\t};\n\tpublic skip = 0;\n\tpublic pageSize = GRID_DEFAULT_PAGE_SIZE;\n\tpublic defaultPageOptions = GRID_DEFAULT_PAGINATION_OPTIONS;\n\tpublic credentialColumnModel = null;\n\tpublic COLUMN_MIN_WIDTH = COLUMN_MIN_WIDTH;\n\tpublic actionType = ActionType;\n\tpublic gridData: GridDataResult;\n\tpublic resultSet: CredentialModel[];\n\tpublic selectedRows = [];\n\tpublic booleanFilterData = BooleanFilterData;\n\tpublic defaultBooleanFilterData = DefaultBooleanFilterData;\n\tprivate lastCreatedRecordId = 0;\n\tpublic dateFormat = '';\n\n\tconstructor(\n\t\tprivate route: ActivatedRoute,\n\t\tprivate dialogService: UIDialogService,\n\t\tprivate permissionService: PermissionService,\n\t\tprivate credentialService: CredentialService,\n\t\tprivate prompt: UIPromptService,\n\t\tprivate preferenceService: PreferenceService) {\n\t\tthis.state.take = this.pageSize;\n\t\tthis.state.skip = this.skip;\n\t\tthis.resultSet = this.route.snapshot.data['credentials'];\n\t\tthis.gridData = process(this.resultSet, this.state);\n\t}\n\n\tngOnInit() {\n\t\tthis.preferenceService.getUserDatePreferenceAsKendoFormat()\n\t\t\t.subscribe((dateFormat) => {\n\t\t\t\tthis.dateFormat = dateFormat;\n\t\t\t\tthis.credentialColumnModel = new CredentialColumnModel(`{0:${dateFormat}}`);\n\t\t\t});\n\t}\n\n\tprotected filterChange(filter: CompositeFilterDescriptor): void {\n\t\tthis.state.filter = filter;\n\t\tthis.gridData = process(this.resultSet, this.state);\n\t}\n\n\tprotected sortChange(sort): void {\n\t\tthis.state.sort = sort;\n\t\tthis.gridData = process(this.resultSet, this.state);\n\t}\n\n\tprotected onFilter(column: any): void {\n\t\tconst root = this.credentialService.filterColumn(column, this.state);\n\t\tthis.filterChange(root);\n\t}\n\n\tprotected clearValue(column: any): void {\n\t\tthis.credentialService.clearFilter(column, this.state);\n\t\tthis.filterChange(this.state.filter);\n\t}\n\n\t/**\n\t * Create a new API Action\n\t */\n\tprotected onCreate(): void {\n\t\tlet creationModel = new CredentialModel();\n\t\tthis.openCredentialDialogViewEdit(creationModel, ActionType.CREATE);\n\t}\n\n\t/**\n\t * Select the current element and open the Edit Dialog\n\t * @param {ModalType} type\n\t * @param dataItem\n\t */\n\tprotected onEdit(dataItem: any): void {\n\t\tlet credential: CredentialModel = dataItem;\n\t\tthis.credentialService.getCredential(credential.id).subscribe( (response: CredentialModel) => {\n\t\t\tthis.openCredentialDialogViewEdit(response, ActionType.VIEW, credential);\n\t\t}, err => console.log(err));\n\t}\n\n\t/**\n\t * Delete the selected API Action\n\t * @param dataItem\n\t */\n\tprotected onDelete(dataItem: any): void {\n\t\tthis.prompt.open('Confirmation Required', 'Confirm deletion of ' + dataItem.name + ' credential?', 'Yes', 'No')\n\t\t\t.then((res) => {\n\t\t\t\tif (res) {\n\t\t\t\t\tthis.credentialService.deleteCredential(dataItem.id).subscribe(\n\t\t\t\t\t\t(result) => {\n\t\t\t\t\t\t\tthis.reloadData();\n\t\t\t\t\t\t},\n\t\t\t\t\t\t(err) => console.log(err));\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\t/**\n\t * Catch the Selected Row\n\t * @param {SelectionEvent} event\n\t */\n\tprotected cellClick(event: CellClickEvent): void {\n\t\tif (event.columnIndex > 0) {\n\t\t\tlet credential: CredentialModel = event['dataItem'] as CredentialModel;\n\t\t\tthis.selectRow(credential.id);\n\t\t\tthis.credentialService.getCredential(credential.id).subscribe( (response: CredentialModel) => {\n\t\t\t\tthis.openCredentialDialogViewEdit(response, ActionType.VIEW, credential);\n\t\t\t}, err => console.log(err));\n\t\t}\n\t}\n\n\tprotected reloadData(): void {\n\t\tthis.credentialService.getCredentials().subscribe(\n\t\t\t(result) => {\n\t\t\t\tthis.resultSet = result;\n\t\t\t\tthis.gridData = process(this.resultSet, this.state);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (this.lastCreatedRecordId && this.lastCreatedRecordId !== 0) {\n\t\t\t\t\t\tthis.selectRow(this.lastCreatedRecordId);\n\t\t\t\t\t\tlet lastCredentialModel = this.gridData.data.find((dataItem) => dataItem.id === this.lastCreatedRecordId);\n\t\t\t\t\t\tthis.openCredentialDialogViewEdit(lastCredentialModel, ActionType.VIEW, lastCredentialModel);\n\t\t\t\t\t\tthis.lastCreatedRecordId = 0;\n\t\t\t\t\t}\n\t\t\t\t}, 500);\n\t\t\t},\n\t\t\t(err) => console.log(err));\n\t}\n\n\tprivate reloadItem(originalModel: CredentialModel): void {\n\t\tthis.credentialService.getCredential(originalModel.id).subscribe( (response: CredentialModel) => {\n\t\t\tObject.assign(originalModel, response);\n\t\t}, err => console.log(err));\n\t}\n\n\t/**\n\t * Open The Dialog to Create, View or Edit the Api Action\n\t * @param {CredentialModel} credentialModel\n\t * @param {number} actionType\n\t */\n\tprivate openCredentialDialogViewEdit(credentialModel: CredentialModel, actionType: number, originalModel?: CredentialModel): void {\n\t\tthis.dialogService.open(CredentialViewEditComponent, [\n\t\t\t{ provide: CredentialModel, useValue: credentialModel },\n\t\t\t{ provide: Number, useValue: actionType }\n\t\t], DIALOG_SIZE.XLG, false).then( (result: CredentialModel) => {\n\t\t\tif (result && result.id) {\n\t\t\t\tif (actionType === ActionType.CREATE) {\n\t\t\t\t\tthis.lastCreatedRecordId = result.id;\n\t\t\t\t\tthis.reloadData();\n\t\t\t\t} else {\n\t\t\t\t\tthis.reloadItem(originalModel);\n\t\t\t\t}\n\t\t\t}\n\t\t}).catch(result => {\n\t\t\tthis.reloadData();\n\t\t\tconsole.log('Dismissed Dialog');\n\t\t});\n\t}\n\n\tprivate selectRow(dataItemId: number): void {\n\t\tthis.selectedRows = [];\n\t\tthis.selectedRows.push(dataItemId);\n\t}\n\n\t// Permissions\n\tprotected isCreateAvailable(): boolean {\n\t\treturn this.permissionService.hasPermission(Permission.ActionCreate);\n\t}\n\n\tprotected isEditAvailable(): boolean {\n\t\treturn this.permissionService.hasPermission(Permission.ActionEdit);\n\t}\n\n\tprotected isDeleteAvailable(): boolean {\n\t\treturn this.permissionService.hasPermission(Permission.ActionDelete);\n\t}\n\n\t/**\n\t * Make the entire header clickable on Grid\n\t * @param event: any\n\t */\n\tpublic onClickTemplate(event: any): void {\n\t\tif (event.target && event.target.parentNode) {\n\t\t\tevent.target.parentNode.click();\n\t\t}\n\t}\n\n\tpublic pageChange(event: any): void {\n\t\tthis.skip = event.skip;\n\t\tthis.state.skip = this.skip;\n\t\tthis.state.take = event.take || this.state.take;\n\t\tthis.pageSize = this.state.take;\n\t\tthis.gridData = process(this.resultSet, this.state);\n\t}\n}","import {Component, ViewChild, ViewChildren, HostListener, QueryList, ElementRef} from '@angular/core';\nimport {DropDownListComponent} from '@progress/kendo-angular-dropdowns';\nimport {UIActiveDialogService} from '../../../../shared/services/ui-dialog.service';\nimport {CredentialModel, AUTH_METHODS, REQUEST_MODE} from '../../model/credential.model';\nimport {ProviderModel} from '../../../provider/model/provider.model';\nimport {CredentialService} from '../../service/credential.service';\nimport {UIPromptService} from '../../../../shared/directives/ui-prompt.directive';\nimport {ActionType} from '../../../../shared/model/data-list-grid.model';\nimport {KEYSTROKE} from '../../../../shared/model/constants';\nimport {NgForm} from '@angular/forms';\nimport {ObjectUtils} from '../../../../shared/utils/object.utils';\nimport {CodeMirrorComponent} from '../../../../shared/modules/code-mirror/code-mirror.component';\nimport {CHECK_ACTION, OperationStatusModel} from '../../../../shared/components/check-action/model/check-action.model';\nimport * as R from 'ramda';\nimport {Observable} from 'rxjs';\n\ndeclare var jQuery: any;\n\n@Component({\n\tselector: 'credential-view-edit',\n\ttemplateUrl: '../tds/web-app/app-js/modules/credential/components/view-edit/credential-view-edit.component.html',\n\tstyles: [`\n        .has-error, .has-error:focus {\n            border: 1px #f00 solid;\n        }\n        .invalid-form {\n            color: red;\n            font-weight: bold;\n        }\n        #httpMethod {\n            width: 75px;\n        }\n        .radio-aligned {\n            margin: 4px 4px 0;\n            vertical-align: top;\n        }\n        .label-detail {\n            font-weight: normal;\n            cursor: pointer;\n        }\n        .check-action {\n            margin-left: 12px !important;\n        }\n\t`]\n})\nexport class CredentialViewEditComponent {\n\n\t// Forms\n\t@ViewChild('apiActionForm') apiActionForm: NgForm;\n\t@ViewChild('apiActionReactionForm') apiActionReactionForm: NgForm;\n\n\t@ViewChild('apiActionProvider', { read: DropDownListComponent }) apiActionProvider: DropDownListComponent;\n\t@ViewChild('credentialStatus', { read: DropDownListComponent }) credentialStatus: DropDownListComponent;\n\t@ViewChild('apiActionAgentMethod', { read: DropDownListComponent }) apiActionAgentMethod: DropDownListComponent;\n\t@ViewChild('apiActionCredential', { read: DropDownListComponent }) apiActionCredential: DropDownListComponent;\n\n\t@ViewChildren('codeMirror') public codeMirrorComponents: QueryList<CodeMirrorComponent>;\n\t@ViewChild('credentialsContainer') credentialsContainer: ElementRef;\n\n\tpublic codeMirrorComponent: CodeMirrorComponent;\n\tpublic credentialModel: CredentialModel;\n\tpublic providerList = new Array<ProviderModel>();\n\tpublic statusList = new Array<any>();\n\tpublic authMethodList = new Array<any>();\n\tpublic environmentList = new Array<any>();\n\tpublic httpMethodList = new Array<any>();\n\tpublic modalTitle: string;\n\tpublic actionTypes = ActionType;\n\tpublic requestMode = REQUEST_MODE;\n\tprivate dataSignature: string;\n\tpublic authMethods = AUTH_METHODS;\n\tpublic isEditing = false;\n\tpublic checkActionModel = CHECK_ACTION;\n\tpublic operationStatusModel = new OperationStatusModel();\n\tpublic validExpressionResult = {\n\t\tvalid: true,\n\t\terror: ''\n\t};\n\tconstructor(\n\t\tpublic originalModel: CredentialModel,\n\t\tpublic modalType: ActionType,\n\t\tpublic promptService: UIPromptService,\n\t\tpublic activeDialog: UIActiveDialogService,\n\t\tprivate prompt: UIPromptService,\n\t\tprivate credentialService: CredentialService) {\n\n\t\t// Sub Objects are not being created, just copy\n\t\tthis.credentialModel = R.clone(this.originalModel);\n\n\t\tif (this.modalType === ActionType.CREATE) {\n\t\t\tthis.credentialModel.requestMode = this.requestMode.BASIC_AUTH;\n\t\t}\n\n\t\tthis.dataSignature = JSON.stringify(this.credentialModel);\n\n\t\tthis.getProviders();\n\t\tthis.getAuthMethods();\n\t\tthis.getCredentialEnumsConfig();\n\t\tthis.modalTitle = (this.modalType === ActionType.CREATE) ? 'Create Credential' : (this.modalType === ActionType.EDIT ? 'Credential Edit' : 'Credential Detail');\n\t}\n\n\t/**\n\t * Get the List of Providers\n\t */\n\tprivate getProviders(): void {\n\t\tthis.credentialService.getProviders().subscribe(\n\t\t\t(result: any) => {\n\t\t\t\tif (this.modalType === ActionType.CREATE) {\n\t\t\t\t\tthis.providerList.push({ id: 0, name: 'Select...' });\n\t\t\t\t\tthis.credentialModel.provider = this.providerList[0];\n\t\t\t\t\tthis.modifySignatureByProperty('provider');\n\t\t\t\t}\n\t\t\t\tthis.providerList.push(...result);\n\t\t\t},\n\t\t\t(err) => console.log(err));\n\t}\n\n\t/**\n\t * Get from the Server all Enums and do the Mapping by converting the Enums into Arrays of Native (String) Values\n\t */\n\tprivate getCredentialEnumsConfig(): void {\n\t\tthis.credentialService.getCredentialEnumsConfig().subscribe(\n\t\t\t(result: any) => {\n\t\t\t\tthis.environmentList = Object.keys(result['environment']).map(type => {\n\t\t\t\t\treturn result['environment'][type];\n\t\t\t\t});\n\t\t\t\tthis.statusList = Object.keys(result['status']).map(type => {\n\t\t\t\t\treturn result['status'][type];\n\t\t\t\t});\n\t\t\t\tthis.httpMethodList = Object.keys(result['httpMethod']).map(type => {\n\t\t\t\t\treturn result['httpMethod'][type];\n\t\t\t\t});\n\t\t\t\tthis.authMethodList = Object.keys(result['authenticationMethod']).map(type => {\n\t\t\t\t\treturn result['authenticationMethod'][type];\n\t\t\t\t});\n\t\t\t\tif (this.modalType === ActionType.CREATE) {\n\t\t\t\t\t// Environments List Mapper\n\t\t\t\t\tthis.credentialModel.environment = this.environmentList[0];\n\t\t\t\t\tthis.modifySignatureByProperty('environment');\n\t\t\t\t\t// Status List Mapper\n\t\t\t\t\tthis.credentialModel.status = this.statusList[0];\n\t\t\t\t\tthis.modifySignatureByProperty('status');\n\t\t\t\t\t// HTTP Method List Mapper\n\t\t\t\t\tthis.credentialModel.httpMethod = this.httpMethodList[0];\n\t\t\t\t\tthis.modifySignatureByProperty('httpMethod');\n\t\t\t\t\t// Auth. Method List Mapper\n\t\t\t\t\tthis.credentialModel.authMethod = this.authMethodList[0];\n\t\t\t\t\tthis.modifySignatureByProperty('authenticationMethod');\n\t\t\t\t}\n\t\t\t},\n\t\t\t(err) => console.log(err));\n\t}\n\n\t/**\n\t * Set the possible Status for the Credential\n\t */\n\tprivate getAuthMethods(): void {\n\t\tthis.authMethodList = Object.keys(AUTH_METHODS).map(type => {\n\t\t\treturn AUTH_METHODS[type];\n\t\t});\n\t\tif (this.modalType === ActionType.CREATE) {\n\t\t\tthis.credentialModel.authMethod = this.authMethodList[0];\n\t\t\tthis.modifySignatureByProperty('authMethod');\n\t\t}\n\t}\n\n\t/**\n\t * Execute the flow to create/save/update a credential\n\t */\n\tprotected onSaveCredential(): void {\n\t\t// Cookie and Header requires an extra validation before to save the credential\n\t\tif (this.credentialModel.authMethod === this.authMethods.COOKIE ||\n\t\t\tthis.credentialModel.authMethod === this.authMethods.HEADER ||\n\t\t\tthis.credentialModel.authMethod === this.authMethods.BASIC_AUTH) {\n\t\t\tthis.validateExpressionCheck().subscribe((result) => {\n\t\t\t\tif (result) {\n\t\t\t\t\tthis.validExpressionResult = result;\n\t\t\t\t\tif (this.validExpressionResult.valid) {\n\t\t\t\t\t\tthis.saveCredential();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\t// For other Auth methods rather than Cookie or Header\n\t\t\tthis.saveCredential();\n\t\t}\n\t}\n\n\t/**\n\t * Createm Save or Update the Credential forom the model\n\t */\n\tprivate saveCredential(): void {\n\t\tthis.credentialService.saveCredential(this.credentialModel).subscribe(\n\t\t\t(result: any) => {\n\t\t\t\tif (result && result.id) {\n\t\t\t\t\tthis.activeDialog.close(result);\n\t\t\t\t}\n\t\t\t},\n\t\t\t(err) => console.log(err));\n\t}\n\n\t/**\n\t * Verify the Object has not changed\n\t * @returns {boolean}\n\t */\n\tprotected isDirty(): boolean {\n\t\treturn this.dataSignature !== JSON.stringify(this.credentialModel);\n\t}\n\n\t/**\n\t * Close the Dialog but first it verify is not Dirty\n\t */\n\tprotected cancelCloseDialog(): void {\n\t\tif (this.isDirty()) {\n\t\t\tthis.promptService.open(\n\t\t\t\t'Confirmation Required',\n\t\t\t\t'You have changes that have not been saved. Do you want to continue and lose those changes?',\n\t\t\t\t'Confirm', 'Cancel')\n\t\t\t\t.then(confirm => {\n\t\t\t\t\tif (confirm) {\n\t\t\t\t\t\tthis.activeDialog.close(null);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.focusForm();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((error) => console.log(error));\n\t\t} else {\n\t\t\tthis.activeDialog.close(null);\n\t\t}\n\t}\n\n\t/**\n\t * Detect if the use has pressed the on Escape to close the dialog and popup if there are pending changes.\n\t * @param {KeyboardEvent} event\n\t */\n\t@HostListener('keydown', ['$event']) handleKeyboardEvent(event: KeyboardEvent) {\n\t\tif (event && event.code === KEYSTROKE.ESCAPE) {\n\t\t\tthis.cancelCloseDialog();\n\t\t}\n\t}\n\n\t/**\n\t * Change the View Mode to Edit Mode\n\t */\n\tprotected changeToEditCredential(): void {\n\t\tthis.modalType = this.actionTypes.EDIT;\n\t\tthis.focusForm();\n\t}\n\n\t/**\n\t * Delete the selected Data Script\n\t * @param dataItem\n\t */\n\tprotected onDeleteCredential(): void {\n\t\tthis.prompt.open('Confirmation Required', 'Do you want to proceed?', 'Yes', 'No')\n\t\t\t.then((res) => {\n\t\t\t\tif (res) {\n\t\t\t\t\tthis.credentialService.deleteCredential(this.credentialModel.id).subscribe(\n\t\t\t\t\t\t(result) => {\n\t\t\t\t\t\t\tthis.activeDialog.dismiss(result);\n\t\t\t\t\t\t},\n\t\t\t\t\t\t(err) => console.log(err));\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprotected verifyCode(operationStatusModel: OperationStatusModel): void {\n\t\tthis.credentialService.validateAuthentication(this.credentialModel.id).subscribe(\n\t\t\t(result: any) => {\n\t\t\t\tif (!result) {\n\t\t\t\t\toperationStatusModel.state = this.checkActionModel.INVALID;\n\t\t\t\t} else {\n\t\t\t\t\toperationStatusModel.state = this.checkActionModel.VALID;\n\t\t\t\t}\n\t\t\t},\n\t\t\t(err) => console.log(err));\n\t}\n\n\t/**\n\t * Listener that wait a subscribe, so it can be attached as a callback-promise to the save of the credential.\n\t */\n\tprotected onValidateExpression(): void {\n\t\tthis.validateExpressionCheck().subscribe();\n\t}\n\n\t/**\n\t * Verify against the endpoint if the expression is valid.\n\t * @returns {Observable<any>}\n\t */\n\tprivate validateExpressionCheck(): Observable<any> {\n\t\treturn new Observable(observer => {\n\t\t\tthis.credentialService.validateExpressionCheck(this.credentialModel.validationExpression).subscribe(\n\t\t\t\t(result: any) => {\n\t\t\t\t\tthis.validExpressionResult = result;\n\t\t\t\t\tobserver.next(result);\n\t\t\t\t},\n\t\t\t\t(err) => console.log(err));\n\t\t});\n\t}\n\n\t/**\n\t * Keep Data Signature Clean even when there are so many values incoming\n\t * @param property\n\t * @param value\n\t */\n\tprivate modifySignatureByProperty(property: any): void {\n\t\tthis.dataSignature = ObjectUtils.modifySignatureByProperty(this.dataSignature, property, this.credentialModel[property]);\n\t}\n\n\tprivate focusForm() {\n\t\tthis.credentialsContainer.nativeElement.focus();\n\t}\n\n\tprotected isCheckSyntaxDisabled(): boolean {\n\t\treturn this.operationStatusModel.state === CHECK_ACTION.VALID;\n\t}\n}","// Angular\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n// Resolves\nimport {ModuleResolveService} from '../../shared/resolves/module.resolve.service';\nimport {CredentialResolveService} from './resolve/credential-resolve.service';\n// Services\nimport {AuthGuardService} from '../security/services/auth.guard.service';\n// Components\nimport {CredentialListComponent} from './components/list/credential-list.component';\n\nexport class CredentialStates {\n\tpublic static readonly CREDENTIAL_LIST = {\n\t\turl: 'list'\n\t};\n}\n\nexport const CredentialRoute: Routes = [\n\t{path: '', pathMatch: 'full', redirectTo: CredentialStates.CREDENTIAL_LIST.url},\n\t{\n\t\tpath: CredentialStates.CREDENTIAL_LIST.url,\n\t\tdata: {\n\t\t\tpage: {\n\t\t\t\ttitle: 'CREDENTIAL.CREDENTIALS',\n\t\t\t\tinstruction: '',\n\t\t\t\tmenu: ['GLOBAL.PROJECT', 'CREDENTIAL.CREDENTIALS']\n\t\t\t},\n\t\t\trequiresAuth: true,\n\t\t},\n\t\tcomponent: CredentialListComponent,\n\t\tresolve: {\n\t\t\tcredentials: CredentialResolveService\n\t\t},\n\t\tcanActivate: [AuthGuardService, ModuleResolveService]\n\t}\n];\n\n@NgModule({\n\texports: [RouterModule],\n\timports: [RouterModule.forChild(CredentialRoute)]\n})\n\nexport class CredentialRouteModule {\n}","// Angular\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n// Shared\nimport {SharedModule} from '../../shared/shared.module';\n// Route Module\nimport {CredentialRouteModule} from './credential-routing.states';\n// Kendo\nimport {DropDownsModule} from '@progress/kendo-angular-dropdowns';\nimport {GridModule} from '@progress/kendo-angular-grid';\nimport {PopupModule} from '@progress/kendo-angular-popup';\nimport {InputsModule} from '@progress/kendo-angular-inputs';\nimport {DateInputsModule} from '@progress/kendo-angular-dateinputs';\n// Components\nimport {CredentialListComponent} from './components/list/credential-list.component';\nimport {CredentialViewEditComponent} from './components/view-edit/credential-view-edit.component';\nimport {PopupValidateExpressionComponent} from './popups/popup-validate-expression.component';\nimport {PopupSessionAuthenticationNameComponent} from './popups/popup-session-authentication-name.component';\n// Resolves\nimport {ModuleResolveService} from '../../shared/resolves/module.resolve.service';\nimport {CredentialResolveService} from './resolve/credential-resolve.service';\n// Services\nimport {CredentialService} from './service/credential.service';\n\n@NgModule({\n\timports: [\n\t\t// Angular\n\t\tCommonModule,\n\t\tSharedModule,\n\t\tFormsModule,\n\t\t// Kendo\n\t\tDropDownsModule,\n\t\tGridModule,\n\t\tPopupModule,\n\t\tInputsModule,\n\t\tDateInputsModule,\n\t\t// Route\n\t\tCredentialRouteModule\n\t],\n\tdeclarations: [\n\t\tCredentialListComponent,\n\t\tCredentialViewEditComponent,\n\t\tPopupValidateExpressionComponent,\n\t\tPopupSessionAuthenticationNameComponent\n\t],\n\tproviders: [\n\t\t// Resolve\n\t\tModuleResolveService,\n\t\tCredentialResolveService,\n\t\t// Service\n\t\tCredentialService\n\t],\n\texports: [\n\t\tCredentialListComponent,\n\t\tCredentialViewEditComponent,\n\t],\n\tentryComponents: [\n\t\tCredentialViewEditComponent\n\t]\n})\n\nexport class CredentialModule {\n}","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'popup-session-authentication-name',\n\ttemplateUrl: '../tds/web-app/app-js/modules/credential/popups/popup-session-authentication-name.component.html',\n\tstyles: [`\n\t\tdiv { width: 390px; padding: 10px; }\n    `]\n})\n\nexport class PopupSessionAuthenticationNameComponent {\n\tprivate show = false;\n\n\tpublic onToggle(): void {\n\t\tthis.show = !this.show;\n\t}\n}","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'popup-validate-expression',\n\ttemplateUrl: '../tds/web-app/app-js/modules/credential/popups/popup-validate-expression.component.html',\n\tstyles: [`\n\t\tdiv { width: 320px; padding: 10px; }\n    `]\n})\n\nexport class PopupValidateExpressionComponent {\n\tprivate show = false;\n\n\tpublic onToggle(): void {\n\t\tthis.show = !this.show;\n\t}\n}","// Angular\nimport {Injectable} from '@angular/core';\nimport {Router, Resolve, ActivatedRouteSnapshot} from '@angular/router';\n// Services\nimport {CredentialService} from '../service/credential.service';\n// Others\nimport {Observable} from 'rxjs';\n\n@Injectable()\nexport class CredentialResolveService implements Resolve<any> {\n\tconstructor(private credentialService: CredentialService, private router: Router) {\n\t}\n\n\t/**\n\t * Get the List of Credentials\n\t * @param route\n\t */\n\tresolve(route: ActivatedRouteSnapshot): Observable<any> | boolean {\n\t\treturn this.credentialService.getCredentials().map(credentials => {\n\t\t\treturn credentials;\n\t\t}).catch((err) => {\n\t\t\tconsole.error('CredentialResolveService:', 'An Error Occurred trying to fetch the Credential List');\n\t\t\tthis.router.navigate(['/security/error']);\n\t\t\treturn Observable.of(false);\n\t\t});\n\t}\n}","import {CredentialModel} from '../model/credential.model';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Headers, RequestOptions, Response} from '@angular/http';\nimport {HttpInterceptor} from '../../../shared/providers/http-interceptor.provider';\nimport {PreferenceService} from '../../../shared/services/preference.service';\nimport {ProviderModel} from '../../provider/model/provider.model';\nimport {APIActionModel} from '../../apiAction/model/api-action.model';\nimport {AUTH_METHODS, ENVIRONMENT, CREDENTIAL_STATUS, REQUEST_MODE} from '../model/credential.model';\nimport {INTERVAL} from '../../../shared/model/constants';\nimport {DateUtils} from '../../../shared/utils/date.utils';\nimport {HttpResponse} from '@angular/common/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport {Flatten, DefaultBooleanFilterData} from '../../../shared/model/data-list-grid.model';\n\n@Injectable()\nexport class CredentialService {\n\n\tprivate readonly dataIngestionUrl = '../ws/dataingestion';\n\tprivate dataScriptUrl = '../ws/dataScript';\n\tprivate credentialUrl = '../ws/credential';\n\tprivate fileSystemUrl = '../ws/fileSystem';\n\n\tconstructor(private http: HttpInterceptor, private preferenceService: PreferenceService) {\n\t}\n\n\tgetProviders(): Observable<ProviderModel[]> {\n\t\treturn this.http.get(`${this.dataIngestionUrl}/provider/list`)\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet result = res.json();\n\t\t\t\tlet providerModels = result && result.status === 'success' && result.data;\n\t\t\t\tproviderModels.forEach((r) => {\n\t\t\t\t\tr.dateCreated = ((r.dateCreated) ? new Date(r.dateCreated) : '');\n\t\t\t\t\tr.lastUpdated = ((r.lastUpdated) ? new Date(r.lastUpdated) : '');\n\t\t\t\t});\n\t\t\t\treturn providerModels;\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tprivate transformApiActionModel(model: any): void {\n\t\tmodel.agentMethod = {id: model.agentMethod};\n\t\tmodel.dateCreated = ((model.dateCreated) ? new Date(model.dateCreated) : '');\n\t\tmodel.lastUpdated = ((model.lastUpdated) ? new Date(model.lastUpdated) : '');\n\t\tmodel.producesData = (model.producesData === 1);\n\t\tmodel.polling = {\n\t\t\tfrequency: {\n\t\t\t\tvalue: model.pollingInterval,\n\t\t\t\tinterval: INTERVAL.SECONDS\n\t\t\t},\n\t\t\tlapsedAfter: {\n\t\t\t\tvalue: DateUtils.convertInterval({ value: model.pollingLapsedAfter, interval: INTERVAL.SECONDS }, INTERVAL.MINUTES),\n\t\t\t\tinterval: INTERVAL.MINUTES\n\t\t\t},\n\t\t\tstalledAfter: {\n\t\t\t\tvalue: DateUtils.convertInterval({ value: model.pollingStalledAfter, interval: INTERVAL.SECONDS }, INTERVAL.MINUTES),\n\t\t\t\tinterval: INTERVAL.MINUTES\n\t\t\t}\n\t\t};\n\t\tmodel.defaultDataScript = (model.defaultDataScript) ? model.defaultDataScript : {id: 0, name: ''};\n\t\tif (model.reactionScripts && model.reactionScripts !== null && model.reactionScripts !== 'null') {\n\t\t\tAPIActionModel.createReactions(model, model.reactionScripts);\n\t\t} else {\n\t\t\tAPIActionModel.createBasicReactions(model);\n\t\t}\n\t}\n\n\tgetCredentials(): Observable<CredentialModel[]> {\n\t\treturn this.http.get(`${this.credentialUrl}`)\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet result = res.json();\n\t\t\t\tlet credentialModels = result && result.status === 'success' && result.data;\n\n\t\t\t\tcredentialModels.forEach((model) => {\n\t\t\t\t\t// r.dateCreated = ((r.dateCreated) ? new Date(r.dateCreated) : '');\n\t\t\t\t\t// r.environment = ENVIRONMENT[r.environment];\n\t\t\t\t\t// r.authMethod = AUTH_METHODS[r.authenticationMethod];\n\t\t\t\t\t// r.status = CREDENTIAL_STATUS[r.status];\n\t\t\t\t\tthis.processCredentialModel(model);\n\t\t\t\t});\n\t\t\t\treturn credentialModels;\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\t/**\n\t * GET Credential by id.\n\t * @returns {Observable<CredentialModel[]>}\n\t */\n\tgetCredential(id: number): Observable<CredentialModel> {\n\t\treturn this.http.get(`${this.credentialUrl}/${id}`)\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet result = res.json();\n\t\t\t\tlet model = result && result.status === 'success' && result.data;\n\t\t\t\tthis.processCredentialModel(model);\n\t\t\t\treturn model;\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tprivate processCredentialModel(model): void {\n\t\tmodel.dateCreated = ((model.dateCreated) ? new Date(model.dateCreated) : '');\n\t\tmodel.environment = ENVIRONMENT[model.environment];\n\t\tmodel.authMethod = AUTH_METHODS[model.authenticationMethod];\n\t\tmodel.status = CREDENTIAL_STATUS[model.status];\n\t}\n\n\t/**\n\t * Get the List of Elements we need to populate in the UI - dropdownlist\n\t * @returns {Observable<any>}\n\t */\n\tgetCredentialEnumsConfig(): Observable<any> {\n\t\treturn this.http.get(`${this.credentialUrl}/enums`)\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet result = res.json();\n\t\t\t\treturn result && result.status === 'success' && result.data;\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tsaveCredential(model: CredentialModel): Observable<CredentialModel> {\n\n\t\tlet postRequest: any = {\n\t\t\tname: model.name,\n\t\t\tdescription: model.description,\n\t\t\tenvironment: Object.keys(ENVIRONMENT).find((type) => ENVIRONMENT[type] === model.environment),\n\t\t\tprovider: {id: model.provider.id},\n\t\t\tstatus: model.status.toUpperCase(),\n\t\t\tauthenticationMethod: Object.keys(AUTH_METHODS).find((type) => AUTH_METHODS[type] === model.authMethod),\n\t\t\tusername: model.username,\n\t\t\tauthenticationUrl: (model.authenticationUrl) ? model.authenticationUrl : '',\n\t\t\tterminateUrl: (model.terminateUrl) ? model.terminateUrl : '',\n\t\t\trenewTokenUrl: (model.renewTokenUrl) ? model.renewTokenUrl : '',\n\t\t\trequestMode: (model.requestMode === REQUEST_MODE.BASIC_AUTH) ? 'BASIC_AUTH' : 'FORM_VARS',\n\t\t\thttpMethod: model.httpMethod.toUpperCase()\n\t\t};\n\n\t\t// Properties only required on this methods.\n\t\tif (model.authMethod === AUTH_METHODS.COOKIE || model.authMethod === AUTH_METHODS.HEADER || model.authMethod === AUTH_METHODS.BASIC_AUTH) {\n\t\t\tif (model.authMethod === AUTH_METHODS.COOKIE || model.authMethod === AUTH_METHODS.HEADER ) {\n\t\t\t\tpostRequest.sessionName = (model.sessionName) ? model.sessionName  : '';\n\t\t\t}\n\t\t\tpostRequest.validationExpression = (model.validationExpression) ? model.validationExpression  : '';\n\t\t}\n\n\t\t// The UI validates if the Password exists however, on edition is not required unless you want to change it\n\t\tif (model.password && model.password.length > 0 && model.password !== '') {\n\t\t\tpostRequest.password = model.password;\n\t\t}\n\n\t\tif (!model.id) {\n\t\t\treturn this.http.post(`${this.credentialUrl}`, JSON.stringify(postRequest))\n\t\t\t\t.map((res: Response) => {\n\t\t\t\t\tlet result = res.json();\n\t\t\t\t\tlet dataItem = (result && result.status === 'success' && result.data);\n\t\t\t\t\treturn dataItem;\n\t\t\t\t})\n\t\t\t\t.catch((error: any) => error.json());\n\t\t} else {\n\t\t\tpostRequest.version = model.version;\n\t\t\treturn this.http.put(`${this.credentialUrl}/${model.id}`, JSON.stringify(postRequest))\n\t\t\t\t.map((res: Response) => {\n\t\t\t\t\tlet result = res.json();\n\t\t\t\t\treturn result && result.status === 'success' && result.data;\n\t\t\t\t})\n\t\t\t\t.catch((error: any) => error.json());\n\t\t}\n\t}\n\n\t/**\n\t * Validate if the Authentication meets the requirements\n\t * @param {number} credentialId\n\t * @returns {Observable<any>}\n\t */\n\tvalidateAuthentication(credentialId: number): Observable<any> {\n\t\treturn this.http.post(`${this.credentialUrl}/test/${credentialId}`, null)\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet result = res.json();\n\t\t\t\treturn result && result.status === 'success' && result.data;\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\t/**\n\t * Validate if the expression executed is correct\n\t * @param {string} validateExpression\n\t * @returns {Observable<any>}\n\t */\n\tvalidateExpressionCheck(validateExpression: string): Observable<any> {\n\t\tlet postRequest = {\n\t\t\texpression: validateExpression\n\t\t};\n\t\treturn this.http.post(`${this.credentialUrl}/checkValidExprSyntax`, JSON.stringify(postRequest))\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet result = res.json();\n\t\t\t\tlet errorResult = result && result.status === 'success' && result.data;\n\t\t\t\tlet errors = '';\n\t\t\t\tif (errorResult['errors']) {\n\t\t\t\t\terrorResult['errors'].forEach((error: string) => {\n\t\t\t\t\t\terrors += error + '\\n';\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tvalid: errorResult.valid,\n\t\t\t\t\terror: errors\n\t\t\t\t};\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tdeleteCredential(id: number): Observable<string> {\n\t\treturn this.http.delete(`${this.credentialUrl}/${id}`)\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet result = res.json();\n\t\t\t\treturn result && result.status === 'success' && result.data;\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tcheckSyntax(script: string, filename: string): Observable<any> {\n\t\tlet postRequest = {\n\t\t\tscript: script,\n\t\t\tfilename: filename\n\t\t};\n\t\treturn this.http.post(`${this.dataScriptUrl}/checkSyntax`, JSON.stringify(postRequest))\n\t\t\t.map((res: Response) => {\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tuploadFile(formdata: any): Observable<any | HttpResponse<any>> {\n\t\tconst headers = new Headers({});\n\t\tconst options = new RequestOptions({ headers: headers });\n\t\treturn this.http.post(`${this.fileSystemUrl}/uploadFile`, formdata, options)\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet response = res.json().data;\n\t\t\t\treturn new HttpResponse({status: 200, body: { data : response } });\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tdeleteFile(filename: string): Observable<any | HttpResponse<any>> {\n\t\tlet body = JSON.stringify({filename: filename} );\n\t\tlet headers = new Headers({ 'Content-Type': 'application/json' });\n\t\tlet options = new RequestOptions({\n\t\t\theaders: headers,\n\t\t\tbody : body\n\t\t});\n\t\treturn this.http.delete(`${this.fileSystemUrl}/delete`, options)\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet response = res.json();\n\t\t\t\tresponse.operation = 'delete';\n\t\t\t\treturn new HttpResponse({status: 200, body: { data : response } });\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\tprivate getUserPreference(preferenceName: string): Observable<any> {\n\t\treturn this.preferenceService.getPreference(preferenceName);\n\t}\n\n\t/**\n\t * Based on provided column, update the structure which holds the current selected filters\n\t * @param {any} column: Column to filter\n\t * @param {any} state: Current filters state\n\t * @returns {any} Filter structure updated\n\t */\n\tfilterColumn(column: any, state: any): any {\n\t\tlet root = state.filter || { logic: 'and', filters: [] };\n\n\t\tlet [filter] = Flatten(root).filter(item => item.field === column.property);\n\n\t\tif (!column.filter) {\n\t\t\tcolumn.filter = '';\n\t\t}\n\n\t\tif (column.type === 'text') {\n\t\t\tif (!filter) {\n\t\t\t\troot.filters.push({\n\t\t\t\t\tfield: column.property,\n\t\t\t\t\toperator: 'contains',\n\t\t\t\t\tvalue: column.filter,\n\t\t\t\t\tignoreCase: true\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tfilter = root.filters.find((r) => {\n\t\t\t\t\treturn r['field'] === column.property;\n\t\t\t\t});\n\t\t\t\tfilter.value = column.filter;\n\t\t\t}\n\t\t}\n\n\t\tif (column.type === 'date') {\n\t\t\tconst {init, end} = DateUtils.getInitEndFromDate(column.filter);\n\n\t\t\tif (filter) {\n\t\t\t\tstate.filter.filters = this.getFiltersExcluding(column.property, state);\n\t\t\t}\n\t\t\troot.filters.push({ field: column.property, operator: 'gte', value: init, });\n\t\t\troot.filters.push({ field: column.property, operator: 'lte', value: end });\n\t\t}\n\n\t\tif (column.type === 'boolean') {\n\t\t\tif (!filter) {\n\t\t\t\troot.filters.push({\n\t\t\t\t\tfield: column.property,\n\t\t\t\t\toperator: 'eq',\n\t\t\t\t\tvalue: (column.filter === 'True')\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (column.filter === DefaultBooleanFilterData) {\n\t\t\t\t\tthis.clearFilter(column, state);\n\t\t\t\t} else {\n\t\t\t\t\tfilter = root.filters.find((r) => {\n\t\t\t\t\t\treturn r['field'] === column.property;\n\t\t\t\t\t});\n\t\t\t\t\tfilter.value = (column.filter === 'True');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn root;\n\t}\n\n\t/**\n\t * Update the filters state structure removing the column filter provided\n\t * @param {any} column: Column to exclude from filters\n\t * @param {any} state: Current filters state\n\t * @returns void\n\t */\n\tclearFilter(column: any, state: any): void {\n\t\tcolumn.filter = '';\n\t\tstate.filter.filters = this.getFiltersExcluding(column.property, state);\n\t}\n\n\t/**\n\t * Get the filters state structure excluding the column filter name provided\n\t * @param {string} excludeFilterName:  Name of the filter column to exclude\n\t * @param {any} state: Current filters state\n\t * @returns void\n\t */\n\tgetFiltersExcluding(excludeFilterName: string, state: any): any {\n\t\tconst filters = (state.filter && state.filter.filters) || [];\n\t\treturn  filters.filter((r) => r['field'] !== excludeFilterName);\n\t}\n\n}"],"sourceRoot":""}