{"version":3,"sources":["webpack:///./web-app/app-js/modules/fieldSettings/components/grid/field-settings-grid.component.ts","webpack:///./web-app/app-js/modules/fieldSettings/components/imp/field-settings-imp.component.ts","webpack:///./web-app/app-js/modules/fieldSettings/components/list/field-settings-list.component.ts","webpack:///./web-app/app-js/modules/fieldSettings/components/min-max/min-max-configuration-popup.component.ts","webpack:///./web-app/app-js/modules/fieldSettings/components/number/number-configuration-popup.component.ts","webpack:///./web-app/app-js/modules/fieldSettings/components/select-list/selectlist-configuration-popup.component.ts","webpack:///./web-app/app-js/modules/fieldSettings/field-settings.module.ts","webpack:///./web-app/app-js/modules/fieldSettings/field-settings.states.ts","webpack:///./web-app/app-js/modules/fieldSettings/model/domain.model.ts","webpack:///./web-app/app-js/modules/fieldSettings/model/field-settings.model.ts","webpack:///./web-app/app-js/modules/fieldSettings/resolve/fields-resolve.service.ts","webpack:///./web-app/app-js/modules/fieldSettings/service/field-settings.service.ts"],"names":[],"mappings":"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","file":"5.js","sourcesContent":["import {Component, Input, Output, EventEmitter, OnInit, ViewEncapsulation, ViewChild, ElementRef} from '@angular/core';\nimport {CUSTOM_FIELD_CONTROL_TYPE, FieldSettingsModel} from '../../model/field-settings.model';\nimport { DomainModel } from '../../model/domain.model';\n\nimport { UILoaderService } from '../../../../shared/services/ui-loader.service';\nimport { UIPromptService } from '../../../../shared/directives/ui-prompt.directive';\nimport { GridDataResult, DataStateChangeEvent } from '@progress/kendo-angular-grid';\nimport { process, State } from '@progress/kendo-data-query';\n\nimport { MinMaxConfigurationPopupComponent } from '../min-max/min-max-configuration-popup.component';\nimport { SelectListConfigurationPopupComponent } from '../select-list/selectlist-configuration-popup.component';\nimport {UIDialogService} from '../../../../shared/services/ui-dialog.service';\nimport {FIELD_COLORS} from '../../model/field-settings.model';\nimport {NumberConfigurationPopupComponent} from '../number/number-configuration-popup.component';\nimport {NumberControlHelper} from '../../../../shared/components/custom-control/number/number-control.helper';\nimport {NumberConfigurationConstraintsModel} from '../number/number-configuration-constraints.model';\n\ndeclare var jQuery: any;\n\n@Component({\n\tselector: 'field-settings-grid',\n\tencapsulation: ViewEncapsulation.None,\n\texportAs: 'fieldSettingsGrid',\n\ttemplateUrl: '../tds/web-app/app-js/modules/fieldSettings/components/grid/field-settings-grid.component.html',\n\tstyles: [`\n\t\t.k-grid { height:calc(100vh - 225px); }\n\t\ttr .text-center { text-align: center; }\n\t\t.has-error,.has-error:focus { border: 1px #f00 solid;}\n\t`]\n})\nexport class FieldSettingsGridComponent implements OnInit {\n\t@Output('save') saveEmitter = new EventEmitter<any>();\n\t@Output('cancel') cancelEmitter = new EventEmitter<any>();\n\t@Output('add') addEmitter = new EventEmitter<any>();\n\t@Output('share') shareEmitter = new EventEmitter<any>();\n\t@Output('delete') deleteEmitter = new EventEmitter<any>();\n\t@Output('filter') filterEmitter = new EventEmitter<any>();\n\n\t@Input('data') data: DomainModel;\n\t@Input('state') gridState: any;\n\t@ViewChild('minMax') minMax: MinMaxConfigurationPopupComponent;\n\t@ViewChild('selectList') selectList: SelectListConfigurationPopupComponent;\n\tprivate fieldsSettings: FieldSettingsModel[];\n\tprivate gridData: GridDataResult;\n\tpublic colors = FIELD_COLORS;\n\tprivate state: State = {\n\t\tsort: [{\n\t\t\tdir: 'asc',\n\t\t\tfield: 'order'\n\t\t}],\n\t\tfilter: {\n\t\t\tfilters: [{\n\t\t\t\tfield: 'field',\n\t\t\t\toperator: 'contains',\n\t\t\t\tvalue: ''\n\t\t\t}],\n\t\t\tlogic: 'or'\n\t\t}\n\t};\n\n\tprivate isEditing = false;\n\tprivate isFilterDisabled = false;\n\tprivate sortable: boolean | object = { mode: 'single' };\n\tprivate fieldsToDelete = [];\n\n\tprivate readonly availableControls = [\n\t\t{ text: CUSTOM_FIELD_CONTROL_TYPE.List, value: CUSTOM_FIELD_CONTROL_TYPE.List},\n\t\t{ text: CUSTOM_FIELD_CONTROL_TYPE.String, value: CUSTOM_FIELD_CONTROL_TYPE.String},\n\t\t{ text: CUSTOM_FIELD_CONTROL_TYPE.YesNo, value: CUSTOM_FIELD_CONTROL_TYPE.YesNo},\n\t\t{ text: CUSTOM_FIELD_CONTROL_TYPE.Date, value: CUSTOM_FIELD_CONTROL_TYPE.Date},\n\t\t{ text: CUSTOM_FIELD_CONTROL_TYPE.DateTime, value: CUSTOM_FIELD_CONTROL_TYPE.DateTime},\n\t\t{ text: CUSTOM_FIELD_CONTROL_TYPE.Number, value: CUSTOM_FIELD_CONTROL_TYPE.Number}\n\t];\n\tprivate availableFieldTypes = ['All', 'Custom Fields', 'Standard Fields'];\n\n\tconstructor(\n\t\tprivate loaderService: UILoaderService,\n\t\tprivate prompt: UIPromptService,\n\t\tprivate dialogService: UIDialogService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.fieldsSettings = this.data.fields;\n\t\tthis.refresh();\n\t}\n\n\tprotected dataStateChange(state: DataStateChangeEvent): void {\n\t\tthis.state = state;\n\t\tthis.refresh();\n\t}\n\n\tprotected onFilter(): void {\n\t\tthis.filterEmitter.emit(null);\n\t}\n\n\tpublic applyFilter(): void {\n\t\tthis.state.filter.filters = [];\n\n\t\tthis.fieldsSettings = this.data.fields;\n\t\tif (this.gridState.filter.search !== '') {\n\t\t\tlet search = new RegExp(this.gridState.filter.search, 'i');\n\t\t\tthis.fieldsSettings = this.data.fields.filter(\n\t\t\t\titem => search.test(item.field) ||\n\t\t\t\t\tsearch.test(item.label) ||\n\t\t\t\t\titem['isNew']);\n\t\t}\n\t\tif (this.gridState.filter.fieldType !== 'All') {\n\t\t\tthis.state.filter.filters.push({\n\t\t\t\tfield: 'udf',\n\t\t\t\toperator: 'eq',\n\t\t\t\tvalue: this.gridState.filter.fieldType === 'Custom Fields' ? 1 : 0\n\t\t\t});\n\t\t\tthis.state.filter.filters.push({\n\t\t\t\tfield: 'isNew',\n\t\t\t\toperator: 'eq',\n\t\t\t\tvalue: true\n\t\t\t});\n\t\t}\n\t\tthis.refresh();\n\t}\n\n\tprotected onEdit(): void {\n\t\tthis.loaderService.show();\n\t\tsetTimeout(() => {\n\t\t\tthis.isEditing = true;\n\t\t\tthis.sortable = { mode: 'single' };\n\t\t\tthis.isFilterDisabled = false;\n\t\t\tthis.onFilter();\n\t\t\tthis.loaderService.hide();\n\t\t});\n\t}\n\n\tprotected onSaveAll(): void {\n\t\tthis.saveEmitter.emit(() => {\n\t\t\tthis.reset();\n\t\t});\n\n\t}\n\n\tprotected onCancel(): void {\n\t\tthis.cancelEmitter.emit(() => {\n\t\t\tthis.reset();\n\t\t\tthis.refresh();\n\t\t});\n\t}\n\n\t/**\n\t * Delete button action, adds field to the pending to delete queue.\n\t * @param {FieldSettingsModel} dataItem\n\t */\n\tprotected onDelete(dataItem: FieldSettingsModel): void {\n\t\tthis.fieldsToDelete.push(dataItem.field);\n\t\tthis.deleteEmitter.emit({\n\t\t\tdomain: this.data.domain,\n\t\t\tfieldsToDelete: this.fieldsToDelete\n\t\t});\n\t}\n\n\t/**\n\t * Undo Delete button action, removes field from pending to delete queue.\n\t * @param {FieldSettingsModel} dataItem\n\t */\n\tprotected undoDelete(dataItem: FieldSettingsModel): void {\n\t\tlet index = this.fieldsToDelete.indexOf(dataItem.field, 0);\n\t\tthis.fieldsToDelete.splice(index, 1);\n\t\tthis.deleteEmitter.emit({\n\t\t\tdomain: this.data.domain,\n\t\t\tfieldsToDelete: this.fieldsToDelete\n\t\t});\n\t}\n\n\t/**\n\t * Check if a given field is on the pending to deleted queue.\n\t * @param {FieldSettingsModel} dataItem\n\t * @returns {boolean}\n\t */\n\tprotected toBeDeleted(dataItem: FieldSettingsModel): boolean {\n\t\tlet found = this.fieldsToDelete.filter(item => item === dataItem.field);\n\t\treturn found.length > 0;\n\t}\n\n\tprotected onAddCustom(): void {\n\t\tthis.addEmitter.emit((custom) => {\n\t\t\tthis.state.sort = [\n\t\t\t\t{\n\t\t\t\t\tdir: 'desc',\n\t\t\t\t\tfield: 'isNew'\n\t\t\t\t}, {\n\t\t\t\t\tdir: 'desc',\n\t\t\t\t\tfield: 'count'\n\t\t\t\t}\n\t\t\t];\n\t\t\tlet model = new FieldSettingsModel();\n\t\t\tmodel.field = custom;\n\t\t\tmodel.constraints = {\n\t\t\t\trequired: false\n\t\t\t};\n\t\t\tmodel.label = '';\n\t\t\tmodel['isNew'] = true;\n\t\t\tmodel['count'] = this.data.fields.length;\n\t\t\tmodel.control = CUSTOM_FIELD_CONTROL_TYPE.String;\n\t\t\tmodel.show = true;\n\t\t\tlet availableOrder = this.fieldsSettings.map(f => f.order).sort((a, b) => a - b);\n\t\t\tmodel.order = availableOrder[availableOrder.length - 1] + 1;\n\t\t\tthis.data.fields.push(model);\n\t\t\tthis.onFilter();\n\n\t\t\tsetTimeout(function () {\n\t\t\t\tjQuery('#' + model.field).focus();\n\t\t\t});\n\t\t});\n\t}\n\n\tprotected onShare(field: FieldSettingsModel) {\n\t\tthis.shareEmitter.emit({\n\t\t\tfield: field,\n\t\t\tdomain: this.data.domain\n\t\t});\n\t}\n\n\tprotected onRequired(field: FieldSettingsModel) {\n\t\tif (field.constraints.values &&\n\t\t\t(field.control === CUSTOM_FIELD_CONTROL_TYPE.List || field.control === CUSTOM_FIELD_CONTROL_TYPE.YesNo)) {\n\t\t\tif (field.constraints.required) {\n\t\t\t\tfield.constraints.values.splice(field.constraints.values.indexOf(''), 1);\n\t\t\t} else if (field.constraints.values.indexOf('') === -1) {\n\t\t\t\tfield.constraints.values.splice(0, 0, '');\n\t\t\t}\n\t\t\tif (field.constraints.values.indexOf(field.default) === -1) {\n\t\t\t\tfield.default = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected onClearTextFilter(): void {\n\t\tthis.gridState.filter.search = '';\n\t\tthis.onFilter();\n\t}\n\n\tprotected reset(): void {\n\t\tthis.isEditing = false;\n\t\tthis.sortable = { mode: 'single' };\n\t\tthis.isFilterDisabled = false;\n\t\tthis.state.sort = [{\n\t\t\tdir: 'asc',\n\t\t\tfield: 'order'\n\t\t}];\n\t\tthis.applyFilter();\n\t}\n\n\tpublic refresh(): void {\n\t\tthis.gridData = process(this.fieldsSettings, this.state);\n\t}\n\n\t/**\n\t * TODO dontiveros: I need to remove this specific type of custom field code, create a helper for each field type and put code in there.\n\t * TODO dontiveros: Just like has been done on the Number Field Type.\n\t * @param dataItem\n\t */\n\tprotected onControlChange(previousControl: CUSTOM_FIELD_CONTROL_TYPE, dataItem: FieldSettingsModel): void {\n\t\tswitch (dataItem.control) {\n\t\t\tcase CUSTOM_FIELD_CONTROL_TYPE.List:\n\t\t\t\tNumberControlHelper.cleanNumberConstraints(dataItem.constraints as any);\n\t\t\t\t// Removes String constraints\n\t\t\t\tdelete dataItem.constraints.maxSize\n\t\t\t\tdelete dataItem.constraints.minSize\n\t\t\t\tif (dataItem.constraints.values &&\n\t\t\t\t\tdataItem.constraints.values.indexOf('Yes') !== -1 &&\n\t\t\t\t\tdataItem.constraints.values.indexOf('No') !== -1) {\n\t\t\t\t\tdataItem.constraints.values = [];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase CUSTOM_FIELD_CONTROL_TYPE.String:\n\t\t\t\tNumberControlHelper.cleanNumberConstraints(dataItem.constraints as any);\n\t\t\t\t// Remove List & YesNo constraints\n\t\t\t\tdelete dataItem.constraints.values;\n\t\t\t\tbreak;\n\t\t\tcase CUSTOM_FIELD_CONTROL_TYPE.YesNo:\n\t\t\t\tNumberControlHelper.cleanNumberConstraints(dataItem.constraints as any);\n\t\t\t\tdataItem.constraints.values = ['Yes', 'No'];\n\t\t\t\tif (dataItem.constraints.values.indexOf(dataItem.default) === -1) {\n\t\t\t\t\tdataItem.default = null;\n\t\t\t\t}\n\t\t\t\tif (!dataItem.constraints.required) {\n\t\t\t\t\tdataItem.constraints.values.splice(0, 0, '');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase CUSTOM_FIELD_CONTROL_TYPE.Number:\n\t\t\t\t// Remove List & YesNo constraints\n\t\t\t\tdelete dataItem.constraints.values;\n\t\t\t\t// Removes String constraints\n\t\t\t\tdelete dataItem.constraints.maxSize\n\t\t\t\tdelete dataItem.constraints.minSize\n\t\t\t\tNumberControlHelper.initConfiguration(dataItem.constraints as NumberConfigurationConstraintsModel);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tNumberControlHelper.cleanNumberConstraints(dataItem.constraints as any);\n\t\t\t\t// Remove List & YesNo constraints\n\t\t\t\tdelete dataItem.constraints.values;\n\t\t\t\t// Removes String constraints\n\t\t\t\tdelete dataItem.constraints.maxSize\n\t\t\t\tdelete dataItem.constraints.minSize\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprotected onControlModelChange(newValue: CUSTOM_FIELD_CONTROL_TYPE, dataItem: FieldSettingsModel) {\n\t\tconst previousControl = dataItem.control;\n\t\tif (dataItem.control === CUSTOM_FIELD_CONTROL_TYPE.List) {\n\t\t\tthis.prompt.open(\n\t\t\t\t'Confirmation Required',\n\t\t\t\t'Changing the control will lose all List options. Click Ok to continue otherwise Cancel',\n\t\t\t\t'Ok', 'Cancel').then(result => {\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tdataItem.control = newValue;\n\t\t\t\t\t\tthis.onControlChange(previousControl, dataItem);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tjQuery('#control' + dataItem.field).val('List');\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t} else {\n\t\t\tdataItem.control = newValue;\n\t\t\tthis.onControlChange(previousControl, dataItem);\n\t\t}\n\t}\n\n\tprotected hasError(label: string) {\n\t\treturn label.trim() === '' || this.data.fields.filter(item => item.label === label.trim()).length > 1;\n\t}\n\n\t/**\n\t * Function to determine if given field is currently used as Project Plan Methodology.\n\t * Note: Only APPLICATION asset types has the plan methodology feature.\n\t * @param {FieldSettingsModel} field\n\t * @returns {boolean} True or False\n\t */\n\tprotected isFieldUsedAsPlanMethodology(field: FieldSettingsModel): boolean {\n\t\treturn this.data.planMethodology && this.data.planMethodology === field.field;\n\t}\n\n\t/**\n\t * Open The Dialog to Edit Custom Field Setting\n\t * @param {ProviderModel} providerModel\n\t * @param {number} actionType\n\t */\n\tprivate openFieldSettingsPopup(dataItem: FieldSettingsModel): void {\n\t\tif (dataItem.control === CUSTOM_FIELD_CONTROL_TYPE.String) {\n\t\t\tthis.dialogService.open(MinMaxConfigurationPopupComponent, [\n\t\t\t\t{ provide: FieldSettingsModel, useValue: dataItem },\n\t\t\t\t{ provide: 'domain', useValue: this.data.domain }\n\t\t\t]).then(result => {\n\t\t\t\t// when popup closes ..\n\t\t\t}).catch(result => {\n\t\t\t\tconsole.log('Dismissed MinMaxConfigurationPopupComponent Dialog');\n\t\t\t});\n\t\t} else if (dataItem.control === CUSTOM_FIELD_CONTROL_TYPE.List) {\n\t\t\tthis.dialogService.open(SelectListConfigurationPopupComponent, [\n\t\t\t\t{ provide: FieldSettingsModel, useValue: dataItem },\n\t\t\t\t{ provide: 'domain', useValue: this.data.domain }\n\t\t\t]).then(result => {\n\t\t\t\t// when popup closes ..\n\t\t\t}).catch(result => {\n\t\t\t\tconsole.log('Dismissed SelectListConfigurationPopupComponent Dialog');\n\t\t\t});\n\t\t} else {\n\t\t\tthis.dialogService.open(NumberConfigurationPopupComponent, [\n\t\t\t\t{ provide: FieldSettingsModel, useValue: dataItem },\n\t\t\t\t{ provide: 'domain', useValue: this.data.domain }\n\t\t\t]).then(result => {\n\t\t\t\t// when popup closes ..\n\t\t\t}).catch(result => {\n\t\t\t\t// when popup is Cancelled.\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Check if selected field control has configuration available.\n\t * @param {CUSTOM_FIELD_CONTROL_TYPE} control\n\t * @returns {boolean}\n\t */\n\tprotected isAllowedConfigurationForField(control: CUSTOM_FIELD_CONTROL_TYPE): boolean {\n\t\tif (control === CUSTOM_FIELD_CONTROL_TYPE.List\n\t\t\t|| control === CUSTOM_FIELD_CONTROL_TYPE.String\n\t\t\t|| control === CUSTOM_FIELD_CONTROL_TYPE.Number) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Check if the field is allowed to have a default value.\n\t * @param {CUSTOM_FIELD_CONTROL_TYPE} control\n\t * @returns {boolean}\n\t */\n\tprotected isAllowedDefaultValueForField(control: CUSTOM_FIELD_CONTROL_TYPE): boolean {\n\t\tif (control && (control === CUSTOM_FIELD_CONTROL_TYPE.String\n\t\t||\tcontrol === CUSTOM_FIELD_CONTROL_TYPE.YesNo\n\t\t||\tcontrol === CUSTOM_FIELD_CONTROL_TYPE.List)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n}\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { FieldSettingsService } from '../../service/field-settings.service';\nimport { FIELD_COLORS } from '../../model/field-settings.model';\n\n@Component({\n\tselector: 'field-settings-imp',\n\ttemplateUrl: '../tds/web-app/app-js/modules/fieldSettings/components/imp/field-settings-imp.component.html',\n\tstyles: [`\n\t\tspan { padding:0 5px; cursor: pointer;}\n    `]\n})\nexport class FieldSettingsImportanceComponent implements  OnInit {\n\t@Input() model: string;\n\t@Input('edit') editMode: boolean;\n\t@Output() modelChange = new EventEmitter<string>();\n\tpublic values = [];\n\n\tconstructor(public fieldSettinsService: FieldSettingsService) {\n\t}\n\n\tngOnInit() {\n\t\tthis.values = FIELD_COLORS;\n\t}\n\n\tpublic onModelChange(value: string): void {\n\t\tthis.modelChange.emit(value);\n\t}\n}","import { Component, Inject, OnInit, OnDestroy, ViewChildren, QueryList } from '@angular/core';\nimport {ActivatedRoute, NavigationEnd, Router} from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { FieldSettingsGridComponent } from '../grid/field-settings-grid.component';\nimport { FieldSettingsService } from '../../service/field-settings.service';\nimport { FieldSettingsModel } from '../../model/field-settings.model';\nimport { DomainModel } from '../../model/domain.model';\n\nimport { PermissionService } from '../../../../shared/services/permission.service';\nimport { UIPromptService } from '../../../../shared/directives/ui-prompt.directive';\nimport { NotifierService } from '../../../../shared/services/notifier.service';\nimport { AlertType } from '../../../../shared/model/alert.model';\nimport { ValidationUtils } from '../../../../shared/utils/validation.utils';\nimport { Permission } from '../../../../shared/model/permission.model';\n\n@Component({\n\tselector: 'field-settings-list',\n\ttemplateUrl: '../tds/web-app/app-js/modules/fieldSettings/components/list/field-settings-list.component.html'\n})\nexport class FieldSettingsListComponent implements OnInit, OnDestroy {\n\t@ViewChildren('grid') grids: QueryList<FieldSettingsGridComponent>;\n\tpublic domains: DomainModel[] = [];\n\tprivate dataSignature: string;\n\tselectedTab = '';\n\tediting = false;\n\tprivate lastSnapshot;\n\tprotected navigationSubscription;\n\n\tprivate filter = {\n\t\tsearch: '',\n\t\tfieldType: 'All'\n\t};\n\n\tprivate fieldsToDelete = {};\n\n\tconstructor(\n\t\tprivate route: ActivatedRoute,\n\t\tprivate router: Router,\n\t\tprivate fieldService: FieldSettingsService,\n\t\tprivate permissionService: PermissionService,\n\t\tprivate prompt: UIPromptService,\n\t\tprivate notifier: NotifierService,\n\t) {\n\t\tthis.domains = this.route.snapshot.data['fields'];\n\t\tif (this.domains.length > 0) {\n\t\t\tthis.selectedTab = this.domains[0].domain;\n\t\t}\n\t\tthis.reloadStrategy();\n\t}\n\n\tngOnInit(): void {\n\t\tthis.initialiseComponent();\n\t}\n\n\t/**\n\t * Ensure the listener is not available after moving away from this component\n\t */\n\tngOnDestroy(): void {\n\t\tif (this.navigationSubscription) {\n\t\t\tthis.navigationSubscription.unsubscribe();\n\t\t}\n\t}\n\n\t/**\n\t * Reload Strategy keep listen To change to the route so we can reload whatever is inside the component\n\t * Increase dramatically the Performance\n\t */\n\tprivate reloadStrategy(): void {\n\t\t// The following code Listen to any change made on the rout to reload the page\n\t\tthis.navigationSubscription = this.router.events.subscribe((event: any) => {\n\t\t\tif (event.snapshot && event.snapshot.data && event.snapshot.data.fields) {\n\t\t\t\tthis.lastSnapshot = event.snapshot;\n\t\t\t}\n\t\t\t// If it is a NavigationEnd event re-initalise the component\n\t\t\tif (event instanceof NavigationEnd) {\n\t\t\t\tconsole.log(event);\n\t\t\t\tthis.domains = this.lastSnapshot.data['fields'];\n\t\t\t\tif (this.domains.length > 0) {\n\t\t\t\t\tthis.selectedTab = this.domains[0].domain;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Calls every time the Component is recreated by calling same URL\n\t */\n\tprivate initialiseComponent(): void {\n\t\tthis.dataSignature = JSON.stringify(this.domains);\n\t\tfor (let domain of this.domains) {\n\t\t\tthis.fieldsToDelete[domain.domain] = [];\n\t\t}\n\t}\n\n\tprotected onTabChange(domain: string): void {\n\t\tthis.selectedTab = domain;\n\t}\n\n\tprotected isTabSelected(domain: string): boolean {\n\t\treturn this.selectedTab === domain;\n\t}\n\n\tprotected onSaveAll(callback: any): void {\n\t\tif (this.isEditAvailable()) {\n\t\t\tlet invalid = this.domains.filter(domain => !this.isValid(domain));\n\t\t\tif (invalid.length === 0) {\n\n\t\t\t\t// remove(delete) fields if user requested\n\t\t\t\tfor (let domain of this.domains) {\n\t\t\t\t\tif (this.fieldsToDelete[domain.domain].length > 0) {\n\t\t\t\t\t\tthis.fieldsToDelete[domain.domain].forEach(field => {\n\t\t\t\t\t\t\tlet index = domain.fields.findIndex(x => x.field === field);\n\t\t\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\t\t\tdomain.fields.splice(index, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.domains.forEach(domain => {\n\t\t\t\t\tdomain.fields.filter(x => x['isNew'])\n\t\t\t\t\t\t.forEach(x => {\n\t\t\t\t\t\t\tdelete x['isNew'];\n\t\t\t\t\t\t\tdelete x['count'];\n\t\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tthis.fieldService.saveFieldSettings(this.domains)\n\t\t\t\t\t.subscribe((res: any) => {\n\t\t\t\t\t\tif (res.status === 'error') {\n\t\t\t\t\t\t\tlet message: string = res.errors.join(',');\n\t\t\t\t\t\t\tthis.notifier.broadcast({\n\t\t\t\t\t\t\t\tname: AlertType.DANGER,\n\t\t\t\t\t\t\t\tmessage: message + '. Refreshing...'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t\tcallback();\n\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.selectedTab = invalid[0].domain;\n\t\t\t\tthis.notifier.broadcast({\n\t\t\t\t\tname: AlertType.DANGER,\n\t\t\t\t\tmessage: 'Label is a required field and must be unique. Please correct before saving.'\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected onCancel(callback) {\n\t\tif (this.isDirty()) {\n\t\t\tthis.prompt.open(\n\t\t\t\t'Confirmation Required',\n\t\t\t\t'You have changes that have not been saved. Do you want to continue and lose those changes?',\n\t\t\t\t'Confirm', 'Cancel').then(result => {\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t} else {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\tprotected isEditAvailable(): boolean {\n\t\treturn this.permissionService.hasPermission(Permission.ProjectFieldSettingsEdit);\n\t}\n\n\tprotected isDirty(): boolean {\n\t\tlet result = this.dataSignature !== JSON.stringify(this.domains);\n\t\t// TODO: STATE SERVICE GO\n\t\t// if (this.state && this.state.$current && this.state.$current.data) {\n\t\t// \tthis.state.$current.data.hasPendingChanges = result;\n\t\t// }\n\t\tresult = result || this.hasPendingDeletes();\n\t\treturn result;\n\t}\n\n\tprotected getCurrentState(domain: DomainModel) {\n\t\treturn {\n\t\t\teditable: this.isEditAvailable(),\n\t\t\tdirty: this.isDirty(),\n\t\t\tvalid: this.isValid(domain),\n\t\t\tfilter: this.filter\n\t\t};\n\t}\n\n\tprotected refresh(): void {\n\t\tthis.fieldService.getFieldSettingsByDomain().subscribe(\n\t\t\t(result) => {\n\t\t\t\tthis.domains = result;\n\t\t\t\tthis.dataSignature = JSON.stringify(this.domains);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.grids.forEach(grid => grid.applyFilter());\n\t\t\t\t});\n\t\t\t},\n\t\t\t(err) => console.log(err));\n\t}\n\n\tprotected isValid(domain: DomainModel): boolean {\n\t\tlet values = domain.fields.map(x => x.label);\n\n\t\t// Validates \"Field Order\" is not null && should be a number on the range of [0, X)\n\t\tlet invalidOrderFields = domain.fields.filter(item =>\n\t\t\titem.order === null || !ValidationUtils.isValidNumber(item.order) || item.order < 0\n\t\t);\n\n\t\treturn domain.fields.filter(item => !item.label.trim() || !item.field).length === 0\n\t\t\t// Validates \"Field Labels\" should be unique by domain\n\t\t\t&& values.filter((l, i) => values.indexOf(l) !== i).length === 0\n\t\t\t&& invalidOrderFields.length === 0;\n\t}\n\n\tprotected onAdd(callback): void {\n\t\tlet custom = this.domains\n\t\t\t.filter(domain => domain.domain === this.selectedTab)\n\t\t\t.reduce((p: FieldSettingsModel[], c: DomainModel) => p.concat(c.fields), [])\n\t\t\t.filter(item => item.udf)\n\t\t\t.map((item) => +item.field.replace(/[a-z]/ig, ''))\n\t\t\t.filter((x, i, dt) => dt.indexOf(x) === i)\n\t\t\t.sort((a, b) => a - b);\n\t\tlet number = custom.findIndex((item, i) => item !== i + 1);\n\t\tif (((number === -1 ? custom.length : number) + 1) <= 96) {\n\t\t\tcallback('custom' + ((number === -1 ? custom.length : number) + 1));\n\t\t} else {\n\t\t\tthis.notifier.broadcast({\n\t\t\t\tname: AlertType.DANGER,\n\t\t\t\tmessage: 'Custom fields is limited to 96 fields.'\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected onShare(value: { field: FieldSettingsModel, domain: string }): void {\n\t\tif (value.field.shared) {\n\t\t\tthis.prompt.open(\n\t\t\t\t'Confirmation Required',\n\t\t\t\t`This will overwrite field ${value.field.field} in all asset classes. Do you want to continue?`,\n\t\t\t\t'Confirm', 'Cancel').then(result => {\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tthis.handleSharedField(value.field, value.domain);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue.field.shared = false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t} else {\n\t\t\tthis.handleSharedField(value.field, value.domain);\n\t\t}\n\t}\n\n\t/**\n\t * Checks if there are any pending fields to be deleted on all the domains.\n\t * @returns {boolean}\n\t */\n\tprivate hasPendingDeletes(): boolean {\n\t\tfor (let domain in this.fieldsToDelete) {\n\t\t\tif (this.fieldsToDelete[domain].length > 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Whenever the user clicks Delete button for a field on the grid, this event is called and\n\t * #this.fieldsToDelete gets updated.\n\t * @param {{domain: string; fieldsToDelete: string[]}} value\n\t */\n\tprotected onDelete(value: { domain: string, fieldsToDelete: string[] }): void {\n\t\tthis.fieldsToDelete[value.domain] = value.fieldsToDelete;\n\t}\n\n\tprotected onFilter(): void {\n\t\tthis.grids.forEach(grid => grid.applyFilter());\n\t}\n\n\tpublic refreshGrids(all, callback: any) {\n\t\tif (all) {\n\t\t\tthis.grids.forEach(grid => grid.refresh());\n\t\t} else {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\tprotected handleSharedField(field: FieldSettingsModel, domain: string) {\n\t\tthis.domains\n\t\t\t.filter(d => d.domain !== domain)\n\t\t\t.forEach(d => {\n\t\t\t\tlet indexOf = d.fields.findIndex(f => f.field === field.field);\n\t\t\t\tif (field.shared) {\n\t\t\t\t\tif (indexOf === -1) {\n\t\t\t\t\t\td.fields.push(field);\n\t\t\t\t\t} else {\n\t\t\t\t\t\td.fields.splice(indexOf, 1, field);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\td.fields.splice(indexOf, 1, { ...field });\n\t\t\t\t}\n\t\t\t});\n\t\tthis.refreshGrids(true, null);\n\t}\n}","import {Component, Input, ViewChild, OnInit, Inject} from '@angular/core';\nimport { FieldSettingsModel, ConstraintModel } from '../../model/field-settings.model';\nimport {UIActiveDialogService} from '../../../../shared/services/ui-dialog.service';\n\n@Component({\n\tselector: 'min-max-configuration-popup',\n\ttemplateUrl: '../tds/web-app/app-js/modules/fieldSettings/components/min-max/min-max-configuration-popup.component.html',\n\texportAs: 'minmaxConfig'\n})\n\nexport class MinMaxConfigurationPopupComponent implements OnInit {\n\n\tpublic show = false; // first time should open automatically.\n\tpublic model: ConstraintModel;\n\tpublic minIsValid = true;\n\n\tconstructor(\n\t\tpublic field: FieldSettingsModel,\n\t\t@Inject('domain') public domain: string,\n\t\tprivate activeDialog: UIActiveDialogService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.model = { ...this.field.constraints };\n\t\tthis.model.maxSize = this.model.maxSize || 255;\n\t\tif (this.model.required) {\n\t\t\tthis.model.minSize = this.model.minSize || 1;\n\t\t}\n\t}\n\n\t/**\n\t * Validates the form\n\t */\n\tpublic validateModel(): void {\n\t\tthis.minIsValid = true;\n\t\tif (this.model.minSize > this.model.maxSize || this.model.minSize < 0) {\n\t\t\tthis.minIsValid = false;\n\t\t}\n\t}\n\n\t/**\n\t * On button save click\n\t */\n\tpublic onSave(): void {\n\t\tthis.field.constraints = { ...this.model };\n\t\tthis.activeDialog.dismiss();\n\t}\n\n\t/**\n\t * Close the Dialog but first it verify is not Dirty\n\t */\n\tprotected cancelCloseDialog(): void {\n\t\tthis.activeDialog.dismiss();\n\t}\n}\n","import {Component, Inject} from '@angular/core';\nimport { FieldSettingsModel } from '../../model/field-settings.model';\nimport {UIActiveDialogService} from '../../../../shared/services/ui-dialog.service';\nimport {NumberConfigurationConstraintsModel} from './number-configuration-constraints.model';\nimport {NumberControlHelper} from '../../../../shared/components/custom-control/number/number-control.helper';\n\n@Component({\n\tselector: 'number-configuration-popup',\n\ttemplateUrl: '../tds/web-app/app-js/modules/fieldSettings/components/number/number-configuration-popup.component.html',\n})\n\nexport class NumberConfigurationPopupComponent {\n\n\tprivate readonly MIN_EXAMPLE_VALUE = -10000;\n\tprivate readonly MAX_EXAMPLE_VALUE = 10000;\n\tprotected model: NumberConfigurationConstraintsModel;\n\tprotected localMinRange: number;\n\tprotected exampleValue: number;\n\n\tconstructor(\n\t\tpublic field: FieldSettingsModel,\n\t\t@Inject('domain') public domain: string,\n\t\tprivate activeDialog: UIActiveDialogService) {\n\t\t\tthis.model = { ...this.field.constraints } as NumberConfigurationConstraintsModel;\n\t\t\tthis.localMinRange = this.model.isDefaultConfig ? null : this.model.minRange;\n\t\t\tthis.buildExampleValue();\n\t}\n\n\t/**\n\t * On Min range value changes.\n\t */\n\tprotected onMinRangeChange($event): void {\n\t\tthis.model.minRange = ($event === null) ? 0 : $event;\n\t\tthis.onFormatChange();\n\t}\n\n\t/**\n\t * On Allow Negatives changes.\n\t * @param $event\n\t */\n\tprotected onAllowNegativesChange($event): void {\n\t\tthis.onFormatChange();\n\t}\n\n\t/**\n\t * When any configuration changes, recalculate the number format.\n\t */\n\tprotected onFormatChange(): void {\n\t\tif (this.localMinRange !== null || this.model.maxRange !== null) {\n\t\t\tthis.model.allowNegative = false;\n\t\t}\n\t\tif (this.model.allowNegative === true) {\n\t\t\tthis.model.minRange = null;\n\t\t} else {\n\t\t\tif ((!this.localMinRange || this.localMinRange === null) && this.model.minRange === null) {\n\t\t\t\tthis.model.minRange = 0;\n\t\t\t}\n\t\t}\n\t\tthis.model.format = NumberControlHelper.buildFormat(this.model);\n\t\tthis.buildExampleValue();\n\t}\n\n\tprivate buildExampleValue(): void {\n\t\tif (this.model.allowNegative) {\n\t\t\tthis.exampleValue = this.MIN_EXAMPLE_VALUE;\n\t\t} else if (this.model.maxRange !== null) {\n\t\t\tthis.exampleValue = this.model.maxRange;\n\t\t} else {\n\t\t\tthis.exampleValue = this.MAX_EXAMPLE_VALUE;\n\t\t}\n\t}\n\n\t/**\n\t * On button save click\n\t */\n\tprotected onSave(): void {\n\t\tdelete this.model.isDefaultConfig;\n\t\tthis.field.constraints = { ...this.model } as any;\n\t\tthis.activeDialog.dismiss();\n\t}\n\n\t/**\n\t * Close the Dialog but first it verify is not Dirty\n\t */\n\tprotected cancelCloseDialog(): void {\n\t\tthis.activeDialog.dismiss();\n\t}\n}\n","/**\n * Created by David Ontiveros on 5/31/2017.\n */\nimport {Component, Inject, OnInit, ViewEncapsulation} from '@angular/core';\nimport { FieldSettingsModel } from '../../model/field-settings.model';\nimport { CustomDomainService } from '../../service/custom-domain.service';\nimport {UIActiveDialogService} from '../../../../shared/services/ui-dialog.service';\nimport {ValidationUtils} from '../../../../shared/utils/validation.utils';\nimport {UIPromptService} from '../../../../shared/directives/ui-prompt.directive';\n\n/**\n *\n */\n@Component({\n\tselector: 'selectlist-configuration-popup',\n\ttemplateUrl: '../tds/web-app/app-js/modules/fieldSettings/components/select-list/selectlist-configuration-popup.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\texportAs: 'selectlistConfig',\n\tstyles: [\n\t\t`.pointer { cursor: pointer; }`\n\t]\n})\n\nexport class SelectListConfigurationPopupComponent implements OnInit {\n\n\tpublic items: any[] = [];\n\tpublic savedItems: any[] = [];\n\tpublic newItem = '';\n\tpublic show = false; // first time should open automatically.\n\tpublic defaultValue: string = null;\n\tprotected sortType: string;\n\tprivate ASCENDING_ORDER = 'asc';\n\tprivate DESCENDING_ORDER = 'desc';\n\n\t/**\n\t * Class constructor.\n\t * @param customService Service to obtain distinct values.\n\t */\n\tconstructor(\n\t\tpublic field: FieldSettingsModel,\n\t\t@Inject('domain') public domain: string,\n\t\tprivate customService: CustomDomainService,\n\t\tprivate activeDialog: UIActiveDialogService,\n\t\tprivate promptService: UIPromptService) {\n\t}\n\n\tngOnInit() {\n\t\tthis.load();\n\t}\n\n\t/**\n\t * Intializes current component based on the @field input parameter.\n\t * Makes a service call to get pre-build distinct values from system.\n\t */\n\tprivate load(): void {\n\t\tthis.newItem = '';\n\t\tthis.sortType = null;\n\t\tthis.defaultValue = null;\n\t\tthis.customService.getDistinctValues(this.domain, this.field)\n\t\t\t.subscribe((distinctValues: string[]) => {\n\n\t\t\t\tlet indexOfBlank = distinctValues.indexOf('');\n\t\t\t\t// Add blank(empty) option if its a required field or remove it if opposite.\n\t\t\t\tif (this.field.constraints.required && indexOfBlank !== ValidationUtils.NOT_FOUND) { // If REQUIRED remove blank(empty) option\n\t\t\t\t\tdistinctValues.splice(indexOfBlank, 1);\n\t\t\t\t} else if (!this.field.constraints.required && indexOfBlank === ValidationUtils.NOT_FOUND) { // If NOT REQUIRED and distinctValues have no empty option register it.\n\t\t\t\t\tdistinctValues.push('');\n\t\t\t\t\tif (this.field.constraints.values && this.field.constraints.values.indexOf('') === ValidationUtils.NOT_FOUND) { // If it's not yet on current field values add it to items list (not deletable)\n\t\t\t\t\t\tthis.items.splice(0, 0, {deletable: false, value: ''} );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// build the option items list based on distinctValues and current stored values (maintain the order).\n\t\t\t\tif (this.field.constraints.values) {\n\t\t\t\t\tfor (let option of this.field.constraints.values) {\n\t\t\t\t\t\tlet indexOfDistinctValue = distinctValues.indexOf(option);\n\t\t\t\t\t\tif (indexOfDistinctValue === ValidationUtils.NOT_FOUND) {\n\t\t\t\t\t\t\tthis.items.push( {deletable: true, value: option} );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdistinctValues.splice(indexOfDistinctValue, 1);\n\t\t\t\t\t\t\tthis.items.push( {deletable: false, value: option} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// add any distinctValue that was not found on original field.constraint.values at the end.\n\t\t\t\tthis.items = this.items.concat( distinctValues.map( o => { return {deletable: false, value: o}; }) );\n\t\t\t\tthis.savedItems = this.items.slice();\n\t\t\t});\n\t\tthis.defaultValue = this.field.default;\n\t}\n\n\t/**\n\t * Helper method to set styling to items rows on a odd-even alternate pattern.\n\t * @param index\n\t * @returns {{background-color: string}}\n\t */\n\tpublic getStyle(index) {\n\t\tif ((index % 2) === 0) {\n\t\t\treturn { 'background-color': '#f6f6f6' };\n\t\t}\n\t}\n\n\t/**\n\t * See if the list has been modified since last save.\n\t */\n\tisDirty(): boolean {\n\t\treturn (JSON.stringify(this.items) !== JSON.stringify(this.savedItems) ||\n\t\t\t\tthis.field.default !== this.defaultValue);\n\t}\n\n\t/**\n\t * Function to handle event click on + Add button\n\t * Adds a new item to the list.\n\t */\n\tpublic onAdd(): void {\n\t\tif (this.items.filter((i) => i.value === this.newItem).length === 0) {\n\t\t\tthis.items.push({\n\t\t\t\tdeletable: true,\n\t\t\t\tvalue: this.newItem\n\t\t\t});\n\t\t\tthis.newItem = '';\n\t\t\t// sort if needed.\n\t\t\tif (this.sortType) {\n\t\t\t\tthis.sortItems();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Remove a specific item from the current config select list\n\t * @param item The item to be removed.\n\t */\n\tpublic onRemove(item: any): void {\n\t\tif (item.deletable) {\n\t\t\tthis.items.splice(this.items.indexOf(item), 1);\n\t\t}\n\t}\n\n\t/**\n\t * Function to handle onclick Save button event.\n\t * Saves the current select list configuration.\n\t * Simply sets current list into the field model and it's default value.\n\t */\n\tpublic onSave(): void {\n\t\tlet fieldModel = { ...this.field };\n\t\tfieldModel.constraints.values = this.items.map(i => i.value);\n\t\tthis.customService.checkConstraints(this.domain, fieldModel)\n\t\t\t.subscribe(res => {\n\t\t\t\tif (res) {\n\t\t\t\t\tthis.field.constraints.values = this.items.map(i => i.value);\n\t\t\t\t\tif (this.defaultValue != null) {\n\t\t\t\t\t\tthis.field.default = this.defaultValue;\n\t\t\t\t\t}\n\t\t\t\t\tthis.activeDialog.dismiss();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\t/**\n\t * Function to handle onclick Sort button event.\n\t * Auto-sort the items array, sort order is alphabetic ascending (up).\n\t */\n\tpublic toggleSort(): void {\n\t\tif (!this.sortType || this.sortType === this.DESCENDING_ORDER) {\n\t\t\tthis.sortType = this.ASCENDING_ORDER;\n\t\t} else {\n\t\t\tthis.sortType = this.DESCENDING_ORDER;\n\t\t}\n\t\tthis.sortItems();\n\t}\n\n\t/**\n\t * Sort items by type.\n\t */\n\tprivate sortItems(): void {\n\t\tthis.items.sort(this.sortType === this.ASCENDING_ORDER ? ascendingSort : descendingSort);\n\n\t\tfunction ascendingSort(a, b) {\n\t\t\tif (a.value.toUpperCase() < b.value.toUpperCase()) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (a.value.toUpperCase() > b.value.toUpperCase()) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\n\t\tfunction descendingSort(a, b) {\n\t\t\tif (a.value.toUpperCase() > b.value.toUpperCase()) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (a.value.toUpperCase() < b.value.toUpperCase()) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * Close the Dialog but first it verify is not Dirty\n\t */\n\tprotected cancelCloseDialog(): void {\n\t\tif (this.isDirty() || this.newItem.length > 0) {\n\t\t\tthis.promptService.open(\n\t\t\t\t'Confirmation Required',\n\t\t\t\t'You have changes that have not been saved. Do you want to continue and lose those changes?',\n\t\t\t\t'Confirm', 'Cancel')\n\t\t\t\t.then(confirm => {\n\t\t\t\t\tif (confirm) {\n\t\t\t\t\t\tthis.items = [];\n\t\t\t\t\t\tthis.activeDialog.dismiss();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((error) => console.log(error));\n\t\t} else {\n\t\t\tthis.items = [];\n\t\t\tthis.activeDialog.dismiss();\n\t\t}\n\t}\n}\n","// Angular\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n// Shared\nimport {SharedModule} from '../../shared/shared.module';\n// Kendo\nimport {GridModule} from '@progress/kendo-angular-grid';\nimport {PopupModule} from '@progress/kendo-angular-popup';\nimport {SortableModule} from '@progress/kendo-angular-sortable';\nimport {DialogModule} from '@progress/kendo-angular-dialog';\nimport {InputsModule} from '@progress/kendo-angular-inputs';\n// Route Module\nimport {FieldSettingsRouteModule} from './field-settings.states';\n// Components\nimport {FieldSettingsListComponent} from './components/list/field-settings-list.component';\nimport {FieldSettingsGridComponent} from './components/grid/field-settings-grid.component';\nimport {MinMaxConfigurationPopupComponent} from './components/min-max/min-max-configuration-popup.component';\nimport {SelectListConfigurationPopupComponent} from './components/select-list/selectlist-configuration-popup.component';\nimport {FieldSettingsImportanceComponent} from './components/imp/field-settings-imp.component';\nimport {NumberConfigurationPopupComponent} from './components/number/number-configuration-popup.component';\n// Resolves\nimport {ModuleResolveService} from '../../shared/resolves/module.resolve.service';\nimport {FieldsResolveService} from './resolve/fields-resolve.service';\n// Services\nimport {FieldSettingsService} from './service/field-settings.service';\nimport {CustomDomainService} from './service/custom-domain.service';\n\n@NgModule({\n\timports: [\n\t\t// Angular\n\t\tCommonModule,\n\t\tSharedModule,\n\t\tFormsModule,\n\t\t// Kendo\n\t\tGridModule,\n\t\tPopupModule,\n\t\tSortableModule,\n\t\tDialogModule,\n\t\tInputsModule,\n\t\t// Route\n\t\tFieldSettingsRouteModule\n\t],\n\tdeclarations: [\n\t\tFieldSettingsListComponent,\n\t\tFieldSettingsGridComponent,\n\t\tSelectListConfigurationPopupComponent,\n\t\tFieldSettingsImportanceComponent,\n\t\tMinMaxConfigurationPopupComponent,\n\t\tNumberConfigurationPopupComponent\n\t],\n\tproviders: [\n\t\t// Resolve\n\t\tFieldsResolveService,\n\t\t// Services\n\t\tModuleResolveService,\n\t\tFieldSettingsService,\n\t\tCustomDomainService\n\t],\n\tentryComponents: [\n\t\tSelectListConfigurationPopupComponent,\n\t\tMinMaxConfigurationPopupComponent,\n\t\tNumberConfigurationPopupComponent\n\t],\n\texports: [],\n})\n\nexport class FieldSettingsModule {\n}","// Angular\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n// Resolves\nimport {ModuleResolveService} from '../../shared/resolves/module.resolve.service';\nimport {PreferencesResolveService} from '../../shared/resolves/preferences-resolve.service';\nimport {FieldsResolveService} from './resolve/fields-resolve.service';\n// Services\nimport {AuthGuardService} from '../security/services/auth.guard.service';\n// Components\nimport {FieldSettingsListComponent} from './components/list/field-settings-list.component';\n// Models\nimport {Permission} from '../../shared/model/permission.model';\n\nexport class FieldSettingsStates {\n\tpublic static readonly LIST = {\n\t\turl: 'list'\n\t};\n}\n\nexport const FieldSettingsRoute: Routes = [\n\t{path: '', pathMatch: 'full', redirectTo: FieldSettingsStates.LIST.url},\n\t{\n\t\tpath: FieldSettingsStates.LIST.url,\n\t\tdata: {\n\t\t\tpage: {\n\t\t\t\ttitle: 'FIELD_SETTINGS.ASSET_FIELD_SETTING',\n\t\t\t\tinstruction: '',\n\t\t\t\tmenu: ['FIELD_SETTINGS.PROJECT_LIST', 'FIELD_SETTINGS.ASSET_FIELD_SETTING']\n\t\t\t},\n\t\t\trequiresAuth: true,\n\t\t\trequiresPermission: Permission.ProjectFieldSettingsView,\n\t\t\thasPendingChanges: false\n\t\t},\n\t\tcomponent: FieldSettingsListComponent,\n\t\tresolve: {\n\t\t\tfields: FieldsResolveService\n\t\t},\n\t\tcanActivate: [AuthGuardService, ModuleResolveService, PreferencesResolveService]\n\t}\n];\n\n@NgModule({\n\texports: [RouterModule],\n\timports: [RouterModule.forChild(FieldSettingsRoute)]\n})\n\nexport class FieldSettingsRouteModule {\n}","import { FieldSettingsModel } from './field-settings.model';\n\nexport class DomainModel {\n\tdomain: string;\n\tfields: Array<FieldSettingsModel>;\n\tversion ? = 0;\n\tplanMethodology?: string;\n}","import {CUSTOM_FIELD_TYPES as CUSTOM_FIELD_CONTROL_TYPE} from '../../../shared/model/constants';\nexport {CUSTOM_FIELD_CONTROL_TYPE}\n\nexport class FieldSettingsModel {\n\tfield: string;\n\tlabel: string;\n\ttip: string;\n\tudf: boolean;\n\tshared: boolean;\n\timp: 'C' | 'I' | 'N' | 'U';\n\tshow: boolean;\n\torder?: number;\n\tlength?: number;\n\tdefault?: any;\n\tcontrol?: CUSTOM_FIELD_CONTROL_TYPE;\n\tconstraints: ConstraintModel;\n\tstyle?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n\n\tconstructor() {\n\t\tthis.udf = true;\n\t\tthis.imp = 'N';\n\t}\n}\n\nexport class ConstraintModel {\n\trequired: boolean;\n\tminSize?: Number;\n\tmaxSize?: Number;\n\tvalues?: Array<string>;\n}\n\nexport class FieldImportance {\n\tpublic static Y = {\n\t\tname: 'yellow',\n\t\tcolor: '#FAFF9B'\n\t};\n\tpublic static G = {\n\t\tname: 'green',\n\t\tcolor: '#D4F8D4'\n\t};\n\tpublic static B = {\n\t\tname: 'blue',\n\t\tcolor: '#A9D6F2'\n\t};\n\tpublic static P = {\n\t\tname: 'pink',\n\t\tcolor: '#FFA5B4'\n\t};\n\tpublic static O = {\n\t\tname: 'orange',\n\t\tcolor: '#FFC65E'\n\t};\n\tpublic static N = {\n\t\tname: 'normal',\n\t\tcolor: '#DDDDDD'\n\t};\n\tpublic static U = {\n\t\tname: 'unimportant',\n\t\tcolor: '#F4F4F4'\n\t};\n}\n\nexport const FIELD_COLORS = ['Y', 'G', 'P', 'B', 'O', 'N', 'U'];\n\nexport const FIELD_NOT_FOUND = 'Field Not Found';\n","// Angular\nimport {Injectable} from '@angular/core';\nimport {Router, Resolve, ActivatedRouteSnapshot} from '@angular/router';\n// Services\nimport {FieldSettingsService} from '../service/field-settings.service';\n// Others\nimport {Observable} from 'rxjs';\n\n@Injectable()\nexport class FieldsResolveService implements Resolve<any> {\n\tconstructor(private fieldSettingsService: FieldSettingsService, private router: Router) {\n\t}\n\n\t/**\n\t * Get the List of Common Fields and Domains Used on several views\n\t * @param route\n\t */\n\tresolve(route: ActivatedRouteSnapshot): Observable<any> | boolean {\n\t\treturn this.fieldSettingsService.getFieldSettingsByDomain().map(domains => {\n\t\t\treturn domains;\n\t\t}).catch((err) => {\n\t\t\tconsole.error('FieldsResolveService:', 'An Error Occurred trying to fetch Field List');\n\t\t\tthis.router.navigate(['/security/error']);\n\t\t\treturn Observable.of(false);\n\t\t});\n\t}\n}","import { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { DomainModel } from '../model/domain.model';\nimport {CUSTOM_FIELD_CONTROL_TYPE, FieldSettingsModel} from '../model/field-settings.model';\nimport { HttpInterceptor } from '../../../shared/providers/http-interceptor.provider';\n\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n@Injectable()\nexport class FieldSettingsService {\n\n\tprivate fieldSettingsUrl = '../ws/customDomain/fieldSpec';\n\n\tconstructor(private http: HttpInterceptor) {\n\t}\n\n\tgetFieldSettingsByDomain(domain = 'ASSETS'): Observable<DomainModel[]> {\n\t\treturn this.http.get(`${this.fieldSettingsUrl}/${domain}`)\n\t\t\t.map((res: Response) => {\n\t\t\t\tlet response = res.json();\n\t\t\t\tlet domains: DomainModel[] = Object.keys(response).map(key => {\n\t\t\t\t\tresponse[key].domain = response[key].domain.toUpperCase();\n\t\t\t\t\treturn response[key];\n\t\t\t\t});\n\t\t\t\tif (domains.length > 0) {\n\t\t\t\t\tlet sharedFields = domains[0].fields.filter(x => x.shared);\n\t\t\t\t\tdomains.forEach(d => {\n\t\t\t\t\t\td.fields.filter(s => s.control === CUSTOM_FIELD_CONTROL_TYPE.YesNo)\n\t\t\t\t\t\t\t.forEach(s => {\n\t\t\t\t\t\t\t\ts.constraints.values = ['Yes', 'No'];\n\t\t\t\t\t\t\t\tif (!s.constraints.required) {\n\t\t\t\t\t\t\t\t\ts.constraints.values.splice(0, 0, '');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\tsharedFields.forEach(s => {\n\t\t\t\t\t\t\tlet indexOf = d.fields.findIndex(f => f.field === s.field);\n\t\t\t\t\t\t\tif (indexOf !== -1) {\n\t\t\t\t\t\t\t\td.fields.splice(indexOf, 1, s);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn domains as any;\n\t\t\t})\n\t\t\t.catch((error: any) => error.json());\n\t}\n\n\tsaveFieldSettings(domains: DomainModel[]): Observable<DomainModel[]> {\n\t\tlet payload = {};\n\t\tdomains\n\t\t\t.reduce((p: FieldSettingsModel[], c: DomainModel) => p.concat(c.fields), [])\n\t\t\t.forEach((item: any) => {\n\t\t\t\titem.constraints.required = +item.constraints.required;\n\t\t\t\titem.udf = +item.udf;\n\t\t\t\titem.show = +item.show;\n\t\t\t\titem.shared = +item.shared;\n\t\t\t});\n\t\tdomains.forEach(domainModel => {\n\t\t\tpayload[domainModel.domain.toUpperCase()] = domainModel;\n\t\t});\n\t\treturn this.http.post(`${this.fieldSettingsUrl}/ASSETS`, JSON.stringify(payload))\n\t\t\t.map((res: Response) => res['_body'] ? res.json() : { status: 'Ok' })\n\t\t\t.catch((error: any) => Observable.throw(error.json() || 'Server error'));\n\t}\n}"],"sourceRoot":""}