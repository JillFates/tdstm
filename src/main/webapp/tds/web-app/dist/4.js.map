{"version":3,"sources":["webpack:///./web-app/app-js/modules/assetTags/asset-tags-routing.states.ts","webpack:///./web-app/app-js/modules/assetTags/asset-tags.module.ts","webpack:///./web-app/app-js/modules/assetTags/components/tag-list/tag-list.component.ts","webpack:///./web-app/app-js/modules/assetTags/components/tag-merge/tag-merge-dialog.component.ts","webpack:///./web-app/app-js/modules/assetTags/model/tag-list-columns.model.ts"],"names":[],"mappings":"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","file":"4.js","sourcesContent":["// Angular\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n// Resolves\nimport {ModuleResolveService} from '../../shared/resolves/module.resolve.service';\n// Services\nimport {AuthGuardService} from '../security/services/auth.guard.service';\n// Components\nimport {TagListComponent} from './components/tag-list/tag-list.component';\n// Models\nimport {Permission} from '../../shared/model/permission.model';\n\nconst TOP_MENU_PARENT_SECTION = 'menu-parent-projects';\n\n/**\n * Asset Tag Route States\n * @class\n * @classdesc To use externally to reference possible state of the Asset Tag Module\n */\nexport class AssetTagsRouteStates {\n\tpublic static readonly TAG_LIST = {\n\t\turl: 'list'\n\t};\n}\n\nexport const AssetTagsRoute: Routes = [\n\t{path: '', pathMatch: 'full', redirectTo: AssetTagsRouteStates.TAG_LIST.url},\n\t{\n\t\tpath: AssetTagsRouteStates.TAG_LIST.url,\n\t\tdata: {\n\t\t\tpage: {\n\t\t\t\ttitle: 'ASSET_TAGS.MANAGE_TAGS',\n\t\t\t\tinstruction: '',\n\t\t\t\tmenu: ['GLOBAL.PROJECTS', 'ASSET_TAGS.MANAGE_TAGS'],\n\t\t\t\ttopMenu: {parent: TOP_MENU_PARENT_SECTION, child: 'menu-parent-project-tags'}\n\t\t\t},\n\t\t\trequiresAuth: true,\n\t\t\trequiresPermissions: [Permission.TagView],\n\t\t},\n\t\tcomponent: TagListComponent,\n\t\tcanActivate: [AuthGuardService, ModuleResolveService]\n\t}\n];\n\n@NgModule({\n\texports: [RouterModule],\n\timports: [RouterModule.forChild(AssetTagsRoute)]\n})\n\nexport class AssetTagsRouteModule {\n}","// Angular\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n// Shared\nimport {SharedModule} from '../../shared/shared.module';\n// Kendo\nimport {GridModule} from '@progress/kendo-angular-grid';\nimport {DropDownsModule} from '@progress/kendo-angular-dropdowns';\nimport {DateInputsModule} from '@progress/kendo-angular-dateinputs';\n// Route Module\nimport {AssetTagsRouteModule} from './asset-tags-routing.states';\n// Resolves\nimport {ModuleResolveService} from '../../shared/resolves/module.resolve.service';\n// Services\nimport {TagService} from './service/tag.service';\n// Components\nimport {TagListComponent} from './components/tag-list/tag-list.component';\nimport {TagMergeDialogComponent} from './components/tag-merge/tag-merge-dialog.component';\n\n@NgModule({\n\timports: [\n\t\t// Angular\n\t\tCommonModule,\n\t\tSharedModule,\n\t\tFormsModule,\n\t\t// Kendo\n\t\tGridModule,\n\t\tDropDownsModule,\n\t\tDateInputsModule,\n\t\t// Route\n\t\tAssetTagsRouteModule\n\t],\n\tdeclarations: [\n\t\tTagListComponent,\n\t\tTagMergeDialogComponent\n\t],\n\tproviders: [\n\t\tModuleResolveService,\n\t\tTagService\n\t],\n\texports: [\n\t\tTagListComponent\n\t],\n\tentryComponents: [\n\t\tTagMergeDialogComponent\n\t]\n})\n\nexport class AssetTagsModule {\n}\n","import {Component} from '@angular/core';\nimport {UIDialogService} from '../../../../shared/services/ui-dialog.service';\nimport {PermissionService} from '../../../../shared/services/permission.service';\nimport {UIPromptService} from '../../../../shared/directives/ui-prompt.directive';\nimport {PreferenceService} from '../../../../shared/services/preference.service';\nimport {DataGridOperationsHelper} from '../../../../shared/utils/data-grid-operations.helper';\nimport {TagService} from '../../service/tag.service';\nimport {TagModel} from '../../model/tag.model';\nimport {TagListColumnsModel} from '../../model/tag-list-columns.model';\nimport {ApiResponseModel} from '../../../../shared/model/ApiResponseModel';\nimport {DIALOG_SIZE, PROMPT_CANCEL, PROMPT_CONFIRM, PROMPT_DEFAULT_TITLE_KEY} from '../../../../shared/model/constants';\nimport {TranslatePipe} from '../../../../shared/pipes/translate.pipe';\nimport {TagMergeDialogComponent} from '../tag-merge/tag-merge-dialog.component';\nimport {Permission} from '../../../../shared/model/permission.model';\n\n@Component({\n\tselector: 'tag-list',\n\ttemplateUrl: '../tds/web-app/app-js/modules/assetTags/components/tag-list/tag-list.component.html',\n\tproviders: [TranslatePipe]\n})\nexport class TagListComponent {\n\n\tprotected gridSettings: DataGridOperationsHelper;\n\tprotected gridColumns: TagListColumnsModel;\n\tprotected colorList: Array<string>;\n\tprotected duplicateName = false;\n\tprivate editedRowIndex: number;\n\tprivate editedTag: TagModel;\n\tprotected dateFormat: string;\n\n\tprivate readonly REMOVE_CONFIRMATION = 'ASSET_TAGS.TAG_LIST.REMOVE_CONFIRMATION';\n\n\tconstructor(\n\t\tprivate tagService: TagService,\n\t\tprivate dialogService: UIDialogService,\n\t\tprivate permissionService: PermissionService,\n\t\tprivate promptService: UIPromptService,\n\t\tprivate translatePipe: TranslatePipe,\n\t\tuserPreferenceService: PreferenceService) {\n\t\t\tuserPreferenceService.getUserDatePreferenceAsKendoFormat().subscribe((dateFormat) => {\n\t\t\t\tthis.dateFormat = dateFormat;\n\t\t\t\tthis.gridColumns = new TagListColumnsModel(`{0:${dateFormat}}`);\n\t\t\t\tthis.onLoad();\n\t\t\t});\n\t}\n\n\t/**\n\t * Load necessary lists to render the view.\n\t */\n\tprivate onLoad(): void {\n\t\tthis.colorList = this.tagService.getTagColorList();\n\t\tthis.tagService.getTags().subscribe( (result: ApiResponseModel) => {\n\t\t\tif (result.status === ApiResponseModel.API_SUCCESS) {\n\t\t\t\tthis.gridSettings = new DataGridOperationsHelper(result.data,\n\t\t\t\t\t[{ dir: 'asc', field: 'name'}], // initial sort config.\n\t\t\t\t\t{ mode: 'single', checkboxOnly: false}, // selectable config.\n\t\t\t\t\t{ useColumn: 'id' }); // checkbox config.\n\t\t\t} else {\n\t\t\t\tthis.handleError(result.errors ? result.errors[0] : 'an error ocurred while loading the tag list.');\n\t\t\t}\n\t\t}, error => this.handleError(error));\n\t}\n\n\t/**\n\t * On Merge button click.\n\t */\n\tprotected onMerge(dataItem: TagModel): void {\n\t\tthis.dialogService.open(TagMergeDialogComponent, [\n\t\t\t{ provide: TagModel, useValue: dataItem}\n\t\t], DIALOG_SIZE.MD).then(result => {\n\t\t\tif (result) {\n\t\t\t\tthis.reloadTagList();\n\t\t\t}\n\t\t}).catch(result => {\n\t\t\tconsole.log('Dismissed Dialog');\n\t\t});\n\t}\n\n\t/**\n\t * Handles the Remove action on Remove/Delete button click.\n\t * @param {any} sender\n\t */\n\tprotected removeHandler({dataItem}): void {\n\t\tthis.promptService.open(\n\t\t\tthis.translatePipe.transform(PROMPT_DEFAULT_TITLE_KEY),\n\t\t\tthis.translatePipe.transform(this.REMOVE_CONFIRMATION),\n\t\t\tthis.translatePipe.transform(PROMPT_CONFIRM),\n\t\t\tthis.translatePipe.transform(PROMPT_CANCEL)).then(result => {\n\t\t\tif (result) {\n\t\t\t\tthis.tagService.deleteTag(dataItem.id).subscribe( (result: ApiResponseModel) => {\n\t\t\t\t\tif (result.status === ApiResponseModel.API_SUCCESS) {\n\t\t\t\t\t\tthis.reloadTagList();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.handleError(result.errors ? result.errors[0] : 'an error ocurred while deleting the tag.');\n\t\t\t\t\t}\n\t\t\t\t}, error => this.handleError(error));\n\t\t\t}\n\t\t}, (reason: any) => console.log('confirm rejected', reason));\n\t}\n\n\t/**\n\t * Handles the Add process.\n\t * @param {any} sender\n\t */\n\tprotected addHandler({sender}): void {\n\t\tthis.closeEditor(sender);\n\t\tsender.addRow(new TagModel());\n\t}\n\n\t/**\n\t * Handles the Update process.\n\t * @param {any} sender\n\t * @param {any} rowIndex\n\t * @param {any} dataItem\n\t */\n\tprotected editHandler({sender, rowIndex, dataItem}): void {\n\t\t// close the previously edited item\n\t\tthis.closeEditor(sender);\n\n\t\t// track the most recently edited row\n\t\t// it will be used in `closeEditor` for closing the previously edited row\n\t\tthis.editedRowIndex = rowIndex;\n\n\t\t// clone the current - `[(ngModel)]` will modify the original item\n\t\t// use this copy to revert changes\n\t\tthis.editedTag = Object.assign({}, dataItem);\n\n\t\t// edit the row\n\t\tsender.editRow(rowIndex);\n\t}\n\n\t/**\n\t * Handles the Save action on button click.\n\t * @param {any} sender\n\t * @param {any} rowIndex\n\t * @param {any} dataItem\n\t * @param {any} isNew\n\t */\n\tprotected saveHandler({sender, rowIndex, dataItem, isNew}): void {\n\t\tconst tagModel: TagModel = dataItem as TagModel;\n\t\tif (isNew) {\n\t\t\tthis.createTag(tagModel, sender, rowIndex);\n\t\t} else {\n\t\t\tthis.updateTag(tagModel, sender, rowIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Handles the Cancel action on Cancel button click.\n\t * @param {any} sender\n\t * @param {any} rowIndex\n\t */\n\tprotected cancelHandler({sender, rowIndex}): void {\n\t\t// call the helper method\n\t\tthis.closeEditor(sender, rowIndex);\n\t}\n\n\t/**\n\t * Closes the current row in edition.\n\t * @param grid\n\t * @param {number} rowIndex\n\t */\n\tprivate closeEditor(grid, rowIndex = this.editedRowIndex): void {\n\t\t// close the editor\n\t\tgrid.closeRow(rowIndex);\n\n\t\t// revert the data item to original state\n\t\tif (this.editedTag) {\n\t\t\tlet match = this.gridSettings.resultSet.find( (item: TagModel) => {\n\t\t\t\treturn item.id === this.editedTag.id;\n\t\t\t});\n\t\t\tObject.assign(match, this.editedTag);\n\t\t}\n\n\t\t// reset the helpers\n\t\tthis.editedRowIndex = undefined;\n\t\tthis.editedTag = undefined;\n\t}\n\n\t/**\n\t * Creates a new tag.\n\t * @param {TagModel} tagModel\n\t * @param sender\n\t * @param rowIndex\n\t */\n\tprivate createTag(tagModel: TagModel, sender, rowIndex): void {\n\t\tthis.tagService.createTag(tagModel).subscribe( (result: ApiResponseModel) => {\n\t\t\tif (result.status === ApiResponseModel.API_SUCCESS) {\n\t\t\t\tthis.finishSave(sender, rowIndex);\n\t\t\t\tthis.reloadTagList();\n\t\t\t} else {\n\t\t\t\tthis.handleError(result.errors ? result.errors[0] : 'an error ocurred while creating the tag');\n\t\t\t}\n\t\t}, error => this.handleError(error) );\n\t}\n\n\t/**\n\t * Updates an existing tag.\n\t * @param {TagModel} tagModel\n\t * @param sender\n\t * @param rowIndex\n\t */\n\tprivate updateTag(tagModel: TagModel, sender, rowIndex): void {\n\t\tthis.tagService.updateTag(tagModel).subscribe( (result: ApiResponseModel) => {\n\t\t\tif (result.status === ApiResponseModel.API_SUCCESS) {\n\t\t\t\tthis.finishSave(sender, rowIndex);\n\t\t\t\tthis.reloadTagList();\n\t\t\t} else {\n\t\t\t\tthis.handleError(result.errors ? result.errors[0] : 'an error ocurred while updating the tag');\n\t\t\t}\n\t\t}, error => this.handleError(error) );\n\t}\n\n\t/**\n\t * Common logic for create and update processes.\n\t * @param sender\n\t * @param rowIndex\n\t */\n\tprivate finishSave(sender, rowIndex): void {\n\t\t// reset the helpers\n\t\tsender.closeRow(rowIndex);\n\t\tthis.editedRowIndex = undefined;\n\t\tthis.editedTag = undefined;\n\t}\n\n\t/**\n\t * Reloads the current tag list from grid.\n\t */\n\tprivate reloadTagList(): void {\n\t\tthis.tagService.getTags().subscribe((result: ApiResponseModel) => {\n\t\t\tif (result.status === ApiResponseModel.API_SUCCESS) {\n\t\t\t\tthis.gridSettings.reloadData(result.data);\n\t\t\t} else {\n\t\t\t\tthis.handleError(result.errors ? result.errors[0] : 'an error ocurred while loading the tag list.');\n\t\t\t}\n\t\t}, error => this.handleError(error));\n\t}\n\n\t/**\n\t * Generic error handler function.\n\t * @param error\n\t */\n\tprivate handleError(error): void {\n\t\tconsole.log(error);\n\t}\n\n\t/**\n\t * Validates the current name on form is unique.\n\t * @param {string} name\n\t */\n\tprotected validateUniqueName(dataItem: TagModel): void {\n\t\tthis.duplicateName = false;\n\t\tconst match: TagModel = this.gridSettings.resultSet.find( (item: TagModel) => item.name.toLowerCase() === dataItem.name.trim().toLocaleLowerCase());\n\t\tif (match) {\n\t\t\tthis.duplicateName = dataItem.id ? dataItem.id !== match.id : true;\n\t\t}\n\t}\n\n\tprotected canCreate(): boolean {\n\t\treturn this.permissionService.hasPermission(Permission.TagCreate);\n\t}\n\n\tprotected canEdit(): boolean {\n\t\treturn this.permissionService.hasPermission(Permission.TagEdit);\n\t}\n\n\tprotected canDelete(): boolean {\n\t\treturn this.permissionService.hasPermission(Permission.TagDelete);\n\t}\n\n\tprotected canMerge(): boolean {\n\t\treturn this.permissionService.hasPermission(Permission.TagMerge);\n\t}\n}","import {Component} from '@angular/core';\nimport {UIActiveDialogService, UIDialogService} from '../../../../shared/services/ui-dialog.service';\nimport {TagService} from '../../service/tag.service';\nimport {UIPromptService} from '../../../../shared/directives/ui-prompt.directive';\nimport {TagModel} from '../../model/tag.model';\nimport {KEYSTROKE, PROMPT_CANCEL, PROMPT_CONFIRM, PROMPT_DEFAULT_TITLE_KEY} from '../../../../shared/model/constants';\nimport {ApiResponseModel} from '../../../../shared/model/ApiResponseModel';\nimport {TranslatePipe} from '../../../../shared/pipes/translate.pipe';\n\n@Component({\n\tselector: 'tag-merge-dialog',\n\ttemplateUrl: '../tds/web-app/app-js/modules/assetTags/components/tag-merge/tag-merge-dialog.component.html',\n\thost: {\n\t\t'(keydown)': 'keyDownHandler($event)'\n\t},\n\tproviders: [TranslatePipe]\n})\nexport class TagMergeDialogComponent {\n\n\tprotected tagList: Array<TagModel> = [];\n\tprotected mergeToTag: TagModel;\n\n\tprivate readonly MERGE_CONFIRMATION = 'ASSET_TAGS.TAG_LIST.MERGE_CONFIRMATION';\n\n\tconstructor(\n\t\tprotected tagModel: TagModel,\n\t\tprivate tagService: TagService,\n\t\tprivate promptService: UIPromptService,\n\t\tprivate activeDialog: UIActiveDialogService,\n\t\tprivate translatePipe: TranslatePipe) {\n\t\t\tthis.onLoad();\n\t}\n\n\t/**\n\t * Load necessary lists to render the view.\n\t */\n\tprivate onLoad(): void {\n\t\tthis.tagService.getTags().subscribe((result: ApiResponseModel) => {\n\t\t\tif (result.status === ApiResponseModel.API_SUCCESS) {\n\t\t\t\tlet defaultEmptyItem = new TagModel();\n\t\t\t\tdefaultEmptyItem.name = 'Select...';\n\t\t\t\tthis.mergeToTag = defaultEmptyItem;\n\t\t\t\tthis.tagList.push(defaultEmptyItem);\n\t\t\t\tthis.tagList.push(...result.data.filter( item => item.id !== this.tagModel.id ));\n\t\t\t} else {\n\t\t\t\tthis.handleError(result.errors ? result.errors[0] : 'an error ocurred while loading the tag list.');\n\t\t\t}\n\t\t}, error => this.handleError(error));\n\t}\n\n\t/**\n\t * On Merge button click, prompts a confirmation, then does the merge operation if confirmed.\n\t */\n\tprotected onMerge(): void {\n\t\tthis.promptService.open(\n\t\t\tthis.translatePipe.transform(PROMPT_DEFAULT_TITLE_KEY),\n\t\t\tthis.translatePipe.transform(this.MERGE_CONFIRMATION),\n\t\t\tthis.translatePipe.transform(PROMPT_CONFIRM),\n\t\t\tthis.translatePipe.transform(PROMPT_CANCEL)).then(result => {\n\t\t\tif (result) {\n\t\t\t\t// Do the merge, then close popup\n\t\t\t\tthis.tagService.mergeTags(this.tagModel.id, this.mergeToTag.id).subscribe( (result: ApiResponseModel) => {\n\t\t\t\t\tif (result.status === ApiResponseModel.API_SUCCESS) {\n\t\t\t\t\t\tthis.activeDialog.close(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.handleError(result.errors ? result.errors[0] : 'error ocurred while merging tags.')\n\t\t\t\t\t}\n\t\t\t\t}, error => this.handleError(error));\n\t\t\t}\n\t\t}, (reason: any) => console.log('confirm rejected', reason));\n\t}\n\n\t/**\n\t * Detect if the use has pressed the on Escape to close the dialog and popup if there are pending changes.\n\t * @param {KeyboardEvent} event\n\t */\n\tprivate keyDownHandler($event: KeyboardEvent): void {\n\t\tif ($event && $event.code === KEYSTROKE.ESCAPE) {\n\t\t\tthis.cancelCloseDialog();\n\t\t}\n\t}\n\n\t/**\n\t * Close the Dialog but first it verify is not Dirty\n\t */\n\tprotected cancelCloseDialog(): void {\n\t\tthis.activeDialog.close(false);\n\t}\n\n\t/**\n\t * Generic error handler function.\n\t * @param error\n\t */\n\tprivate handleError(error): void {\n\t\tconsole.log(error);\n\t}\n\n}","import {GridColumnModel} from '../../../shared/model/data-list-grid.model';\n\nexport class TagListColumnsModel {\n\n\tpublic columns: Array<GridColumnModel>;\n\n\tconstructor(dateFormat: string) {\n\t\tthis.columns = [\n\t\t\t{\n\t\t\t\tlabel: 'Name',\n\t\t\t\tproperty: 'name',\n\t\t\t\ttype: 'text',\n\t\t\t\twidth: 170,\n\t\t\t\tlocked: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Description',\n\t\t\t\tproperty: 'description',\n\t\t\t\ttype: 'text',\n\t\t\t\twidth: 380,\n\t\t\t\tlocked: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Color',\n\t\t\t\tproperty: 'color',\n\t\t\t\ttype: 'text',\n\t\t\t\twidth: 100,\n\t\t\t\tlocked: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Assets',\n\t\t\t\tproperty: 'assets',\n\t\t\t\ttype: 'number',\n\t\t\t\twidth: 120,\n\t\t\t\tlocked: false,\n\t\t\t\tcellStyle: {'text-align': 'center'}\n\t\t\t},\n\t\t\t// Disable these two when data available on API.\n\t\t\t/*{\n\t\t\t\tlabel: 'Dependencies',\n\t\t\t\tproperty: 'dependencies',\n\t\t\t\ttype: 'number',\n\t\t\t\twidth: 130,\n\t\t\t\tlocked: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Tasks',\n\t\t\t\tproperty: 'tasks',\n\t\t\t\ttype: 'number',\n\t\t\t\twidth: 130,\n\t\t\t\tlocked: false\n\t\t\t},*/\n\t\t\t{\n\t\t\t\tlabel: 'Date Created',\n\t\t\t\tproperty: 'dateCreated',\n\t\t\t\ttype: 'date',\n\t\t\t\tformat: dateFormat,\n\t\t\t\twidth: 160,\n\t\t\t\tlocked: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Last Modified',\n\t\t\t\tproperty: 'lastModified',\n\t\t\t\ttype: 'date',\n\t\t\t\tformat: dateFormat,\n\t\t\t\twidth: 160,\n\t\t\t\tlocked: false\n\t\t\t},\n\t\t]\n\t}\n}"],"sourceRoot":""}