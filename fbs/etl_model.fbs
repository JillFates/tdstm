namespace net.transitionmanager.fbs;

/// <p>Base class definition for a serialized ETLProcessorResult instance.</p>
/// <p>It contains a similar structure to {@code ETLProcessorResult}.</p>
/// <p>It is used after an ETL process execution.</p>
///
/// <p>Use following the example to create a new instance of FBSProcessorResult:</p>
/// <pre>
///
/// FlatBufferBuilder builder = new FlatBufferBuilder(1024)
///
/// int[] domainsOffset = ...
///
/// FBSProcessorResult.createFBSProcessorResult(
///     builder,
///     FBSInfo.createFBSInfo(builder, builder.createString(etlProcessorResultInstance.ETLInfo.filename)),
///     builder.createString(etlProcessorResultInstance.debugConsole.content),
///     FBSDomainResult.createDataVector(builder, domainsOffset),
///     etlProcessorResultInstance.version
/// )
/// </pre>
/// @see FBSInfo
/// @see FBSDomainResult#createDataVector

table FBSProcessorResult {
    FBSInfo: FBSInfo;
    consoleLog: string;
    domains: [FBSDomainResult];
    version: ulong;
}

/// <p>This part of the model represents the following JSON part in the ETLProcessorResult structure:</p>
/// <pre>
/// "ETLInfo": {
///     "originalFilename": "/tmp/EtlSampleData_2Z1scLRqEIg21Y5zYe5sTaAa5oqE21wo.csv"
/// },
/// </pre>
/// <p>Example of an instance creation:</p>
/// <pre>
///     FBSInfo.createFBSInfo(builder, builder.createString(etlProcessorResultInstance.ETLInfo.filename)),
/// </pre>

table FBSInfo {
    originalFilename: string;
}

/// <p>This part of the model represents the following JSON part in the ETLProcessorResult structure:</p>
/// <pre>
///     "fieldLabelMap": {
///         "assetName": "Name",
///         "description": "Description",
///         "id": "Id"
///     }
/// </pre>
/// <p>Example of an instance creation:</p>
/// <pre>
/// int fieldsLabelMapOffset = builder.createSortedVectorOfTables(new FBSFieldLabelMap(),
///      (int[]) [
///         FBSFieldLabelMap.createFBSFieldLabelMap(builder,
///             builder.createString('id'),
///             builder.createString('Id')
///         ),
///         FBSFieldLabelMap.createFBSFieldLabelMap(builder,
///             builder.createString('assetName'),
///             builder.createString('Name')
///         )
///     ]
/// )
/// </pre>

table FBSFieldLabelMap {
    name: string (key);
    label: string;
}

/// <p>This part of the model represents the following JSON part in the ETLProcessorResult structure:</p>
/// <pre>
///     "domains": [
///         "data": [...],
///         "domain": "Application",
///         "fieldLabelMap": {...},
///         "fieldNames": [...]
///     ]
/// </pre>
///
/// <p>Example of an instance creation:</p>
/// <pre>
/// FBSDomainResult.createFBSDomainResult(
///         builder,
///         builder.createString('Device'),
///         FBSDomainResult.createFieldNamesVector(builder, (int[]) [
///                 builder.createString('assetName'),
///                 builder.createString('description'),
///                 builder.createString('id')
///         ]),
///         fieldsLabelMapOffset,
///         FBSDomainResult.createDataVector(builder, dataOffset)
/// )
/// </pre>
/// @see FBSFieldLabelMap
/// @see FBSRowResult

table FBSDomainResult {
    domain: string;
    fieldNames: [string];
    fieldLabelMap: [FBSFieldLabelMap];
    data: [FBSRowResult];
}

///  <p>This part of the model represents the following JSON part in the ETLProcessorResult structure:</p>
/// <pre>
///  {
///     "propertyName": "assetName",
///     "operator": "eq",
///     "value": "zulu01"
///  },
/// </pre>
///
/// <p>Use following the example to create a new instance of FBSQueryResult:</p>
/// <pre>
/// FBSQueryResultCriteria.createFBSQueryResultCriteria(builder,
///     builder.createString('propertyName'),
///     builder.createString('eq'),
///     builder.createString('zulu01'),
///     builder.createString('String')
/// )
/// </pre>

table FBSQueryResultCriteria {
    propertyName: string;
    operator: string;
    value: string;
    type: string;
}
/// <p>This part of the model represents the following JSON part in the ETLProcessorResult structure.</p>
/// <pre>
/// "criteria": [
///     {"propertyName": "assetName", "operator": "eq","value": "zulu01"},
///     {"propertyName": "priority", "operator": "gt","value": 2},
/// ],
/// </pre>
///
/// <p>Use following the example to create a new instance of FBSQueryResult:</p>
/// <pre>
///  FBSQueryResult.createFBSQueryResult(builder,
///     builder.createString('Application'),
///     FBSQueryResult.createCriteriaVector(builder,
///         (int[]) [
///                     FBSQueryResultCriteria.createFBSQueryResultCriteria(builder,
///                         builder.createString('propertyName'),
///                         builder.createString('eq'),
///                         builder.createString('zulu01'),
///                         builder.createString('String')
///                     )
///                   ]
///     )
/// )
/// </pre>

table FBSQueryResult {
    domain: string;
    criteria: [FBSQueryResultCriteria];
}

/// <p>This part of the model represents the following JSON part in the ETLProcessorResult structure:</p>
/// <pre>
///  "find": {
///     "matchOn": null,
///     "query": [...],
///     "results": [...],
///     "size": 0
///  },
/// </pre>
/// <p>Example of an instance creation:</p>
/// <pre>
/// FBSQueryResult.createFBSQueryResult(builder,
///         builder.createString('Application'),
///         FBSQueryResult.createCriteriaVector(builder,
///                 (int[]) [
///                         FBSQueryResultCriteria.createFBSQueryResultCriteria(builder,
///                                 builder.createString('propertyName'),
///                                 builder.createString('eq'),
///                                 builder.createString('zulu01'),
///                                 builder.createString('String')
///                         )
///                 ]
///         )
/// )
/// </pre>

table FBSFindResult {
    query: [FBSQueryResult];
    results: [long];
    size: int;
    matchOn: int;
}

/// <p>This part of the model represents the following JSON part in the ETLProcessorResult structure:</p>
/// <pre>
///  "create": {
///     "assetName": "ACMEVMPROD01"
///  }
/// </pre>
/// <p>Example of an instance creation:</p>
/// <pre>
///  FBSCreate.createFBSCreate(builder,
///      builder.createString('assetName'),
///      builder.createString('ACMEVMPROD01'),
///      builder.createString('String')
///  ),
/// </pre>

table FBSCreate {
    name: string (key);
    value: string;
    type: string;
}

/// <p>This part of the model represents the following JSON part in the ETLProcessorResult structure:</p>
/// <pre>
///  "update": {
///     "assetType": "VM"
///  }
/// </pre>
/// <p>Example of an instance creation:</p>
/// <pre>
///  FBSUpdate.createFBSUpdate(builder,
///      builder.createString('assetType'),
///      builder.createString('VM'),
///      builder.createString('String')
///  ),
/// </pre>

table FBSUpdate {
    name: string (key);
    value: string;
    type: string;
}

/// <p>This part of the model represents the following JSON part in the ETLProcessorResult structure:</p>
/// <pre>
///  "assetName" :{
///     "create": null,
///     "errors": [],
///     "fieldOrder": 0,
///     "find": {
///       "matchOn": null,
///       "query": [],
///       "results": [],
///       "size": 0
///     },
///     "init": null,
///     "originalValue": "Server 1",
///     "update": null,
///     "value": "Server 1",
///     "warn": false
/// }
/// </pre>
/// <p>Example of an instance creation:</p>
/// <pre>
///  FBSFieldResult.createFBSFieldResult(builder,
///          builder.createString('assetName'),
///          builder.createString('originalValue'),
///          builder.createString('value'),
///          builder.createString('init'),
///          builder.createString('String'),
///          1,
///          FBSRowResult.createErrorsVector(builder, (int[]) [builder.createString('Quick Error Example')]),
///          true,
///          findOffset,
///          createOffset,
///          updateOffset
///  )
/// </pre>

table FBSFieldResult {
    key: string (key);
    originalValue: string;
    value: string;
    init: string;
    type: string;
    fieldOrder: int;
    errors: [string];
    warn: bool;
    find: FBSFindResult;
    create: [FBSCreate];
    update: [FBSUpdate];
}

/// <p>This part of the model represents the following JSON part in the ETLProcessorResult structure:</p>
/// <pre>
///  "replace": {"TAG I", "TAG II"}
/// </pre>
/// <p>Example of an instance creation:</p>
/// <pre>
///  FBSTagReplace.createFBSTagReplace(builder,
///     builder.createString('TAG V'),
///     builder.createString('TAG X')
///  ),
/// </pre>

table FBSTagReplace {
    key: string (key);
    value: string;
}

/// <p>This part of the model represents the following JSON part in the ETLProcessorResult structure:</p>
/// <pre>
///  "tags": {
///     "add": ["TAG X", "TAG XV"],
///     "add": ["TAG XX"] ,
///     "replace": {"TAG I", "TAG II"}
///  }
/// </pre>
/// <p>Example of an instance creation:</p>
/// <pre>
///  FBSTagResults.createFBSTagResults(builder,
///          FBSTagResults.createAddVector(builder,
///                  (int[]) [
///                          builder.createString('Tag I'),
///                          builder.createString('Tag II')
///                  ]
///          ),
///          FBSTagResults.createAddVector(builder,
///                  (int[]) [
///                          builder.createString('Tag III'),
///                  ]
///          ),
///          builder.createSortedVectorOfTables(new FBSTagResults(),
///                  (int[]) [
///                          FBSTagReplace.createFBSTagReplace(builder,
///                                  builder.createString('TAG V'),
///                                  builder.createString('TAG X')
///                          ),
///                  ]
///          )
///  )
/// </pre>

table FBSTagResults {
    add: [string];
    remove: [string];
    replace: [FBSTagReplace];
}

/// <p>This part of the model represents the following JSON part in the ETLProcessorResult structure:</p>
/// <pre>
///  {
///     "comments": [],
///     "duplicate": false,
///     "errorCount": 0,
///     "errors": [],
///     "fields": {},
///     "op": "Insert",
///     "rowNum": 1,
///     "warn": false,
///     "tags": null
///  },
/// </pre>
/// <p>Example of an instance creation:</p>
/// <pre>
///  FBSRowResult.createFBSRowResult(builder,
///          builder.createString('Insert'),
///          1,
///          1,
///          false,
///          false,
///          FBSRowResult.createErrorsVector(builder, (int[]) [builder.createString('Quick Error Example')]),
///          false,
///          fieldOffset,
///          builder.createString('Application'),
///          FBSRowResult.createCommentsVector(builder, (int[]) [builder.createString('Comment 1'), builder.createString('Comment 2')]),
///          tagsOffset
///  )
/// </pre>
/// @see FBSRowResult#createErrorsVector
/// @see FBSRowResult#createCommentsVector
/// @see FBSFieldResult
/// @see FBSTagResults

table FBSRowResult {
    op: string;
    rowNum: int;
    errorCount: int = 0;
    warn: bool;
    duplicate: bool;
    errors: [string];
    ignore: bool;
    fields: [FBSFieldResult];
    domain: string;
    comments: [string];
    tags: FBSTagResults;
}

/// Base class definition for a serialized ETLProcessorResult instance.
root_type FBSProcessorResult;