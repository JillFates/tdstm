svg {
	border: 1px solid rgb(0, 128, 0);
}

svg.shift_key {
	cursor: crosshair;
}

.hidden {
	display: none !important;
}

/* Graph Nodes */
.root {
	display: none !important;
}
circle {
	pointer-events: none !important;
}
circle.node {
	stroke: #fff;
	stroke-width: 1.5px;
}
use.node {
	fill: #0000ff;
	stroke: #000000;
	color: #000000;
	stroke-width: 1.5px;
}
use.node.selectedParent {
	fill: #00ff00 !important;
}
use.node.selectedChild {
	fill: #00cc99 !important;
}
use.node.cut {
	fill: #ff0000 !important;
}
use.node.blackBackground {
	stroke: #ffffff;
	color: #ffffff;
}
use.node.noEvent {
	stroke: red;
}
use.node.filtered {
	opacity: 0.5;
}
use.node.sourceAsset {
	stroke-width: 2.5px;
	stroke: #00aa00;
	color: #00aa00;
}
use.node.hl {
	stroke-width: 5px;
}
use.node.nohl {
	opacity: 0.4 !important;
}

g.hl {
	font-size: large !important;
	display: inline !important;
}
line.hl {
	opacity: 0.4 !important;
}
.nohl {
	opacity: 0.4 !important;
}

circle.cutShadow {
	opacity: 0.4;
}

/* Graph Vectors */

line.link {
	stroke: #000000;
	stroke-width: 1px;
	stroke-opacity: 0.9;
	marker-end: url(#arrowhead);
}
line.link.blackBackground {
	stroke: #ffffff;
	marker-end: url(#arrowheadBlackBackground);
}
line.link.redundant {
	stroke: orange !important;
	stroke-opacity: 0.8 !important;
	marker-end: url(#arrowheadRedundant);
	stroke-dasharray: 5,3;
}
line.link.hidden {
	display: none !important;
}
line.link.cyclical {
	stroke: blue !important;
	stroke-width: 3px;
	stroke-opacity: 1;
	marker-end: url(#arrowheadCyclical);
	stroke-dasharray: 3,3;
}
line.link.cut {
	stroke: orange !important;
	stroke-opacity: 1 !important;
	stroke-width: 2px !important;
	marker-end: url(#arrowheadCut);
}
line.link.Future {
	stroke-opacity: 0.9;
	stroke-dasharray: 8,3;
}

line.link.Validated {
	stroke-opacity: 1;
}
line.link.Questioned {
	stroke: red;
}

line.link.unresolved {
	stroke: red;
	marker-end: url(#arrowheadUnresolved);
}
line.link.notApplicable {
	stroke: #888888;
	stroke-opacity: 0.7;
	marker-end: url(#arrowheadNA);
}
line.link.notApplicable.blackBackground {
	marker-end: url(#arrowheadNABlackBackground);
}
line.link.bundleConflict {
	stroke: red;
	stroke-opacity: 1;
	stroke-width: 3px;
	stroke-dasharray: 8,3;
	marker-end: url(#arrowheadBundleConflict);
}
line.link.future {
	stroke-dasharray: 2,4;
}
line.link.selected {
	stroke: #00dd00 !important;
	stroke-width: 3px;
	marker-end: url(#arrowheadSelected) !important;
}

/* Graph Arrowheads */
defs svg {
	stroke-width: 2.5px;
}
#arrowheadRedundant {
	opacity: 0.5 !important;
}
#arrowheadCyclical {
	opacity: 0.3;
}
#arrowheadSelected {
	opacity: 1 !important;
}
#arrowheadNA {
	opacity: 0.6;
}
#arrowheadNABlackBackground {
	opacity: 0.3;
}

/* Graph Labels */
g.label {
	font: 11px Tahoma, Arial, san-serif;
}
g.label text {
	cursor: default;
	fill: #000000;
}
g.label.blackBackground text {
	fill: #ffffff;
}
g.label.selected text {
	fill: #009900;
}
g.label.selected.blackBackground text {
	fill: #88ff88;
}
g.label text.labelBackground {
	stroke: #ffffff;
	stroke-width: 3px;
}
g.label.blackBackground text.labelBackground {
	stroke: #000000;
}
g.label.filtered text {
	opacity: 0.5;
}


/* Layout twistie */
#layoutControlContainerId, #labelControlContainerId {
	padding: 0px;
	margin: 0px;
}
#twistieRowId td {
	vertical-align: bottom;
}
#twistieRowId svg {
	vertical-align: bottom;
	background-color: #ffffff;
	width: 12px;
	height: 12px;
	border-width: 0px;
}
#twistieSpanId:hover svg {
	background-color: #cccccc;
}
#twistieRowId #twistieId {
	transform-origin: 6px 6px;
}
#twistieSpanId.open #twistieId {
	transform: rotate(0deg);
}
#twistieSpanId.closed #twistieId {
	transform: rotate(-90deg);
}
