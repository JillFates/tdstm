{
	"info": {
		"_postman_id": "8499b816-7ab7-4337-a34d-7a492fb371dc",
		"name": "InvokeRemoteActionsTests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login - Invoke Remote Action tm16389",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2b17bc48-14e9-43d1-bed2-e730da57442f",
						"exec": [
							"pm.test(\"Response returns User Context\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"userContext\");",
							"    pm.expect(pm.response.text()).to.include(\"username\");     ",
							"    pm.expect(pm.response.text()).to.include(\"firstName\");",
							"    pm.expect(pm.response.text()).to.include(\"fullName\");",
							"    pm.expect(pm.response.text()).to.include(\"project\");",
							"    pm.expect(pm.response.text()).to.include(\"timezone\");",
							"    pm.expect(pm.response.text()).to.include(\"dateFormat\");",
							"    pm.expect(pm.response.text()).to.include(\"notices\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"{{password}}\"\n}"
				},
				"url": {
					"raw": "{{host}}/tdstm/auth/signIn",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"auth",
						"signIn"
					]
				},
				"description": "Login"
			},
			"response": []
		},
		{
			"name": "List Actions Info",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "427e5fea-90bd-4b86-acd4-ab1d77aede5c",
						"exec": [
							"var response = JSON.parse(responseBody);",
							"var httpMethod = response.data.httpMethod;",
							"",
							"",
							"pm.test(\"Http Method parameter is not null\", function () {",
							"    pm.expect(httpMethod).not.equal(null);",
							"});",
							"",
							"//We get a dictionary name, which is under the \"agentNames\" attribute",
							"var jsonObject = JSON.parse(responseBody);",
							"var dictionaryName = jsonObject.data.agentNames[0].name; ",
							"var dictionaryID = jsonObject.data.agentNames[0].id; ",
							"",
							"pm.environment.set(\"dictionaryName\", dictionaryName);",
							"pm.environment.set(\"dictionaryID\", dictionaryID);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/tdstm/ws/apiAction/enums",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"apiAction",
						"enums"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Dictionary methods",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "aa8e308f-24ca-46fb-9260-b7562e1a0b9c",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//We get the info from the methods of the Dictionary we use",
							"var responseObject = JSON.parse(responseBody);",
							"var firstMethod = Object.keys(responseObject)[0];",
							"var endpointUrl = Object.values(responseObject)[0].endpointUrl;",
							"var docUrl = Object.values(responseObject)[0].docUrl;",
							"",
							"",
							"pm.environment.set(\"dictionaryMethod\", firstMethod);",
							"pm.environment.set(\"dictionaryEndpointUrl\", endpointUrl);",
							"pm.environment.set(\"dictionaryDocUrl\", docUrl);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/tdstm/ws/apiAction/connector/{{dictionaryID}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"apiAction",
						"connector",
						"{{dictionaryID}}"
					]
				},
				"description": "Find all the providers for the user's current project."
			},
			"response": []
		},
		{
			"name": "List Providers",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "aa8e308f-24ca-46fb-9260-b7562e1a0b9c",
						"exec": [
							"//We need a provider value for the Api Action",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Success\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"success\");",
							"});",
							"",
							"var jsonObject = JSON.parse(responseBody);",
							"var providerId = jsonObject.data[0].id; ",
							"",
							"pm.environment.set(\"providerId\", providerId);",
							"",
							"var apiActionName = \"API Script New Action \" + _.random(1, 1000) + _.random(1, 1000) ;",
							"",
							"pm.environment.set(\"apiActionName\", apiActionName);",
							"",
							"var PowerShellActionName = \"PS Script New Action \" + _.random(1, 1000) + _.random(1, 1000) ;",
							"",
							"pm.environment.set(\"PowerShellActionName\", PowerShellActionName);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/tdstm/ws/dataingestion/provider/list",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"dataingestion",
						"provider",
						"list"
					]
				},
				"description": "Find all the providers for the user's current project."
			},
			"response": []
		},
		{
			"name": "Create PowerShell Action",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "427e5fea-90bd-4b86-acd4-ab1d77aede5c",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Success\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"success\");",
							"});",
							"",
							"var responseObject = JSON.parse(responseBody);",
							"var apiID = responseObject.data.id;",
							"pm.environment.set(\"psActionID\", apiID);",
							"pm.environment.set(\"apiActionId\", apiID);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"{{PowerShellActionName}}\",\r\n  \"dictionaryMethodName\": \"Select...\",\r\n  \"remoteCredentialMethod\": \"PROMPTED\",\r\n  \"description\": \"\",\r\n  \"provider\":{\"id\":\"{{providerId}}\"},\r\n  \"script\": \"Update-TaskProgress -Progress 25 -Message 'The task executed'\",\r\n  \"apiCatalog\": {\r\n    \"id\": 0\r\n  },\r\n  \"connectorMethod\": \"0\",\r\n  \"httpMethod\": \"Select...\",\r\n  \"endpointUrl\": \"\",\r\n  \"docUrl\": \"\",\r\n  \"producesData\": 0,\r\n  \"isPolling\": 0,\r\n  \"pollingInterval\": 0,\r\n  \"pollingLapsedAfter\": 0,\r\n  \"pollingStalledAfter\": 0,\r\n  \"isRemote\": true,\r\n  \"debugEnabled\": false,\r\n  \"actionType\": \"POWER_SHELL\",\r\n  \"reactionScripts\": \"{\\\"STATUS\\\":\\\"// Check the HTTP response code for a 200 OK \\\\n if (response.status == SC.OK) { \\\\n \\\\t return SUCCESS \\\\n } else { \\\\n \\\\t return ERROR \\\\n}\\\",\\\"SUCCESS\\\":\\\"// Update the task status that the task completed\\\\n task.started()\\\",\\\"DEFAULT\\\":\\\"// Put the task on hold and add a comment with the cause of the error\\\\n task.error( response.stderr )\\\\n\\\",\\\"ERROR\\\":\\\"// Put the task on hold and add a comment with the cause of the error\\\\n task.error( response.stderr )\\\",\\\"FAILED\\\":\\\"\\\",\\\"LAPSED\\\":\\\"\\\",\\\"STALLED\\\":\\\"\\\",\\\"PRE\\\":\\\"\\\",\\\"FINAL\\\":\\\"\\\"}\",\r\n  \"defaultDataScript\": {\r\n    \"id\": null\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/apiAction",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"apiAction"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Task",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a8d26a13-2feb-4a02-907d-0e3e33a1765a",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Task Creation\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"QA PowerShell Created Task\");",
							"});",
							"",
							"",
							"var jsonObject = JSON.parse(responseBody);",
							"var taskName = jsonObject.assetComment.comment; ",
							"var taskID = jsonObject.assetComment.id;",
							"",
							"pm.environment.set(\"taskName\", taskName);",
							"pm.environment.set(\"taskID\", taskID);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "sec-fetch-mode",
						"value": "cors"
					},
					{
						"key": "origin",
						"value": "https://tmqa02.transitionmanager.net"
					},
					{
						"key": "accept-encoding",
						"value": "gzip, deflate, br"
					},
					{
						"key": "accept-language",
						"value": "es-419,es;q=0.9,en;q=0.8"
					},
					{
						"key": "user-agent",
						"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36"
					},
					{
						"key": "content-type",
						"value": "application/json"
					},
					{
						"key": "accept",
						"value": "application/json, text/plain, */*"
					},
					{
						"key": "referer",
						"value": "https://tmqa02.transitionmanager.net/tdstm/module/taskManager/list"
					},
					{
						"key": "authority",
						"value": "tmqa02.transitionmanager.net"
					},
					{
						"key": "cookie",
						"value": "JSESSIONID=0A3D168F815FE33B941042E315B6DC3A"
					},
					{
						"key": "sec-fetch-site",
						"value": "same-origin"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{  \r\n   \"assetClass\":\"APPLICATION\",\r\n   \"assetEntity\":\"\",\r\n   \"assetType\":\"\",\r\n   \"assignedTo\":\"0\",\r\n   \"category\":\"general\",\r\n   \"apiAction\":\"{{psActionID}}\",\r\n   \"apiActionId\":\"{{psActionID}}\",\r\n   \"actionInvocable\":\"\",\r\n   \"actionMode\":\"\",\r\n   \"comment\":\"QA PowerShell Created Task {{$randomInt}}{{$randomInt}}\",\r\n   \"commentFromId\":\"\",\r\n   \"commentId\":\"\",\r\n   \"commentType\":\"issue\",\r\n   \"deletePredId\":\"\",\r\n   \"dueDate\":\"\",\r\n   \"duration\":\"0\",\r\n   \"durationScale\":\"M\",\r\n   \"estFinish\":\"\",\r\n   \"estStart\":\"\",\r\n   \"forWhom\":\"\",\r\n   \"hardAssigned\":\"0\",\r\n   \"sendNotification\":\"1\",\r\n   \"isResolved\":\"0\",\r\n   \"instructionsLink\":\"\",\r\n   \"moveEvent\":\"348\",\r\n   \"mustVerify\":\"0\",\r\n   \"override\":\"0\",\r\n   \"predCount\":\"-1\",\r\n   \"predecessorCategory\":\"\",\r\n   \"prevAsset\":\"\",\r\n   \"priority\":\"3\",\r\n   \"resolution\":\"\",\r\n   \"role\":\"\",\r\n   \"status\":\"Ready\",\r\n   \"percentageComplete\":0,\r\n   \"manageDependency\":\"1\",\r\n   \"taskDependency\":[  \r\n\r\n   ],\r\n   \"taskSuccessor\":[  \r\n\r\n   ],\r\n   \"deletedPreds\":\"\",\r\n   \"workflowTransition\":\"\",\r\n   \"canEdit\":true,\r\n   \"durationLocked\":\"0\",\r\n   \"id\":\"\"\r\n}"
				},
				"url": {
					"raw": "{{host}}/tdstm/assetEntity/saveComment",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"assetEntity",
						"saveComment"
					]
				}
			},
			"response": []
		},
		{
			"name": "invoke Remote action",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "40896f46-096c-4ceb-9513-b0199431dac5",
						"exec": [
							"var response = JSON.parse(responseBody);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Action section is retrieved\", function () {",
							"     pm.expect(pm.response.text()).to.include(\"apiAction\");",
							"});",
							"",
							"pm.test(\"Task section is retrieved.\", function () {",
							"   pm.expect(pm.response.text()).to.include(\"task\");",
							"   ",
							"});",
							"",
							"",
							"pm.test(\"Task is set as Started.\", function () {",
							"   pm.expect(response.actionRequest.task.status).to.equal(\"Started\");",
							"   ",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"publicKey\":\"{{publicKey}}\"\n}"
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/task/{{taskID}}/recordRemoteActionStarted",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"task",
						"{{taskID}}",
						"recordRemoteActionStarted"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get notes",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b8f550e9-9105-4906-b416-a0eecba6874c",
						"exec": [
							"",
							"var response = JSON.parse(responseBody);",
							"",
							"pm.test(\"Time action was invoked was updated to present date\", function () {",
							"    ",
							"    var jsonData = pm.response.json();",
							"    const moment = require('moment');",
							"    var date = moment().format(\"YYYY-MM-DD\");",
							"    pm.expect(response[0].apiActionInvokedAt).to.contain(date);",
							"    ",
							"});",
							"",
							"//Var cleanup",
							"pm.environment.unset(\"dictionaryID\");",
							"pm.environment.unset(\"dictionaryName\");",
							"pm.environment.unset(\"dictionaryDocUrl\");",
							"pm.environment.unset(\"dictionaryEndpointUrld\");",
							"pm.environment.unset(\"dictionaryMethod\");",
							"pm.environment.unset(\"PowerShellActionName\");",
							"pm.environment.unset(\"providerId\");",
							"pm.environment.unset(\"psActionID\");",
							"pm.environment.unset(\"firstProjID\");",
							"pm.environment.unset(\"firstProjName\");",
							"pm.environment.unset(\"apiActionId\");",
							"pm.environment.unset(\"taskID\");",
							"pm.environment.unset(\"taskName\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/tdstm/assetEntity/showComment?id={{taskID}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"assetEntity",
						"showComment"
					],
					"query": [
						{
							"key": "id",
							"value": "{{taskID}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "dcb626af-582f-4593-b354-ad1afbbb413b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "353dc2a7-168b-49fd-9daa-d4fa6f8fc216",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}