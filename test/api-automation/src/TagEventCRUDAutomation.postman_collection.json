{
	"info": {
		"_postman_id": "3822f568-cbb6-488f-ba7f-f7a71eae1c34",
		"name": "New Tags Events",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Sign In",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/tdstm/auth/signOut\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "username",
							"value": "tdsadmin",
							"type": "text"
						},
						{
							"key": "password",
							"value": "zelda123!",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{host}}/tdstm/auth/signIn?username={{username}}&password={{password}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"auth",
						"signIn"
					],
					"query": [
						{
							"key": "username",
							"value": "{{username}}"
						},
						{
							"key": "password",
							"value": "{{password}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "set current project",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "51b5875f-dd83-4223-8edf-6538dabcd9da",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n  \"provider\": {\"id\":1},\n  \"name\":\"My first Credential (updated)\",\n  \"environment\":\"Developement\",\n  \"status\":\"ACTIVE\",\n  \"authenticationMethod\":\"BASIC_AUTH\",\n  \"username\":\"boogyman\",\n  \"password\":\"boo!\",\n  \"httpMethod\":\"POST\",\n  \"authenticationUrl\":\"bullshit\",\n  \"renewTokenUrl\":\"\",\n  \"expirationDate\":\"2012-04-23T18:25:43.511Z\",\n  \"version\": 1\n}"
				},
				"url": {
					"raw": "{{host}}/tdstm/project/addUserPreference/{{projectId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"project",
						"addUserPreference",
						"{{projectId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "create tag",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9c02fb30-6c26-45f0-b2ee-37ceef574054",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"A new tag is created.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql('success');",
							"    ",
							"    var data = jsonData.data",
							"    pm.expect(data.name).to.eql('Brand new Tag');",
							"    pm.expect(data.description).to.eql('Tag to test new tags events.');",
							"    pm.expect(data.color).to.eql('Red');",
							"    pm.expect(data.css).to.eql('tag-red');",
							"    ",
							"    postman.setGlobalVariable(\"tag_id\", data.id);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n  \"name\":\"Brand new Tag\",\n  \"description\":\"Tag to test new tags events.\",\n  \"color\":\"Red\"\n}"
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/tag",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag"
					]
				}
			},
			"response": []
		},
		{
			"name": "create another tag",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "de1cbe65-0640-40e2-b9a6-63c87c883b35",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Creating another tag.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql('success');",
							"    ",
							"    var data = jsonData.data",
							"    pm.expect(data.name).to.eql('Return of the Tag');",
							"    pm.expect(data.description).to.eql('The tag returns');",
							"    pm.expect(data.color).to.eql('Red');",
							"    pm.expect(data.css).to.eql('tag-red');",
							"    ",
							"    postman.setGlobalVariable(\"tag_id2\", data.id);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n  \"name\":\"Return of the Tag\",\n  \"description\":\"The tag returns\",\n  \"color\":\"Red\"\n}"
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/tag",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag"
					]
				}
			},
			"response": []
		},
		{
			"name": "create tagEvent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4744fefe-90c1-4684-ba9c-43cabf70c496",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Create new tagEvent.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql('success');",
							"    ",
							"    var record = jsonData.data[0];",
							"    var record2 = jsonData.data[1];",
							"    ",
							"    pm.expect(record.name).to.eql('Brand new Tag');",
							"    pm.expect(record.description).to.eql('Tag to test new tags events.');",
							"    pm.expect(record.color).to.eql('Red');",
							"    pm.expect(record.css).to.eql('tag-red');",
							"    ",
							"    pm.expect(record2.name).to.eql('Return of the Tag');",
							"    pm.expect(record2.description).to.eql('The tag returns');",
							"    pm.expect(record2.color).to.eql('Red');",
							"    pm.expect(record2.css).to.eql('tag-red');",
							"    ",
							"    postman.setGlobalVariable(\"tag_event_id\", record.id);",
							"    postman.setGlobalVariable(\"tag_event_id2\", record2.id);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n  \"tagIds\":[{{tag_id}},{{tag_id2}}],\n  \"eventId\":{{event1}}\n}"
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/event",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"event"
					]
				}
			},
			"response": []
		},
		{
			"name": "list tagEvent after creating",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "310b92de-69af-424f-955a-c7329ee1000f",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Get the newly created eventTags.\", function () {",
							"    var json = pm.response.json();",
							"    ",
							"    var record = json.data[0];",
							"    var record2 = json.data[1];",
							"    ",
							"    pm.expect(record.name).to.eql('Brand new Tag');",
							"    pm.expect(record.description).to.eql('Tag to test new tags events.');",
							"    pm.expect(record.color).to.eql('Red');",
							"    pm.expect(record.css).to.eql('tag-red');",
							"    ",
							"    pm.expect(record2.name).to.eql('Return of the Tag');",
							"    pm.expect(record2.description).to.eql('The tag returns');",
							"    pm.expect(record2.color).to.eql('Red');",
							"    pm.expect(record2.css).to.eql('tag-red');",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n  \"provider\": {\"id\":1},\n  \"name\":\"My first Credential (updated)\",\n  \"environment\":\"Developement\",\n  \"status\":\"ACTIVE\",\n  \"authenticationMethod\":\"BASIC_AUTH\",\n  \"username\":\"boogyman\",\n  \"password\":\"boo!\",\n  \"httpMethod\":\"POST\",\n  \"authenticationUrl\":\"bullshit\",\n  \"renewTokenUrl\":\"\",\n  \"expirationDate\":\"2012-04-23T18:25:43.511Z\",\n  \"version\": 1\n}"
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/event/{{event1}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"event",
						"{{event1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "create tagEvent 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2e307849-14bd-48dc-87a7-ca32ed7d214e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Created tagEvent2\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql('success');",
							"    ",
							"    var data1 = jsonData.data[0];",
							"    ",
							"    pm.expect(data1.name).to.eql('Brand new Tag');",
							"    pm.expect(data1.description).to.eql('Tag to test new tags events.');",
							"    pm.expect(data1.color).to.eql('Red');",
							"    pm.expect(data1.css).to.eql('tag-red');",
							"    ",
							"    postman.setGlobalVariable(\"tag_event_id3\", data1.id);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n  \"tagIds\":[{{tag_id}}],\n  \"eventId\":{{event2}}\n}"
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/event",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"event"
					]
				}
			},
			"response": []
		},
		{
			"name": "create tagEvent 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a2afe7f4-81bb-4918-a15e-78975987678f",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Created tagEvent3.\", function () {",
							"    var json = pm.response.json();",
							"    pm.expect(json.status).to.eql('success');",
							"    ",
							"    var data1 = json.data[0];",
							"    ",
							"    pm.expect(data1.name).to.eql('Return of the Tag');",
							"    pm.expect(data1.description).to.eql('The tag returns');",
							"    pm.expect(data1.color).to.eql('Red');",
							"    pm.expect(data1.css).to.eql('tag-red');",
							"    ",
							"    postman.setGlobalVariable(\"tag_event_id4\", data1.id);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n  \"tagIds\":[{{tag_id2}}],\n  \"eventId\":{{event3}}\n}"
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/event/",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"event",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "create tagEvent 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "991cc7c2-a38c-4760-bb63-20bbf5b82a1f",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Created tagEvent4.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql('success');",
							"    ",
							"    var data1 = jsonData.data[0];",
							"    ",
							"    pm.expect(data1.name).to.eql('Return of the Tag');",
							"    pm.expect(data1.description).to.eql('The tag returns');",
							"    pm.expect(data1.color).to.eql('Red');",
							"    pm.expect(data1.css).to.eql('tag-red');",
							"    ",
							"    postman.setGlobalVariable(\"tag_event_id5\", data1.id);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n  \"tagIds\":[{{tag_id2}}],\n  \"eventId\":{{event4}}\n}"
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/event/",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"event",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "list tagEvents before merge",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "da37ef15-0ce9-4c04-bace-1a2cffdd2cfa",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Checking tagEvent4.\", function () {",
							"    var json = pm.response.json();",
							"    ",
							"    var record = json.data[0];",
							"    ",
							"    pm.expect(record.name).to.eql('Return of the Tag');",
							"    pm.expect(record.description).to.eql('The tag returns');",
							"    pm.expect(record.color).to.eql('Red');",
							"    pm.expect(record.css).to.eql('tag-red');",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n  \"provider\": {\"id\":1},\n  \"name\":\"My first Credential (updated)\",\n  \"environment\":\"Developement\",\n  \"status\":\"ACTIVE\",\n  \"authenticationMethod\":\"BASIC_AUTH\",\n  \"username\":\"boogyman\",\n  \"password\":\"boo!\",\n  \"httpMethod\":\"POST\",\n  \"authenticationUrl\":\"bullshit\",\n  \"renewTokenUrl\":\"\",\n  \"expirationDate\":\"2012-04-23T18:25:43.511Z\",\n  \"version\": 1\n}"
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/event/{{event4}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"event",
						"{{event4}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Merge tags",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "032ac9a8-aa95-4151-8f48-b2d99daa7ba3",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Merged tags\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql('success');",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/{{tag_id}}/merge/{{tag_id2}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"{{tag_id}}",
						"merge",
						"{{tag_id2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "list tagEvents after merge",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0475c136-f5ec-4b3d-9cc6-aeb205d549e5",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Get updated list for first event, after merged\", function () {",
							"    var json = pm.response.json();",
							"    ",
							"    pm.expect(json.data.length).to.eql(1);",
							"    ",
							"    var record = json.data[0];",
							"    ",
							"    pm.expect(record.name).to.eql('Brand new Tag');",
							"    pm.expect(record.description).to.eql('Tag to test new tags events.');",
							"    pm.expect(record.color).to.eql('Red');",
							"    pm.expect(record.css).to.eql('tag-red');",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n  \"provider\": {\"id\":1},\n  \"name\":\"My first Credential (updated)\",\n  \"environment\":\"Developement\",\n  \"status\":\"ACTIVE\",\n  \"authenticationMethod\":\"BASIC_AUTH\",\n  \"username\":\"boogyman\",\n  \"password\":\"boo!\",\n  \"httpMethod\":\"POST\",\n  \"authenticationUrl\":\"bullshit\",\n  \"renewTokenUrl\":\"\",\n  \"expirationDate\":\"2012-04-23T18:25:43.511Z\",\n  \"version\": 1\n}"
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/event/{{event1}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"event",
						"{{event1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "list tagEvents after merge 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a33d39d3-51ac-4b7c-a348-302eff8cd52b",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Get updated list for second event, after merged.\", function () {",
							"    var json = pm.response.json();",
							"    ",
							"    var record = json.data[0];",
							"    ",
							"    pm.expect(record.name).to.eql('Brand new Tag');",
							"    pm.expect(record.description).to.eql('Tag to test new tags events.');",
							"    pm.expect(record.color).to.eql('Red');",
							"    pm.expect(record.css).to.eql('tag-red');",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n  \"provider\": {\"id\":1},\n  \"name\":\"My first Credential (updated)\",\n  \"environment\":\"Developement\",\n  \"status\":\"ACTIVE\",\n  \"authenticationMethod\":\"BASIC_AUTH\",\n  \"username\":\"boogyman\",\n  \"password\":\"boo!\",\n  \"httpMethod\":\"POST\",\n  \"authenticationUrl\":\"bullshit\",\n  \"renewTokenUrl\":\"\",\n  \"expirationDate\":\"2012-04-23T18:25:43.511Z\",\n  \"version\": 1\n}"
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/event/{{event2}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"event",
						"{{event2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "list tagEvents after merge 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7fbde744-3761-4f32-9d6f-85936b2261b1",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Get updated list for third event, after merged\", function () {",
							"    var json = pm.response.json();",
							"    ",
							"    var record = json.data[0];",
							"    ",
							"    pm.expect(record.name).to.eql('Brand new Tag');",
							"    pm.expect(record.description).to.eql('Tag to test new tags events.');",
							"    pm.expect(record.color).to.eql('Red');",
							"    pm.expect(record.css).to.eql('tag-red');",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n  \"provider\": {\"id\":1},\n  \"name\":\"My first Credential (updated)\",\n  \"environment\":\"Developement\",\n  \"status\":\"ACTIVE\",\n  \"authenticationMethod\":\"BASIC_AUTH\",\n  \"username\":\"boogyman\",\n  \"password\":\"boo!\",\n  \"httpMethod\":\"POST\",\n  \"authenticationUrl\":\"bullshit\",\n  \"renewTokenUrl\":\"\",\n  \"expirationDate\":\"2012-04-23T18:25:43.511Z\",\n  \"version\": 1\n}"
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/event/{{event3}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"event",
						"{{event3}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "list tagEvents after merge 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2cff0c79-a66d-4476-bc44-981a6c512fe7",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Get updated list for fourth event, after merged\", function () {",
							"    var json = pm.response.json();",
							"    ",
							"    var record = json.data[0];",
							"    ",
							"    pm.expect(record.name).to.eql('Brand new Tag');",
							"    pm.expect(record.description).to.eql('Tag to test new tags events.');",
							"    pm.expect(record.color).to.eql('Red');",
							"    pm.expect(record.css).to.eql('tag-red');",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n  \"provider\": {\"id\":1},\n  \"name\":\"My first Credential (updated)\",\n  \"environment\":\"Developement\",\n  \"status\":\"ACTIVE\",\n  \"authenticationMethod\":\"BASIC_AUTH\",\n  \"username\":\"boogyman\",\n  \"password\":\"boo!\",\n  \"httpMethod\":\"POST\",\n  \"authenticationUrl\":\"bullshit\",\n  \"renewTokenUrl\":\"\",\n  \"expirationDate\":\"2012-04-23T18:25:43.511Z\",\n  \"version\": 1\n}"
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/event/{{event4}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"event",
						"{{event4}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete TagEvent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eabc81f5-b819-4290-b497-24862b2010c2",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Success no data returned.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql('success');",
							"    ",
							"    var data = jsonData.data",
							"    pm.expect(data).to.eql({});",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": true
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n  \"ids\":[{{tag_event_id}},{{tag_event_id3}},{{tag_event_id4}},{{tag_event_id5}}]\n}"
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/event/",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"event",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "list tagEvent after delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "33c3d2b2-c554-4ce6-9dee-07ba44973824",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Get an empty list, tagEvent deleted.\", function () {",
							"    var response = pm.response.json();",
							"    pm.expect(response.data).to.eql([]);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n  \"provider\": {\"id\":1},\n  \"name\":\"My first Credential (updated)\",\n  \"environment\":\"Developement\",\n  \"status\":\"ACTIVE\",\n  \"authenticationMethod\":\"BASIC_AUTH\",\n  \"username\":\"boogyman\",\n  \"password\":\"boo!\",\n  \"httpMethod\":\"POST\",\n  \"authenticationUrl\":\"bullshit\",\n  \"renewTokenUrl\":\"\",\n  \"expirationDate\":\"2012-04-23T18:25:43.511Z\",\n  \"version\": 1\n}"
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/event/{{event1}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"event",
						"{{event1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "list tagEvent after delete 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "aa828d61-e0e3-4d35-bded-1ae61bdf281f",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Get an empty list, tagEvent deleted.\", function () {",
							"    var response = pm.response.json();",
							"    pm.expect(response.data).to.eql([]);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n  \"provider\": {\"id\":1},\n  \"name\":\"My first Credential (updated)\",\n  \"environment\":\"Developement\",\n  \"status\":\"ACTIVE\",\n  \"authenticationMethod\":\"BASIC_AUTH\",\n  \"username\":\"boogyman\",\n  \"password\":\"boo!\",\n  \"httpMethod\":\"POST\",\n  \"authenticationUrl\":\"bullshit\",\n  \"renewTokenUrl\":\"\",\n  \"expirationDate\":\"2012-04-23T18:25:43.511Z\",\n  \"version\": 1\n}"
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/event/{{event2}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"event",
						"{{event2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "list tagEvent after delete 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "22456c53-4d7a-4dc3-a19f-7c2daa96f809",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Get an empty list, tagEvent deleted.\", function () {",
							"    var response = pm.response.json();",
							"    pm.expect(response.data).to.eql([]);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n  \"provider\": {\"id\":1},\n  \"name\":\"My first Credential (updated)\",\n  \"environment\":\"Developement\",\n  \"status\":\"ACTIVE\",\n  \"authenticationMethod\":\"BASIC_AUTH\",\n  \"username\":\"boogyman\",\n  \"password\":\"boo!\",\n  \"httpMethod\":\"POST\",\n  \"authenticationUrl\":\"bullshit\",\n  \"renewTokenUrl\":\"\",\n  \"expirationDate\":\"2012-04-23T18:25:43.511Z\",\n  \"version\": 1\n}"
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/event/{{event3}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"event",
						"{{event3}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "list tagEvent after delete 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "83825b1a-2cd0-47e7-bb57-fddbc746b806",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Get an empty list, tagAsets deleted.\", function () {",
							"    var response = pm.response.json();",
							"    pm.expect(response.data).to.eql([]);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n  \"provider\": {\"id\":1},\n  \"name\":\"My first Credential (updated)\",\n  \"environment\":\"Developement\",\n  \"status\":\"ACTIVE\",\n  \"authenticationMethod\":\"BASIC_AUTH\",\n  \"username\":\"boogyman\",\n  \"password\":\"boo!\",\n  \"httpMethod\":\"POST\",\n  \"authenticationUrl\":\"bullshit\",\n  \"renewTokenUrl\":\"\",\n  \"expirationDate\":\"2012-04-23T18:25:43.511Z\",\n  \"version\": 1\n}"
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/event/{{event4}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"event",
						"{{event4}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Tag",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eabc81f5-b819-4290-b497-24862b2010c2",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Success no data returned.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql('success');",
							"    ",
							"    var data = jsonData.data",
							"    pm.expect(data).to.eql({});",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": true
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/{{tag_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"{{tag_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "list tags after delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0c84aad7-683c-40e8-af1e-2e75df002cf6",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Tags that had been created are now deleted.\", function () {",
							"    var response = pm.response.json();",
							"     pm.expect(pm.response.text()).to.not.include(\"Brand new Tag\");",
							"     pm.expect(pm.response.text()).to.not.include(\"Return of the Tag\");",
							"});",
							"",
							"//cleanup code",
							"pm.globals.unset(\"tag_id2\");",
							"pm.globals.unset(\"tag_event_id\");",
							"pm.globals.unset(\"tag_event_id2\");",
							"pm.globals.unset(\"tag_event_id3\");",
							"pm.globals.unset(\"tag_event_id4\");",
							"pm.globals.unset(\"tag_event_id5\");"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n  \"provider\": {\"id\":1},\n  \"name\":\"My first Credential (updated)\",\n  \"environment\":\"Developement\",\n  \"status\":\"ACTIVE\",\n  \"authenticationMethod\":\"BASIC_AUTH\",\n  \"username\":\"boogyman\",\n  \"password\":\"boo!\",\n  \"httpMethod\":\"POST\",\n  \"authenticationUrl\":\"bullshit\",\n  \"renewTokenUrl\":\"\",\n  \"expirationDate\":\"2012-04-23T18:25:43.511Z\",\n  \"version\": 1\n}"
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/tag",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "43493b28-f182-4072-8158-febb5a29128b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "df2564eb-afb6-492c-b718-de955d16cb37",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "156b8a39-c922-4f2b-bd89-e0ebf6560de4",
			"key": "projectId",
			"value": "2445",
			"type": "string"
		},
		{
			"id": "4c2242bc-d29b-48c7-a978-f5d2296b33e3",
			"key": "event1",
			"value": "348",
			"type": "string"
		},
		{
			"id": "21926da0-5ad9-4dfe-9e12-9537aca95159",
			"key": "event2",
			"value": "349",
			"type": "string"
		},
		{
			"id": "37c253dd-e696-4e36-a369-7fdbe84448e5",
			"key": "event3",
			"value": "350",
			"type": "string"
		},
		{
			"id": "686f12f0-db1b-461d-bd8f-25178e02dc99",
			"key": "event4",
			"value": "364",
			"type": "string"
		}
	]
}