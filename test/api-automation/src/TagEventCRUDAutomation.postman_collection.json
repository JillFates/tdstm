{
	"info": {
		"_postman_id": "e3c28637-4fe4-4b4d-b6e4-444101ddd260",
		"name": "Tag Event CRUD",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login - Tag Event CRUD",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d1d477e2-d41c-4ef4-a861-40866070aa1f",
						"exec": [
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/tdstm/auth/signOut\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "username",
							"value": "api_test_user",
							"type": "text"
						},
						{
							"key": "password",
							"value": "api_password",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{host}}/tdstm/auth/signIn",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"auth",
						"signIn"
					]
				}
			},
			"response": []
		},
		{
			"name": "set current project",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "51b5875f-dd83-4223-8edf-6538dabcd9da",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    ",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{host}}/tdstm/project/addUserPreference/{{projectId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"project",
						"addUserPreference",
						"{{projectId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "create tag",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "68d015c5-3903-4a68-beaa-4e6f58ae5300",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"A new tag is created.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql('success');",
							"    ",
							"    var data = jsonData.data",
							"    pm.expect(data.name).to.contain('Brand new Tag');",
							"    pm.expect(data.description).to.eql('Tag to test new tags events.');",
							"    pm.expect(data.color).to.eql('Red');",
							"    pm.expect(data.css).to.eql('tag-red');",
							"    ",
							"    postman.setGlobalVariable(\"tag_id\", data.id);",
							"    postman.setGlobalVariable(\"validator\",data.name.slice(14));",
							"    ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n  \"name\":\"Brand new Tag {{$randomInt}}\",\n  \"description\":\"Tag to test new tags events.\",\n  \"color\":\"Red\"\n}"
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/tag",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag"
					]
				}
			},
			"response": []
		},
		{
			"name": "create another tag",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fbee500e-d785-4a85-a757-1418bba9df45",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Creating another tag.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql('success');",
							"    ",
							"    var data = jsonData.data",
							"    pm.expect(data.name).to.contain('Brand new Tag2');",
							"    pm.expect(data.description).to.eql('Tag to test new tags events.');",
							"    pm.expect(data.color).to.eql('Red');",
							"    pm.expect(data.css).to.eql('tag-red');",
							"    ",
							"    postman.setGlobalVariable(\"tag_id2\", data.id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n  \"name\":\"Brand new Tag2 {{validator}}\",\n  \"description\":\"Tag to test new tags events.\",\n  \"color\":\"Red\"\n}"
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/tag",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag"
					]
				}
			},
			"response": []
		},
		{
			"name": "List Events",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "049e3830-bb5f-416f-a034-e408875b1317",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Events have been listed.\", function () {",
							"    var jsonData = pm.response.json();",
							"    ",
							"    var data = jsonData.rows",
							"    pm.globals.set(\"event1\", data[0].id);",
							"    pm.globals.set(\"event2\", data[1].id);",
							"    pm.globals.set(\"event3\", data[2].id);",
							"    pm.globals.set(\"event4\", data[3].id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{host}}/tdstm/moveEvent/listJson?_search=false&nd=15453170873241&sidx=name",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"moveEvent",
						"listJson"
					],
					"query": [
						{
							"key": "_search",
							"value": "false"
						},
						{
							"key": "nd",
							"value": "15453170873241"
						},
						{
							"key": "sidx",
							"value": "name"
						}
					]
				},
				"description": "This EP will bring a list of events. Some event ids will be saved in order to add the created tags to them."
			},
			"response": []
		},
		{
			"name": "create tagEvent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b228c835-9f50-4371-bdd4-720b9c2ffef2",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Create new tagEvent.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql('success');",
							"    ",
							"    var record = jsonData.data[0];",
							"    var record2 = jsonData.data[1];",
							"    ",
							"    pm.expect(record.name).to.contain('Brand new Tag');",
							"    pm.expect(record.description).to.eql('Tag to test new tags events.');",
							"    pm.expect(record.color).to.eql('Red');",
							"    pm.expect(record.css).to.eql('tag-red');",
							"    ",
							"    pm.expect(record2.name).to.contain('Brand new Tag2');",
							"    pm.expect(record2.description).to.eql('Tag to test new tags events.');",
							"    pm.expect(record2.color).to.eql('Red');",
							"    pm.expect(record2.css).to.eql('tag-red');",
							"    ",
							"    postman.setGlobalVariable(\"tag_event_id\", record.id);",
							"    postman.setGlobalVariable(\"tag_event_id2\", record2.id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n  \"tagIds\":[{{tag_id}},{{tag_id2}}],\n  \"eventId\":{{event1}}\n}"
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/event",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"event"
					]
				}
			},
			"response": []
		},
		{
			"name": "list tagEvent after creating",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "47b94463-9faf-4ae2-afcd-e7d25071f4b1",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Get the newly created eventTags.\", function () {",
							"    var json = pm.response.json();",
							"    var val= pm.variables.get(\"validator\");",
							"    var tagWasListed = false;",
							"    var i;",
							"    for (i = 0; i < json.data.length; i++) { ",
							"      if(json.data[i].name.includes(val) ){",
							"          tagWasListed=true;",
							"          pm.expect(json.data[i].name).to.contain('Brand new Tag');",
							"          pm.expect(json.data[i].description).to.eql('Tag to test new tags events.');",
							"          pm.expect(json.data[i].color).to.eql('Red');",
							"          pm.expect(json.data[i].css).to.eql('tag-red');",
							"      }",
							"    }",
							"    pm.expect(tagWasListed).to.eql(true);",
							"   ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/event/{{event1}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"event",
						"{{event1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "create tagEvent 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "efdab324-f67f-429c-ad74-44f1b410f25d",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Created tagEvent2\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql('success');",
							"    ",
							"    var data1 = jsonData.data[0];",
							"    ",
							"    pm.expect(data1.name).to.contain('Brand new Tag');",
							"    pm.expect(data1.description).to.eql('Tag to test new tags events.');",
							"    pm.expect(data1.color).to.eql('Red');",
							"    pm.expect(data1.css).to.eql('tag-red');",
							"    ",
							"    postman.setGlobalVariable(\"tag_event_id3\", data1.id);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n  \"tagIds\":[{{tag_id}}],\n  \"eventId\":{{event2}}\n}"
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/event",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"event"
					]
				}
			},
			"response": []
		},
		{
			"name": "create tagEvent 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f321b0ef-76db-4600-bc83-52e341dbdbd6",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Created tagEvent3.\", function () {",
							"    var json = pm.response.json();",
							"    pm.expect(json.status).to.eql('success');",
							"    ",
							"    var data1 = json.data[0];",
							"    ",
							"    pm.expect(data1.name).to.contain('Brand new Tag2');",
							"    pm.expect(data1.description).to.eql('Tag to test new tags events.');",
							"    pm.expect(data1.color).to.eql('Red');",
							"    pm.expect(data1.css).to.eql('tag-red');",
							"    ",
							"    postman.setGlobalVariable(\"tag_event_id4\", data1.id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n  \"tagIds\":[{{tag_id2}}],\n  \"eventId\":{{event3}}\n}"
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/event/",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"event",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "create tagEvent 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8fb47a0d-e6f2-4219-8633-174876fea8f9",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Created tagEvent4.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql('success');",
							"    ",
							"    var data1 = jsonData.data[0];",
							"    ",
							"    pm.expect(data1.name).to.contain('Brand new Tag2');",
							"    pm.expect(data1.description).to.eql('Tag to test new tags events.');",
							"    pm.expect(data1.color).to.eql('Red');",
							"    pm.expect(data1.css).to.eql('tag-red');",
							"    ",
							"    postman.setGlobalVariable(\"tag_event_id5\", data1.id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n  \"tagIds\":[{{tag_id2}}],\n  \"eventId\":{{event4}}\n}"
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/event/",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"event",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "list tagEvents before merge",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "253cba24-9d59-4b47-a428-eb87a3fc38e0",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Checking tagEvent4.\", function () {",
							"    var json = pm.response.json();",
							"    ",
							"    var record = json.data[0];",
							"    ",
							"    pm.expect(record.name).to.include('Brand new Tag');",
							"    pm.expect(record.description).to.eql('Tag to test new tags events.');",
							"    pm.expect(record.color).to.eql('Red');",
							"    pm.expect(record.css).to.eql('tag-red');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/event/{{event4}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"event",
						"{{event4}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Merge tags",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "032ac9a8-aa95-4151-8f48-b2d99daa7ba3",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Merged tags\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql('success');",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/{{tag_id}}/merge/{{tag_id2}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"{{tag_id}}",
						"merge",
						"{{tag_id2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "list tagEvents after merge",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a7ffbe31-26d4-44f5-8c91-f549f2cebf33",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Get updated list for first event, after merged\", function () {",
							"    var json = pm.response.json();",
							"    ",
							"    pm.expect(json.data.length).to.eql(1);",
							"    ",
							"    var record = json.data[0];",
							"    ",
							"    pm.expect(record.name).to.contain('Brand new Tag');",
							"    pm.expect(record.description).to.eql('Tag to test new tags events.');",
							"    pm.expect(record.color).to.eql('Red');",
							"    pm.expect(record.css).to.eql('tag-red');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/event/{{event1}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"event",
						"{{event1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "list tagEvents after merge 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d4f67500-a84b-4803-ba7e-b47ad00b97b3",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Validate the event is tagged with our tag.\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Brand new Tag\");",
							"    pm.expect(pm.response.text()).to.include('Tag to test new tags events.');",
							"    pm.expect(pm.response.text()).to.include('Red');",
							"    pm.expect(pm.response.text()).to.include('tag-red');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/event/{{event2}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"event",
						"{{event2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "list tagEvents after merge 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "055b1b50-6017-4889-90fd-74c1e7792913",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Validate the event is tagged with our tag.\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Brand new Tag\");",
							"    pm.expect(pm.response.text()).to.include('Tag to test new tags events.');",
							"    pm.expect(pm.response.text()).to.include('Red');",
							"    pm.expect(pm.response.text()).to.include('tag-red');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/event/{{event3}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"event",
						"{{event3}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "list tagEvents after merge 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4a1a6db4-5c61-411a-95a2-f0ba3c300b23",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Validate the event is tagged with our tag.\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Brand new Tag\");",
							"    pm.expect(pm.response.text()).to.include('Tag to test new tags events.');",
							"    pm.expect(pm.response.text()).to.include('Red');",
							"    pm.expect(pm.response.text()).to.include('tag-red');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/event/{{event4}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"event",
						"{{event4}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete TagEvent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eabc81f5-b819-4290-b497-24862b2010c2",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Success no data returned.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql('success');",
							"    ",
							"    var data = jsonData.data",
							"    pm.expect(data).to.eql({});",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": true
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n  \"ids\":[{{tag_event_id}},{{tag_event_id3}},{{tag_event_id4}},{{tag_event_id5}}]\n}"
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/event/",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"event",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "list tagEvent after delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "33c3d2b2-c554-4ce6-9dee-07ba44973824",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Get an empty list, tagEvent deleted.\", function () {",
							"    var response = pm.response.json();",
							"    pm.expect(response.data).to.eql([]);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/event/{{event1}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"event",
						"{{event1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "list tagEvent after delete 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "aa828d61-e0e3-4d35-bded-1ae61bdf281f",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Validate the event does no longer have the tag.\", function () {",
							"    pm.expect(pm.response.text()).to.not.include(\"Brand new Tag\");",
							"    pm.expect(pm.response.text()).to.not.include('Tag to test new tags events.');",
							"   ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/event/{{event2}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"event",
						"{{event2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "list tagEvent after delete 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "22456c53-4d7a-4dc3-a19f-7c2daa96f809",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Validate the event does no longer have the tag.\", function () {",
							"    pm.expect(pm.response.text()).to.not.include(\"Brand new Tag\");",
							"    pm.expect(pm.response.text()).to.not.include('Tag to test new tags events.');",
							"   ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/event/{{event3}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"event",
						"{{event3}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "list tagEvent after delete 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "83825b1a-2cd0-47e7-bb57-fddbc746b806",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Validate the event does no longer have the tag.\", function () {",
							"    pm.expect(pm.response.text()).to.not.include(\"Brand new Tag\");",
							"    pm.expect(pm.response.text()).to.not.include('Tag to test new tags events.');",
							"   ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/event/{{event4}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"event",
						"{{event4}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Tag",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eabc81f5-b819-4290-b497-24862b2010c2",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Success no data returned.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql('success');",
							"    ",
							"    var data = jsonData.data",
							"    pm.expect(data).to.eql({});",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": true
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/tdstm/ws/tag/{{tag_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag",
						"{{tag_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "list tags after delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "049e3830-bb5f-416f-a034-e408875b1317",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Tags that had been created are now deleted.\", function () {",
							"    var response = pm.response.json();",
							"     pm.expect(pm.response.text()).to.not.include(\"Brand new Tag\");",
							"     pm.expect(pm.response.text()).to.not.include(\"Tag to test new tags events.\");",
							"});",
							"",
							"//cleanup code",
							"pm.globals.unset(\"tag_id\");",
							"pm.globals.unset(\"tag_id2\");",
							"pm.globals.unset(\"tag_event_id\");",
							"pm.globals.unset(\"tag_event_id2\");",
							"pm.globals.unset(\"tag_event_id3\");",
							"pm.globals.unset(\"tag_event_id4\");",
							"pm.globals.unset(\"tag_event_id5\");",
							"pm.globals.unset(\"validator\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{host}}/tdstm/ws/tag",
					"host": [
						"{{host}}"
					],
					"path": [
						"tdstm",
						"ws",
						"tag"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "43493b28-f182-4072-8158-febb5a29128b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "df2564eb-afb6-492c-b718-de955d16cb37",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "44f29fea-c3fc-4cc7-8c43-c47007e77d7c",
			"key": "projectId",
			"value": "2445",
			"type": "string"
		}
	]
}