package assetLists

import io.gatling.core.Predef._
import io.gatling.http.Predef._
import scala.concurrent.duration._
import Headers._

object GetListDbs {

  val scn = scenario("Get List Dbs")
    .exec(http("dbs login")
        .get("/tdstm/auth/login")
        .check(status.is(200))
        .check(regex("""<title>Login</title>"""))
    )
    .pause(6)
    .feed(csv("user_tds.csv").circular)
    .exec(http("dbs signIn")
        .post("/tdstm/auth/signIn")
        .headers(headers_3)
        .formParam("targetUri", "")
        .formParam("username", "${username}")
        .formParam("password", "${password}")
        .check(status.is(200))
    )
    .pause(1)
    .exec(http("dbs userLogin updateLastPageLoad")
        .post("/tdstm/userLogin/updateLastPageLoad")
        .headers(headers_4)
        .formParam("url", "/tdstm/project/show")
        .check(status.is(200))  
        .check(bodyString.is("SUCCESS"))
    )
    .pause(4)
    .exec(http("dbs database index")
        .get("/tdstm/database/index")
        .check(status.is(200))
        .check(regex("<title>DB list</title>"))
    )
    .pause(2)
    .exec(http("dbs userLogin updateLastPageLoad_2")
        .post("/tdstm/userLogin/updateLastPageLoad")
        .headers(headers_4)
        .formParam("url", "/tdstm/database/list")
        .check(status.is(200))  
        .check(bodyString.is("SUCCESS"))
    )
    .pause(38 milliseconds)
    .exec(http("dbs database listJson")
        .get("/tdstm/database/listJson")
        .headers(headers_7)
        .queryParam("assetName", "")
        .queryParam("validation", "")
        .queryParam("moveBundle", "")
        .queryParam("sidx", "assetName")
        .queryParam("rows", "100")
        .queryParam("dbFormat", "")
        .queryParam("sord", "asc")
        .queryParam("moveBundleId", "")
        .queryParam("plannedStatus", "")
        .queryParam("page", "1")
        .queryParam("event", "")
        .queryParam("nd", "1399986194284")
        .queryParam("planStatus", "")
        .queryParam("filter", "")
        .queryParam("toValidate", "")
        .queryParam("_search", "false")
        .check(status.is(200))
    )
    .pause(5)
    .exec(http("dbs signOut")
        .get("/tdstm/auth/signOut")
        .check(status.is(200))
        .check(regex("<title>Login</title>"))
    )
}