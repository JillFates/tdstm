package assetLists

import io.gatling.core.Predef._
import io.gatling.http.Predef._
import scala.concurrent.duration._
import Headers._

object GetListServers {
  val scn = scenario("Scenario Name")
    .exec(http("server login")
        .get("/tdstm/auth/login")
        .check(status.is(200))
        .check(regex("<title>Login</title>"))
     )
    .pause(5)
    .feed(csv("user_tds.csv").circular)
    .exec(http("server singIn")
        .post("/tdstm/auth/signIn")
        .headers(headers_3)
        .formParam("targetUri", "")
        .formParam("username", "${username}")
        .formParam("password", "${password}")
        .check(status.is(200))
    )
    .pause(1)
    .exec(http("server userLogin updateLastPageLoad")
        .post("/tdstm/userLogin/updateLastPageLoad")
        .headers(headers_2)
        .formParam("url", "/tdstm/project/show")
        .check(status.is(200))  
        .check(bodyString.is("SUCCESS"))
    )
    .pause(12)
    .exec(http("server assetEntity Index")
        .get("/tdstm/assetEntity/index")
        .queryParam("filter", "server")
        .check(status.is(200))
        .check(regex("<title>Server List</title>"))
    )
    .pause(2)
    .exec(http("server userLogin updateLastPageLoad_2")
        .post("/tdstm/userLogin/updateLastPageLoad")
        .headers(headers_2)
        .formParam("url", "/tdstm/assetEntity/list")
        .check(status.is(200))  
        .check(bodyString.is("SUCCESS"))
    )
    .pause(103 milliseconds)
    .exec(http("server assetEntity listJson")
        .get("/tdstm/assetEntity/listJson")
        .headers(headers_5)
        .queryParam("assetName", "")
        .queryParam("model", "")
        .queryParam("moveBundle", "")
        .queryParam("targetRack", "")
        .queryParam("listType", "server")
        .queryParam("serialNumber", "")
        .queryParam("sidx", "assetName")
        .queryParam("sourceRack", "")
        .queryParam("type", "")
        .queryParam("assetTag", "")
        .queryParam("rows", "100")
        .queryParam("sord", "asc")
        .queryParam("moveBundleId", "")
        .queryParam("sourceLocation", "")
        .queryParam("plannedStatus", "")
        .queryParam("page", "1")
        .queryParam("assetType", "")
        .queryParam("nd", "1399984897975")
        .queryParam("event", "")
        .queryParam("planStatus", "")
        .queryParam("targetLocation", "")
        .queryParam("filter", "")
        .queryParam("_search", "false")
        .check(status.is(200))
    )
    .pause(9)
    .exec(http("server assetEntity listJson_2")
        .get("/tdstm/assetEntity/listJson")
        .headers(headers_5)
        .queryParam("assetName", "")
        .queryParam("model", "")
        .queryParam("moveBundle", "")
        .queryParam("targetRack", "")
        .queryParam("listType", "server")
        .queryParam("serialNumber", "")
        .queryParam("sidx", "assetName")
        .queryParam("sourceRack", "")
        .queryParam("type", "")
        .queryParam("assetTag", "")
        .queryParam("rows", "100")
        .queryParam("sord", "asc")
        .queryParam("moveBundleId", "")
        .queryParam("sourceLocation", "")
        .queryParam("plannedStatus", "")
        .queryParam("page", "2")
        .queryParam("assetType", "")
        .queryParam("nd", "1399984907625")
        .queryParam("event", "")
        .queryParam("planStatus", "")
        .queryParam("targetLocation", "")
        .queryParam("filter", "")
        .queryParam("_search", "false")
        .check(status.is(200))
    )
    .pause(6)
    .exec(http("server signOut")
        .get("/tdstm/auth/signOut")
        .check(status.is(200))
        .check(regex("<title>Login</title>"))
    )
}